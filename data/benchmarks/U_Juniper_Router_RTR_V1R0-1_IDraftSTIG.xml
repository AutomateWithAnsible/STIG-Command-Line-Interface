<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/xsl' href='STIG_unclass.xsl'?>
<Benchmark xmlns="http://checklists.nist.gov/xccdf/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cpe="http://cpe.mitre.org/language/2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" id="Juniper_Router_RTR_STIG" xml:lang="en" xsi:schemaLocation="http://checklists.nist.gov/xccdf/1.1 http://nvd.nist.gov/schema/xccdf-1.1.4.xsd http://cpe.mitre.org/dictionary/2.0 http://cpe.mitre.org/files/cpe-dictionary_2.1.xsd">
  <status date="2018-08-30">draft</status>
  <title>Juniper Router RTR Security Technical Implementation Guide</title>
  <description>This Security Technical Implementation Guide is published as a tool to improve the security of Department of Defense (DoD) information systems. The requirements are derived from the National Institute of Standards and Technology (NIST) 800-53 and related documents. Comments or proposed revisions to this document should be sent via email to the following address: disa.stig_spt@mail.mil.</description>
  <notice id="terms-of-use" xml:lang="en" />
  <reference href="http://iase.disa.mil">
    <dc:publisher>DISA, Field Security Operations</dc:publisher>
    <dc:source>STIG.DOD.MIL</dc:source>
  </reference>
  <plain-text id="release-info">Release: 0.1 Benchmark Date: 05 Sep 2018</plain-text>
  <version>1</version>
  <Profile id="MAC-1_Public">
    <title>I - Mission Critical Public</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="JUNI-RT-000010" selected="true" />
    <select idref="JUNI-RT-000020" selected="true" />
    <select idref="JUNI-RT-000030" selected="true" />
    <select idref="JUNI-RT-000040" selected="true" />
    <select idref="JUNI-RT-000050" selected="true" />
    <select idref="JUNI-RT-000060" selected="true" />
    <select idref="JUNI-RT-000070" selected="true" />
    <select idref="JUNI-RT-000120" selected="true" />
    <select idref="JUNI-RT-000130" selected="true" />
    <select idref="JUNI-RT-000140" selected="true" />
    <select idref="JUNI-RT-000150" selected="true" />
    <select idref="JUNI-RT-000170" selected="true" />
    <select idref="JUNI-RT-000180" selected="true" />
    <select idref="JUNI-RT-000190" selected="true" />
    <select idref="JUNI-RT-000200" selected="true" />
    <select idref="JUNI-RT-000210" selected="true" />
    <select idref="JUNI-RT-000220" selected="true" />
    <select idref="JUNI-RT-000230" selected="true" />
    <select idref="JUNI-RT-000240" selected="true" />
    <select idref="JUNI-RT-000250" selected="true" />
    <select idref="JUNI-RT-000260" selected="true" />
    <select idref="JUNI-RT-000270" selected="true" />
    <select idref="JUNI-RT-000280" selected="true" />
    <select idref="JUNI-RT-000290" selected="true" />
    <select idref="JUNI-RT-000300" selected="true" />
    <select idref="JUNI-RT-000310" selected="true" />
    <select idref="JUNI-RT-000320" selected="true" />
    <select idref="JUNI-RT-000330" selected="true" />
    <select idref="JUNI-RT-000340" selected="true" />
    <select idref="JUNI-RT-000350" selected="true" />
    <select idref="JUNI-RT-000360" selected="true" />
    <select idref="JUNI-RT-000370" selected="true" />
    <select idref="JUNI-RT-000380" selected="true" />
    <select idref="JUNI-RT-000390" selected="true" />
    <select idref="JUNI-RT-000400" selected="true" />
    <select idref="JUNI-RT-000410" selected="true" />
    <select idref="JUNI-RT-000420" selected="true" />
    <select idref="JUNI-RT-000430" selected="true" />
    <select idref="JUNI-RT-000440" selected="true" />
    <select idref="JUNI-RT-000450" selected="true" />
    <select idref="JUNI-RT-000460" selected="true" />
    <select idref="JUNI-RT-000470" selected="true" />
    <select idref="JUNI-RT-000480" selected="true" />
    <select idref="JUNI-RT-000490" selected="true" />
    <select idref="JUNI-RT-000500" selected="true" />
    <select idref="JUNI-RT-000510" selected="true" />
    <select idref="JUNI-RT-000520" selected="true" />
    <select idref="JUNI-RT-000530" selected="true" />
    <select idref="JUNI-RT-000540" selected="true" />
    <select idref="JUNI-RT-000550" selected="true" />
    <select idref="JUNI-RT-000560" selected="true" />
    <select idref="JUNI-RT-000570" selected="true" />
    <select idref="JUNI-RT-000580" selected="true" />
    <select idref="JUNI-RT-000590" selected="true" />
    <select idref="JUNI-RT-000600" selected="true" />
    <select idref="JUNI-RT-000610" selected="true" />
    <select idref="JUNI-RT-000620" selected="true" />
    <select idref="JUNI-RT-000630" selected="true" />
    <select idref="JUNI-RT-000640" selected="true" />
    <select idref="JUNI-RT-000650" selected="true" />
    <select idref="JUNI-RT-000660" selected="true" />
    <select idref="JUNI-RT-000680" selected="true" />
    <select idref="JUNI-RT-000690" selected="true" />
    <select idref="JUNI-RT-000700" selected="true" />
    <select idref="JUNI-RT-000710" selected="true" />
    <select idref="JUNI-RT-000720" selected="true" />
    <select idref="JUNI-RT-000730" selected="true" />
    <select idref="JUNI-RT-000740" selected="true" />
    <select idref="JUNI-RT-000750" selected="true" />
    <select idref="JUNI-RT-000760" selected="true" />
    <select idref="JUNI-RT-000770" selected="true" />
    <select idref="JUNI-RT-000780" selected="true" />
    <select idref="JUNI-RT-000790" selected="true" />
    <select idref="JUNI-RT-000800" selected="true" />
    <select idref="JUNI-RT-000810" selected="true" />
    <select idref="JUNI-RT-000820" selected="true" />
    <select idref="JUNI-RT-000830" selected="true" />
    <select idref="JUNI-RT-000840" selected="true" />
    <select idref="JUNI-RT-000850" selected="true" />
    <select idref="JUNI-RT-000860" selected="true" />
    <select idref="JUNI-RT-000870" selected="true" />
    <select idref="JUNI-RT-000880" selected="true" />
    <select idref="JUNI-RT-000890" selected="true" />
    <select idref="JUNI-RT-000900" selected="true" />
    <select idref="JUNI-RT-000910" selected="true" />
    <select idref="JUNI-RT-000920" selected="true" />
    <select idref="JUNI-RT-000930" selected="true" />
    <select idref="JUNI-RT-000940" selected="true" />
  </Profile>
  <Profile id="MAC-1_Sensitive">
    <title>I - Mission Critical Sensitive</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="JUNI-RT-000010" selected="true" />
    <select idref="JUNI-RT-000020" selected="true" />
    <select idref="JUNI-RT-000030" selected="true" />
    <select idref="JUNI-RT-000040" selected="true" />
    <select idref="JUNI-RT-000050" selected="true" />
    <select idref="JUNI-RT-000060" selected="true" />
    <select idref="JUNI-RT-000070" selected="true" />
    <select idref="JUNI-RT-000120" selected="true" />
    <select idref="JUNI-RT-000130" selected="true" />
    <select idref="JUNI-RT-000140" selected="true" />
    <select idref="JUNI-RT-000150" selected="true" />
    <select idref="JUNI-RT-000170" selected="true" />
    <select idref="JUNI-RT-000180" selected="true" />
    <select idref="JUNI-RT-000190" selected="true" />
    <select idref="JUNI-RT-000200" selected="true" />
    <select idref="JUNI-RT-000210" selected="true" />
    <select idref="JUNI-RT-000220" selected="true" />
    <select idref="JUNI-RT-000230" selected="true" />
    <select idref="JUNI-RT-000240" selected="true" />
    <select idref="JUNI-RT-000250" selected="true" />
    <select idref="JUNI-RT-000260" selected="true" />
    <select idref="JUNI-RT-000270" selected="true" />
    <select idref="JUNI-RT-000280" selected="true" />
    <select idref="JUNI-RT-000290" selected="true" />
    <select idref="JUNI-RT-000300" selected="true" />
    <select idref="JUNI-RT-000310" selected="true" />
    <select idref="JUNI-RT-000320" selected="true" />
    <select idref="JUNI-RT-000330" selected="true" />
    <select idref="JUNI-RT-000340" selected="true" />
    <select idref="JUNI-RT-000350" selected="true" />
    <select idref="JUNI-RT-000360" selected="true" />
    <select idref="JUNI-RT-000370" selected="true" />
    <select idref="JUNI-RT-000380" selected="true" />
    <select idref="JUNI-RT-000390" selected="true" />
    <select idref="JUNI-RT-000400" selected="true" />
    <select idref="JUNI-RT-000410" selected="true" />
    <select idref="JUNI-RT-000420" selected="true" />
    <select idref="JUNI-RT-000430" selected="true" />
    <select idref="JUNI-RT-000440" selected="true" />
    <select idref="JUNI-RT-000450" selected="true" />
    <select idref="JUNI-RT-000460" selected="true" />
    <select idref="JUNI-RT-000470" selected="true" />
    <select idref="JUNI-RT-000480" selected="true" />
    <select idref="JUNI-RT-000490" selected="true" />
    <select idref="JUNI-RT-000500" selected="true" />
    <select idref="JUNI-RT-000510" selected="true" />
    <select idref="JUNI-RT-000520" selected="true" />
    <select idref="JUNI-RT-000530" selected="true" />
    <select idref="JUNI-RT-000540" selected="true" />
    <select idref="JUNI-RT-000550" selected="true" />
    <select idref="JUNI-RT-000560" selected="true" />
    <select idref="JUNI-RT-000570" selected="true" />
    <select idref="JUNI-RT-000580" selected="true" />
    <select idref="JUNI-RT-000590" selected="true" />
    <select idref="JUNI-RT-000600" selected="true" />
    <select idref="JUNI-RT-000610" selected="true" />
    <select idref="JUNI-RT-000620" selected="true" />
    <select idref="JUNI-RT-000630" selected="true" />
    <select idref="JUNI-RT-000640" selected="true" />
    <select idref="JUNI-RT-000650" selected="true" />
    <select idref="JUNI-RT-000660" selected="true" />
    <select idref="JUNI-RT-000680" selected="true" />
    <select idref="JUNI-RT-000690" selected="true" />
    <select idref="JUNI-RT-000700" selected="true" />
    <select idref="JUNI-RT-000710" selected="true" />
    <select idref="JUNI-RT-000720" selected="true" />
    <select idref="JUNI-RT-000730" selected="true" />
    <select idref="JUNI-RT-000740" selected="true" />
    <select idref="JUNI-RT-000750" selected="true" />
    <select idref="JUNI-RT-000760" selected="true" />
    <select idref="JUNI-RT-000770" selected="true" />
    <select idref="JUNI-RT-000780" selected="true" />
    <select idref="JUNI-RT-000790" selected="true" />
    <select idref="JUNI-RT-000800" selected="true" />
    <select idref="JUNI-RT-000810" selected="true" />
    <select idref="JUNI-RT-000820" selected="true" />
    <select idref="JUNI-RT-000830" selected="true" />
    <select idref="JUNI-RT-000840" selected="true" />
    <select idref="JUNI-RT-000850" selected="true" />
    <select idref="JUNI-RT-000860" selected="true" />
    <select idref="JUNI-RT-000870" selected="true" />
    <select idref="JUNI-RT-000880" selected="true" />
    <select idref="JUNI-RT-000890" selected="true" />
    <select idref="JUNI-RT-000900" selected="true" />
    <select idref="JUNI-RT-000910" selected="true" />
    <select idref="JUNI-RT-000920" selected="true" />
    <select idref="JUNI-RT-000930" selected="true" />
    <select idref="JUNI-RT-000940" selected="true" />
  </Profile>
  <Profile id="MAC-1_Classified">
    <title>I - Mission Critical Classified</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="JUNI-RT-000010" selected="true" />
    <select idref="JUNI-RT-000020" selected="true" />
    <select idref="JUNI-RT-000030" selected="true" />
    <select idref="JUNI-RT-000040" selected="true" />
    <select idref="JUNI-RT-000050" selected="true" />
    <select idref="JUNI-RT-000060" selected="true" />
    <select idref="JUNI-RT-000070" selected="true" />
    <select idref="JUNI-RT-000120" selected="true" />
    <select idref="JUNI-RT-000130" selected="true" />
    <select idref="JUNI-RT-000140" selected="true" />
    <select idref="JUNI-RT-000150" selected="true" />
    <select idref="JUNI-RT-000170" selected="true" />
    <select idref="JUNI-RT-000180" selected="true" />
    <select idref="JUNI-RT-000190" selected="true" />
    <select idref="JUNI-RT-000200" selected="true" />
    <select idref="JUNI-RT-000210" selected="true" />
    <select idref="JUNI-RT-000220" selected="true" />
    <select idref="JUNI-RT-000230" selected="true" />
    <select idref="JUNI-RT-000240" selected="true" />
    <select idref="JUNI-RT-000250" selected="true" />
    <select idref="JUNI-RT-000260" selected="true" />
    <select idref="JUNI-RT-000270" selected="true" />
    <select idref="JUNI-RT-000280" selected="true" />
    <select idref="JUNI-RT-000290" selected="true" />
    <select idref="JUNI-RT-000300" selected="true" />
    <select idref="JUNI-RT-000310" selected="true" />
    <select idref="JUNI-RT-000320" selected="true" />
    <select idref="JUNI-RT-000330" selected="true" />
    <select idref="JUNI-RT-000340" selected="true" />
    <select idref="JUNI-RT-000350" selected="true" />
    <select idref="JUNI-RT-000360" selected="true" />
    <select idref="JUNI-RT-000370" selected="true" />
    <select idref="JUNI-RT-000380" selected="true" />
    <select idref="JUNI-RT-000390" selected="true" />
    <select idref="JUNI-RT-000400" selected="true" />
    <select idref="JUNI-RT-000410" selected="true" />
    <select idref="JUNI-RT-000420" selected="true" />
    <select idref="JUNI-RT-000430" selected="true" />
    <select idref="JUNI-RT-000440" selected="true" />
    <select idref="JUNI-RT-000450" selected="true" />
    <select idref="JUNI-RT-000460" selected="true" />
    <select idref="JUNI-RT-000470" selected="true" />
    <select idref="JUNI-RT-000480" selected="true" />
    <select idref="JUNI-RT-000490" selected="true" />
    <select idref="JUNI-RT-000500" selected="true" />
    <select idref="JUNI-RT-000510" selected="true" />
    <select idref="JUNI-RT-000520" selected="true" />
    <select idref="JUNI-RT-000530" selected="true" />
    <select idref="JUNI-RT-000540" selected="true" />
    <select idref="JUNI-RT-000550" selected="true" />
    <select idref="JUNI-RT-000560" selected="true" />
    <select idref="JUNI-RT-000570" selected="true" />
    <select idref="JUNI-RT-000580" selected="true" />
    <select idref="JUNI-RT-000590" selected="true" />
    <select idref="JUNI-RT-000600" selected="true" />
    <select idref="JUNI-RT-000610" selected="true" />
    <select idref="JUNI-RT-000620" selected="true" />
    <select idref="JUNI-RT-000630" selected="true" />
    <select idref="JUNI-RT-000640" selected="true" />
    <select idref="JUNI-RT-000650" selected="true" />
    <select idref="JUNI-RT-000660" selected="true" />
    <select idref="JUNI-RT-000680" selected="true" />
    <select idref="JUNI-RT-000690" selected="true" />
    <select idref="JUNI-RT-000700" selected="true" />
    <select idref="JUNI-RT-000710" selected="true" />
    <select idref="JUNI-RT-000720" selected="true" />
    <select idref="JUNI-RT-000730" selected="true" />
    <select idref="JUNI-RT-000740" selected="true" />
    <select idref="JUNI-RT-000750" selected="true" />
    <select idref="JUNI-RT-000760" selected="true" />
    <select idref="JUNI-RT-000770" selected="true" />
    <select idref="JUNI-RT-000780" selected="true" />
    <select idref="JUNI-RT-000790" selected="true" />
    <select idref="JUNI-RT-000800" selected="true" />
    <select idref="JUNI-RT-000810" selected="true" />
    <select idref="JUNI-RT-000820" selected="true" />
    <select idref="JUNI-RT-000830" selected="true" />
    <select idref="JUNI-RT-000840" selected="true" />
    <select idref="JUNI-RT-000850" selected="true" />
    <select idref="JUNI-RT-000860" selected="true" />
    <select idref="JUNI-RT-000870" selected="true" />
    <select idref="JUNI-RT-000880" selected="true" />
    <select idref="JUNI-RT-000890" selected="true" />
    <select idref="JUNI-RT-000900" selected="true" />
    <select idref="JUNI-RT-000910" selected="true" />
    <select idref="JUNI-RT-000920" selected="true" />
    <select idref="JUNI-RT-000930" selected="true" />
    <select idref="JUNI-RT-000940" selected="true" />
  </Profile>
  <Profile id="MAC-2_Public">
    <title>II - Mission Support Public</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="JUNI-RT-000010" selected="true" />
    <select idref="JUNI-RT-000020" selected="true" />
    <select idref="JUNI-RT-000030" selected="true" />
    <select idref="JUNI-RT-000040" selected="true" />
    <select idref="JUNI-RT-000050" selected="true" />
    <select idref="JUNI-RT-000060" selected="true" />
    <select idref="JUNI-RT-000070" selected="true" />
    <select idref="JUNI-RT-000120" selected="true" />
    <select idref="JUNI-RT-000130" selected="true" />
    <select idref="JUNI-RT-000140" selected="true" />
    <select idref="JUNI-RT-000150" selected="true" />
    <select idref="JUNI-RT-000170" selected="true" />
    <select idref="JUNI-RT-000180" selected="true" />
    <select idref="JUNI-RT-000190" selected="true" />
    <select idref="JUNI-RT-000200" selected="true" />
    <select idref="JUNI-RT-000210" selected="true" />
    <select idref="JUNI-RT-000220" selected="true" />
    <select idref="JUNI-RT-000230" selected="true" />
    <select idref="JUNI-RT-000240" selected="true" />
    <select idref="JUNI-RT-000250" selected="true" />
    <select idref="JUNI-RT-000260" selected="true" />
    <select idref="JUNI-RT-000270" selected="true" />
    <select idref="JUNI-RT-000280" selected="true" />
    <select idref="JUNI-RT-000290" selected="true" />
    <select idref="JUNI-RT-000300" selected="true" />
    <select idref="JUNI-RT-000310" selected="true" />
    <select idref="JUNI-RT-000320" selected="true" />
    <select idref="JUNI-RT-000330" selected="true" />
    <select idref="JUNI-RT-000340" selected="true" />
    <select idref="JUNI-RT-000350" selected="true" />
    <select idref="JUNI-RT-000360" selected="true" />
    <select idref="JUNI-RT-000370" selected="true" />
    <select idref="JUNI-RT-000380" selected="true" />
    <select idref="JUNI-RT-000390" selected="true" />
    <select idref="JUNI-RT-000400" selected="true" />
    <select idref="JUNI-RT-000410" selected="true" />
    <select idref="JUNI-RT-000420" selected="true" />
    <select idref="JUNI-RT-000430" selected="true" />
    <select idref="JUNI-RT-000440" selected="true" />
    <select idref="JUNI-RT-000450" selected="true" />
    <select idref="JUNI-RT-000460" selected="true" />
    <select idref="JUNI-RT-000470" selected="true" />
    <select idref="JUNI-RT-000480" selected="true" />
    <select idref="JUNI-RT-000490" selected="true" />
    <select idref="JUNI-RT-000500" selected="true" />
    <select idref="JUNI-RT-000510" selected="true" />
    <select idref="JUNI-RT-000520" selected="true" />
    <select idref="JUNI-RT-000530" selected="true" />
    <select idref="JUNI-RT-000540" selected="true" />
    <select idref="JUNI-RT-000550" selected="true" />
    <select idref="JUNI-RT-000560" selected="true" />
    <select idref="JUNI-RT-000570" selected="true" />
    <select idref="JUNI-RT-000580" selected="true" />
    <select idref="JUNI-RT-000590" selected="true" />
    <select idref="JUNI-RT-000600" selected="true" />
    <select idref="JUNI-RT-000610" selected="true" />
    <select idref="JUNI-RT-000620" selected="true" />
    <select idref="JUNI-RT-000630" selected="true" />
    <select idref="JUNI-RT-000640" selected="true" />
    <select idref="JUNI-RT-000650" selected="true" />
    <select idref="JUNI-RT-000660" selected="true" />
    <select idref="JUNI-RT-000680" selected="true" />
    <select idref="JUNI-RT-000690" selected="true" />
    <select idref="JUNI-RT-000700" selected="true" />
    <select idref="JUNI-RT-000710" selected="true" />
    <select idref="JUNI-RT-000720" selected="true" />
    <select idref="JUNI-RT-000730" selected="true" />
    <select idref="JUNI-RT-000740" selected="true" />
    <select idref="JUNI-RT-000750" selected="true" />
    <select idref="JUNI-RT-000760" selected="true" />
    <select idref="JUNI-RT-000770" selected="true" />
    <select idref="JUNI-RT-000780" selected="true" />
    <select idref="JUNI-RT-000790" selected="true" />
    <select idref="JUNI-RT-000800" selected="true" />
    <select idref="JUNI-RT-000810" selected="true" />
    <select idref="JUNI-RT-000820" selected="true" />
    <select idref="JUNI-RT-000830" selected="true" />
    <select idref="JUNI-RT-000840" selected="true" />
    <select idref="JUNI-RT-000850" selected="true" />
    <select idref="JUNI-RT-000860" selected="true" />
    <select idref="JUNI-RT-000870" selected="true" />
    <select idref="JUNI-RT-000880" selected="true" />
    <select idref="JUNI-RT-000890" selected="true" />
    <select idref="JUNI-RT-000900" selected="true" />
    <select idref="JUNI-RT-000910" selected="true" />
    <select idref="JUNI-RT-000920" selected="true" />
    <select idref="JUNI-RT-000930" selected="true" />
    <select idref="JUNI-RT-000940" selected="true" />
  </Profile>
  <Profile id="MAC-2_Sensitive">
    <title>II - Mission Support Sensitive</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="JUNI-RT-000010" selected="true" />
    <select idref="JUNI-RT-000020" selected="true" />
    <select idref="JUNI-RT-000030" selected="true" />
    <select idref="JUNI-RT-000040" selected="true" />
    <select idref="JUNI-RT-000050" selected="true" />
    <select idref="JUNI-RT-000060" selected="true" />
    <select idref="JUNI-RT-000070" selected="true" />
    <select idref="JUNI-RT-000120" selected="true" />
    <select idref="JUNI-RT-000130" selected="true" />
    <select idref="JUNI-RT-000140" selected="true" />
    <select idref="JUNI-RT-000150" selected="true" />
    <select idref="JUNI-RT-000170" selected="true" />
    <select idref="JUNI-RT-000180" selected="true" />
    <select idref="JUNI-RT-000190" selected="true" />
    <select idref="JUNI-RT-000200" selected="true" />
    <select idref="JUNI-RT-000210" selected="true" />
    <select idref="JUNI-RT-000220" selected="true" />
    <select idref="JUNI-RT-000230" selected="true" />
    <select idref="JUNI-RT-000240" selected="true" />
    <select idref="JUNI-RT-000250" selected="true" />
    <select idref="JUNI-RT-000260" selected="true" />
    <select idref="JUNI-RT-000270" selected="true" />
    <select idref="JUNI-RT-000280" selected="true" />
    <select idref="JUNI-RT-000290" selected="true" />
    <select idref="JUNI-RT-000300" selected="true" />
    <select idref="JUNI-RT-000310" selected="true" />
    <select idref="JUNI-RT-000320" selected="true" />
    <select idref="JUNI-RT-000330" selected="true" />
    <select idref="JUNI-RT-000340" selected="true" />
    <select idref="JUNI-RT-000350" selected="true" />
    <select idref="JUNI-RT-000360" selected="true" />
    <select idref="JUNI-RT-000370" selected="true" />
    <select idref="JUNI-RT-000380" selected="true" />
    <select idref="JUNI-RT-000390" selected="true" />
    <select idref="JUNI-RT-000400" selected="true" />
    <select idref="JUNI-RT-000410" selected="true" />
    <select idref="JUNI-RT-000420" selected="true" />
    <select idref="JUNI-RT-000430" selected="true" />
    <select idref="JUNI-RT-000440" selected="true" />
    <select idref="JUNI-RT-000450" selected="true" />
    <select idref="JUNI-RT-000460" selected="true" />
    <select idref="JUNI-RT-000470" selected="true" />
    <select idref="JUNI-RT-000480" selected="true" />
    <select idref="JUNI-RT-000490" selected="true" />
    <select idref="JUNI-RT-000500" selected="true" />
    <select idref="JUNI-RT-000510" selected="true" />
    <select idref="JUNI-RT-000520" selected="true" />
    <select idref="JUNI-RT-000530" selected="true" />
    <select idref="JUNI-RT-000540" selected="true" />
    <select idref="JUNI-RT-000550" selected="true" />
    <select idref="JUNI-RT-000560" selected="true" />
    <select idref="JUNI-RT-000570" selected="true" />
    <select idref="JUNI-RT-000580" selected="true" />
    <select idref="JUNI-RT-000590" selected="true" />
    <select idref="JUNI-RT-000600" selected="true" />
    <select idref="JUNI-RT-000610" selected="true" />
    <select idref="JUNI-RT-000620" selected="true" />
    <select idref="JUNI-RT-000630" selected="true" />
    <select idref="JUNI-RT-000640" selected="true" />
    <select idref="JUNI-RT-000650" selected="true" />
    <select idref="JUNI-RT-000660" selected="true" />
    <select idref="JUNI-RT-000680" selected="true" />
    <select idref="JUNI-RT-000690" selected="true" />
    <select idref="JUNI-RT-000700" selected="true" />
    <select idref="JUNI-RT-000710" selected="true" />
    <select idref="JUNI-RT-000720" selected="true" />
    <select idref="JUNI-RT-000730" selected="true" />
    <select idref="JUNI-RT-000740" selected="true" />
    <select idref="JUNI-RT-000750" selected="true" />
    <select idref="JUNI-RT-000760" selected="true" />
    <select idref="JUNI-RT-000770" selected="true" />
    <select idref="JUNI-RT-000780" selected="true" />
    <select idref="JUNI-RT-000790" selected="true" />
    <select idref="JUNI-RT-000800" selected="true" />
    <select idref="JUNI-RT-000810" selected="true" />
    <select idref="JUNI-RT-000820" selected="true" />
    <select idref="JUNI-RT-000830" selected="true" />
    <select idref="JUNI-RT-000840" selected="true" />
    <select idref="JUNI-RT-000850" selected="true" />
    <select idref="JUNI-RT-000860" selected="true" />
    <select idref="JUNI-RT-000870" selected="true" />
    <select idref="JUNI-RT-000880" selected="true" />
    <select idref="JUNI-RT-000890" selected="true" />
    <select idref="JUNI-RT-000900" selected="true" />
    <select idref="JUNI-RT-000910" selected="true" />
    <select idref="JUNI-RT-000920" selected="true" />
    <select idref="JUNI-RT-000930" selected="true" />
    <select idref="JUNI-RT-000940" selected="true" />
  </Profile>
  <Profile id="MAC-2_Classified">
    <title>II - Mission Support Classified</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="JUNI-RT-000010" selected="true" />
    <select idref="JUNI-RT-000020" selected="true" />
    <select idref="JUNI-RT-000030" selected="true" />
    <select idref="JUNI-RT-000040" selected="true" />
    <select idref="JUNI-RT-000050" selected="true" />
    <select idref="JUNI-RT-000060" selected="true" />
    <select idref="JUNI-RT-000070" selected="true" />
    <select idref="JUNI-RT-000120" selected="true" />
    <select idref="JUNI-RT-000130" selected="true" />
    <select idref="JUNI-RT-000140" selected="true" />
    <select idref="JUNI-RT-000150" selected="true" />
    <select idref="JUNI-RT-000170" selected="true" />
    <select idref="JUNI-RT-000180" selected="true" />
    <select idref="JUNI-RT-000190" selected="true" />
    <select idref="JUNI-RT-000200" selected="true" />
    <select idref="JUNI-RT-000210" selected="true" />
    <select idref="JUNI-RT-000220" selected="true" />
    <select idref="JUNI-RT-000230" selected="true" />
    <select idref="JUNI-RT-000240" selected="true" />
    <select idref="JUNI-RT-000250" selected="true" />
    <select idref="JUNI-RT-000260" selected="true" />
    <select idref="JUNI-RT-000270" selected="true" />
    <select idref="JUNI-RT-000280" selected="true" />
    <select idref="JUNI-RT-000290" selected="true" />
    <select idref="JUNI-RT-000300" selected="true" />
    <select idref="JUNI-RT-000310" selected="true" />
    <select idref="JUNI-RT-000320" selected="true" />
    <select idref="JUNI-RT-000330" selected="true" />
    <select idref="JUNI-RT-000340" selected="true" />
    <select idref="JUNI-RT-000350" selected="true" />
    <select idref="JUNI-RT-000360" selected="true" />
    <select idref="JUNI-RT-000370" selected="true" />
    <select idref="JUNI-RT-000380" selected="true" />
    <select idref="JUNI-RT-000390" selected="true" />
    <select idref="JUNI-RT-000400" selected="true" />
    <select idref="JUNI-RT-000410" selected="true" />
    <select idref="JUNI-RT-000420" selected="true" />
    <select idref="JUNI-RT-000430" selected="true" />
    <select idref="JUNI-RT-000440" selected="true" />
    <select idref="JUNI-RT-000450" selected="true" />
    <select idref="JUNI-RT-000460" selected="true" />
    <select idref="JUNI-RT-000470" selected="true" />
    <select idref="JUNI-RT-000480" selected="true" />
    <select idref="JUNI-RT-000490" selected="true" />
    <select idref="JUNI-RT-000500" selected="true" />
    <select idref="JUNI-RT-000510" selected="true" />
    <select idref="JUNI-RT-000520" selected="true" />
    <select idref="JUNI-RT-000530" selected="true" />
    <select idref="JUNI-RT-000540" selected="true" />
    <select idref="JUNI-RT-000550" selected="true" />
    <select idref="JUNI-RT-000560" selected="true" />
    <select idref="JUNI-RT-000570" selected="true" />
    <select idref="JUNI-RT-000580" selected="true" />
    <select idref="JUNI-RT-000590" selected="true" />
    <select idref="JUNI-RT-000600" selected="true" />
    <select idref="JUNI-RT-000610" selected="true" />
    <select idref="JUNI-RT-000620" selected="true" />
    <select idref="JUNI-RT-000630" selected="true" />
    <select idref="JUNI-RT-000640" selected="true" />
    <select idref="JUNI-RT-000650" selected="true" />
    <select idref="JUNI-RT-000660" selected="true" />
    <select idref="JUNI-RT-000680" selected="true" />
    <select idref="JUNI-RT-000690" selected="true" />
    <select idref="JUNI-RT-000700" selected="true" />
    <select idref="JUNI-RT-000710" selected="true" />
    <select idref="JUNI-RT-000720" selected="true" />
    <select idref="JUNI-RT-000730" selected="true" />
    <select idref="JUNI-RT-000740" selected="true" />
    <select idref="JUNI-RT-000750" selected="true" />
    <select idref="JUNI-RT-000760" selected="true" />
    <select idref="JUNI-RT-000770" selected="true" />
    <select idref="JUNI-RT-000780" selected="true" />
    <select idref="JUNI-RT-000790" selected="true" />
    <select idref="JUNI-RT-000800" selected="true" />
    <select idref="JUNI-RT-000810" selected="true" />
    <select idref="JUNI-RT-000820" selected="true" />
    <select idref="JUNI-RT-000830" selected="true" />
    <select idref="JUNI-RT-000840" selected="true" />
    <select idref="JUNI-RT-000850" selected="true" />
    <select idref="JUNI-RT-000860" selected="true" />
    <select idref="JUNI-RT-000870" selected="true" />
    <select idref="JUNI-RT-000880" selected="true" />
    <select idref="JUNI-RT-000890" selected="true" />
    <select idref="JUNI-RT-000900" selected="true" />
    <select idref="JUNI-RT-000910" selected="true" />
    <select idref="JUNI-RT-000920" selected="true" />
    <select idref="JUNI-RT-000930" selected="true" />
    <select idref="JUNI-RT-000940" selected="true" />
  </Profile>
  <Profile id="MAC-3_Public">
    <title>III - Administrative Public</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="JUNI-RT-000010" selected="true" />
    <select idref="JUNI-RT-000020" selected="true" />
    <select idref="JUNI-RT-000030" selected="true" />
    <select idref="JUNI-RT-000040" selected="true" />
    <select idref="JUNI-RT-000050" selected="true" />
    <select idref="JUNI-RT-000060" selected="true" />
    <select idref="JUNI-RT-000070" selected="true" />
    <select idref="JUNI-RT-000120" selected="true" />
    <select idref="JUNI-RT-000130" selected="true" />
    <select idref="JUNI-RT-000140" selected="true" />
    <select idref="JUNI-RT-000150" selected="true" />
    <select idref="JUNI-RT-000170" selected="true" />
    <select idref="JUNI-RT-000180" selected="true" />
    <select idref="JUNI-RT-000190" selected="true" />
    <select idref="JUNI-RT-000200" selected="true" />
    <select idref="JUNI-RT-000210" selected="true" />
    <select idref="JUNI-RT-000220" selected="true" />
    <select idref="JUNI-RT-000230" selected="true" />
    <select idref="JUNI-RT-000240" selected="true" />
    <select idref="JUNI-RT-000250" selected="true" />
    <select idref="JUNI-RT-000260" selected="true" />
    <select idref="JUNI-RT-000270" selected="true" />
    <select idref="JUNI-RT-000280" selected="true" />
    <select idref="JUNI-RT-000290" selected="true" />
    <select idref="JUNI-RT-000300" selected="true" />
    <select idref="JUNI-RT-000310" selected="true" />
    <select idref="JUNI-RT-000320" selected="true" />
    <select idref="JUNI-RT-000330" selected="true" />
    <select idref="JUNI-RT-000340" selected="true" />
    <select idref="JUNI-RT-000350" selected="true" />
    <select idref="JUNI-RT-000360" selected="true" />
    <select idref="JUNI-RT-000370" selected="true" />
    <select idref="JUNI-RT-000380" selected="true" />
    <select idref="JUNI-RT-000390" selected="true" />
    <select idref="JUNI-RT-000400" selected="true" />
    <select idref="JUNI-RT-000410" selected="true" />
    <select idref="JUNI-RT-000420" selected="true" />
    <select idref="JUNI-RT-000430" selected="true" />
    <select idref="JUNI-RT-000440" selected="true" />
    <select idref="JUNI-RT-000450" selected="true" />
    <select idref="JUNI-RT-000460" selected="true" />
    <select idref="JUNI-RT-000470" selected="true" />
    <select idref="JUNI-RT-000480" selected="true" />
    <select idref="JUNI-RT-000490" selected="true" />
    <select idref="JUNI-RT-000500" selected="true" />
    <select idref="JUNI-RT-000510" selected="true" />
    <select idref="JUNI-RT-000520" selected="true" />
    <select idref="JUNI-RT-000530" selected="true" />
    <select idref="JUNI-RT-000540" selected="true" />
    <select idref="JUNI-RT-000550" selected="true" />
    <select idref="JUNI-RT-000560" selected="true" />
    <select idref="JUNI-RT-000570" selected="true" />
    <select idref="JUNI-RT-000580" selected="true" />
    <select idref="JUNI-RT-000590" selected="true" />
    <select idref="JUNI-RT-000600" selected="true" />
    <select idref="JUNI-RT-000610" selected="true" />
    <select idref="JUNI-RT-000620" selected="true" />
    <select idref="JUNI-RT-000630" selected="true" />
    <select idref="JUNI-RT-000640" selected="true" />
    <select idref="JUNI-RT-000650" selected="true" />
    <select idref="JUNI-RT-000660" selected="true" />
    <select idref="JUNI-RT-000680" selected="true" />
    <select idref="JUNI-RT-000690" selected="true" />
    <select idref="JUNI-RT-000700" selected="true" />
    <select idref="JUNI-RT-000710" selected="true" />
    <select idref="JUNI-RT-000720" selected="true" />
    <select idref="JUNI-RT-000730" selected="true" />
    <select idref="JUNI-RT-000740" selected="true" />
    <select idref="JUNI-RT-000750" selected="true" />
    <select idref="JUNI-RT-000760" selected="true" />
    <select idref="JUNI-RT-000770" selected="true" />
    <select idref="JUNI-RT-000780" selected="true" />
    <select idref="JUNI-RT-000790" selected="true" />
    <select idref="JUNI-RT-000800" selected="true" />
    <select idref="JUNI-RT-000810" selected="true" />
    <select idref="JUNI-RT-000820" selected="true" />
    <select idref="JUNI-RT-000830" selected="true" />
    <select idref="JUNI-RT-000840" selected="true" />
    <select idref="JUNI-RT-000850" selected="true" />
    <select idref="JUNI-RT-000860" selected="true" />
    <select idref="JUNI-RT-000870" selected="true" />
    <select idref="JUNI-RT-000880" selected="true" />
    <select idref="JUNI-RT-000890" selected="true" />
    <select idref="JUNI-RT-000900" selected="true" />
    <select idref="JUNI-RT-000910" selected="true" />
    <select idref="JUNI-RT-000920" selected="true" />
    <select idref="JUNI-RT-000930" selected="true" />
    <select idref="JUNI-RT-000940" selected="true" />
  </Profile>
  <Profile id="MAC-3_Sensitive">
    <title>III - Administrative Sensitive</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="JUNI-RT-000010" selected="true" />
    <select idref="JUNI-RT-000020" selected="true" />
    <select idref="JUNI-RT-000030" selected="true" />
    <select idref="JUNI-RT-000040" selected="true" />
    <select idref="JUNI-RT-000050" selected="true" />
    <select idref="JUNI-RT-000060" selected="true" />
    <select idref="JUNI-RT-000070" selected="true" />
    <select idref="JUNI-RT-000120" selected="true" />
    <select idref="JUNI-RT-000130" selected="true" />
    <select idref="JUNI-RT-000140" selected="true" />
    <select idref="JUNI-RT-000150" selected="true" />
    <select idref="JUNI-RT-000170" selected="true" />
    <select idref="JUNI-RT-000180" selected="true" />
    <select idref="JUNI-RT-000190" selected="true" />
    <select idref="JUNI-RT-000200" selected="true" />
    <select idref="JUNI-RT-000210" selected="true" />
    <select idref="JUNI-RT-000220" selected="true" />
    <select idref="JUNI-RT-000230" selected="true" />
    <select idref="JUNI-RT-000240" selected="true" />
    <select idref="JUNI-RT-000250" selected="true" />
    <select idref="JUNI-RT-000260" selected="true" />
    <select idref="JUNI-RT-000270" selected="true" />
    <select idref="JUNI-RT-000280" selected="true" />
    <select idref="JUNI-RT-000290" selected="true" />
    <select idref="JUNI-RT-000300" selected="true" />
    <select idref="JUNI-RT-000310" selected="true" />
    <select idref="JUNI-RT-000320" selected="true" />
    <select idref="JUNI-RT-000330" selected="true" />
    <select idref="JUNI-RT-000340" selected="true" />
    <select idref="JUNI-RT-000350" selected="true" />
    <select idref="JUNI-RT-000360" selected="true" />
    <select idref="JUNI-RT-000370" selected="true" />
    <select idref="JUNI-RT-000380" selected="true" />
    <select idref="JUNI-RT-000390" selected="true" />
    <select idref="JUNI-RT-000400" selected="true" />
    <select idref="JUNI-RT-000410" selected="true" />
    <select idref="JUNI-RT-000420" selected="true" />
    <select idref="JUNI-RT-000430" selected="true" />
    <select idref="JUNI-RT-000440" selected="true" />
    <select idref="JUNI-RT-000450" selected="true" />
    <select idref="JUNI-RT-000460" selected="true" />
    <select idref="JUNI-RT-000470" selected="true" />
    <select idref="JUNI-RT-000480" selected="true" />
    <select idref="JUNI-RT-000490" selected="true" />
    <select idref="JUNI-RT-000500" selected="true" />
    <select idref="JUNI-RT-000510" selected="true" />
    <select idref="JUNI-RT-000520" selected="true" />
    <select idref="JUNI-RT-000530" selected="true" />
    <select idref="JUNI-RT-000540" selected="true" />
    <select idref="JUNI-RT-000550" selected="true" />
    <select idref="JUNI-RT-000560" selected="true" />
    <select idref="JUNI-RT-000570" selected="true" />
    <select idref="JUNI-RT-000580" selected="true" />
    <select idref="JUNI-RT-000590" selected="true" />
    <select idref="JUNI-RT-000600" selected="true" />
    <select idref="JUNI-RT-000610" selected="true" />
    <select idref="JUNI-RT-000620" selected="true" />
    <select idref="JUNI-RT-000630" selected="true" />
    <select idref="JUNI-RT-000640" selected="true" />
    <select idref="JUNI-RT-000650" selected="true" />
    <select idref="JUNI-RT-000660" selected="true" />
    <select idref="JUNI-RT-000680" selected="true" />
    <select idref="JUNI-RT-000690" selected="true" />
    <select idref="JUNI-RT-000700" selected="true" />
    <select idref="JUNI-RT-000710" selected="true" />
    <select idref="JUNI-RT-000720" selected="true" />
    <select idref="JUNI-RT-000730" selected="true" />
    <select idref="JUNI-RT-000740" selected="true" />
    <select idref="JUNI-RT-000750" selected="true" />
    <select idref="JUNI-RT-000760" selected="true" />
    <select idref="JUNI-RT-000770" selected="true" />
    <select idref="JUNI-RT-000780" selected="true" />
    <select idref="JUNI-RT-000790" selected="true" />
    <select idref="JUNI-RT-000800" selected="true" />
    <select idref="JUNI-RT-000810" selected="true" />
    <select idref="JUNI-RT-000820" selected="true" />
    <select idref="JUNI-RT-000830" selected="true" />
    <select idref="JUNI-RT-000840" selected="true" />
    <select idref="JUNI-RT-000850" selected="true" />
    <select idref="JUNI-RT-000860" selected="true" />
    <select idref="JUNI-RT-000870" selected="true" />
    <select idref="JUNI-RT-000880" selected="true" />
    <select idref="JUNI-RT-000890" selected="true" />
    <select idref="JUNI-RT-000900" selected="true" />
    <select idref="JUNI-RT-000910" selected="true" />
    <select idref="JUNI-RT-000920" selected="true" />
    <select idref="JUNI-RT-000930" selected="true" />
    <select idref="JUNI-RT-000940" selected="true" />
  </Profile>
  <Profile id="MAC-3_Classified">
    <title>III - Administrative Classified</title>
    <description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description>
    <select idref="JUNI-RT-000010" selected="true" />
    <select idref="JUNI-RT-000020" selected="true" />
    <select idref="JUNI-RT-000030" selected="true" />
    <select idref="JUNI-RT-000040" selected="true" />
    <select idref="JUNI-RT-000050" selected="true" />
    <select idref="JUNI-RT-000060" selected="true" />
    <select idref="JUNI-RT-000070" selected="true" />
    <select idref="JUNI-RT-000120" selected="true" />
    <select idref="JUNI-RT-000130" selected="true" />
    <select idref="JUNI-RT-000140" selected="true" />
    <select idref="JUNI-RT-000150" selected="true" />
    <select idref="JUNI-RT-000170" selected="true" />
    <select idref="JUNI-RT-000180" selected="true" />
    <select idref="JUNI-RT-000190" selected="true" />
    <select idref="JUNI-RT-000200" selected="true" />
    <select idref="JUNI-RT-000210" selected="true" />
    <select idref="JUNI-RT-000220" selected="true" />
    <select idref="JUNI-RT-000230" selected="true" />
    <select idref="JUNI-RT-000240" selected="true" />
    <select idref="JUNI-RT-000250" selected="true" />
    <select idref="JUNI-RT-000260" selected="true" />
    <select idref="JUNI-RT-000270" selected="true" />
    <select idref="JUNI-RT-000280" selected="true" />
    <select idref="JUNI-RT-000290" selected="true" />
    <select idref="JUNI-RT-000300" selected="true" />
    <select idref="JUNI-RT-000310" selected="true" />
    <select idref="JUNI-RT-000320" selected="true" />
    <select idref="JUNI-RT-000330" selected="true" />
    <select idref="JUNI-RT-000340" selected="true" />
    <select idref="JUNI-RT-000350" selected="true" />
    <select idref="JUNI-RT-000360" selected="true" />
    <select idref="JUNI-RT-000370" selected="true" />
    <select idref="JUNI-RT-000380" selected="true" />
    <select idref="JUNI-RT-000390" selected="true" />
    <select idref="JUNI-RT-000400" selected="true" />
    <select idref="JUNI-RT-000410" selected="true" />
    <select idref="JUNI-RT-000420" selected="true" />
    <select idref="JUNI-RT-000430" selected="true" />
    <select idref="JUNI-RT-000440" selected="true" />
    <select idref="JUNI-RT-000450" selected="true" />
    <select idref="JUNI-RT-000460" selected="true" />
    <select idref="JUNI-RT-000470" selected="true" />
    <select idref="JUNI-RT-000480" selected="true" />
    <select idref="JUNI-RT-000490" selected="true" />
    <select idref="JUNI-RT-000500" selected="true" />
    <select idref="JUNI-RT-000510" selected="true" />
    <select idref="JUNI-RT-000520" selected="true" />
    <select idref="JUNI-RT-000530" selected="true" />
    <select idref="JUNI-RT-000540" selected="true" />
    <select idref="JUNI-RT-000550" selected="true" />
    <select idref="JUNI-RT-000560" selected="true" />
    <select idref="JUNI-RT-000570" selected="true" />
    <select idref="JUNI-RT-000580" selected="true" />
    <select idref="JUNI-RT-000590" selected="true" />
    <select idref="JUNI-RT-000600" selected="true" />
    <select idref="JUNI-RT-000610" selected="true" />
    <select idref="JUNI-RT-000620" selected="true" />
    <select idref="JUNI-RT-000630" selected="true" />
    <select idref="JUNI-RT-000640" selected="true" />
    <select idref="JUNI-RT-000650" selected="true" />
    <select idref="JUNI-RT-000660" selected="true" />
    <select idref="JUNI-RT-000680" selected="true" />
    <select idref="JUNI-RT-000690" selected="true" />
    <select idref="JUNI-RT-000700" selected="true" />
    <select idref="JUNI-RT-000710" selected="true" />
    <select idref="JUNI-RT-000720" selected="true" />
    <select idref="JUNI-RT-000730" selected="true" />
    <select idref="JUNI-RT-000740" selected="true" />
    <select idref="JUNI-RT-000750" selected="true" />
    <select idref="JUNI-RT-000760" selected="true" />
    <select idref="JUNI-RT-000770" selected="true" />
    <select idref="JUNI-RT-000780" selected="true" />
    <select idref="JUNI-RT-000790" selected="true" />
    <select idref="JUNI-RT-000800" selected="true" />
    <select idref="JUNI-RT-000810" selected="true" />
    <select idref="JUNI-RT-000820" selected="true" />
    <select idref="JUNI-RT-000830" selected="true" />
    <select idref="JUNI-RT-000840" selected="true" />
    <select idref="JUNI-RT-000850" selected="true" />
    <select idref="JUNI-RT-000860" selected="true" />
    <select idref="JUNI-RT-000870" selected="true" />
    <select idref="JUNI-RT-000880" selected="true" />
    <select idref="JUNI-RT-000890" selected="true" />
    <select idref="JUNI-RT-000900" selected="true" />
    <select idref="JUNI-RT-000910" selected="true" />
    <select idref="JUNI-RT-000920" selected="true" />
    <select idref="JUNI-RT-000930" selected="true" />
    <select idref="JUNI-RT-000940" selected="true" />
  </Profile>
  <Group id="JUNI-RT-000010">
    <title>SRG-NET-000018-RTR-000001</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000010_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000010</version>
      <title>The Juniper router must be configured to enforce approved authorizations for controlling the flow of information within the network based on organization-defined information flow control policies.</title>
      <description>&lt;VulnDiscussion&gt;Information flow control regulates where information is allowed to travel within a network and between interconnected networks. The flow of all network traffic must be monitored and controlled so it does not introduce any unacceptable risk to the network infrastructure or data. Information flow control policies and enforcement mechanisms are commonly employed by organizations to control the flow of information between designated sources and destinations (e.g., networks, individuals, and devices) within information systems.

Enforcement occurs, for example, in boundary protection devices (e.g., gateways, routers, guards, encrypted tunnels, and firewalls) that employ rule sets or establish configuration settings that restrict information system services, provide a packet filtering capability based on header information, or provide a message filtering capability based on message content (e.g., implementing key word searches or using document characteristics).&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001368</ident>
      <fixtext fixref="F-JUNI-RT-000010_fix">This requirement is not applicable for the DoDIN Backbone.

Configure firewall filters to allow or deny traffic for specific source and destination addresses as well as ports and protocols between various subnets as required. The commands used below were used to create the configuration as shown in the check content.

[edit firewall family inet]
set filter FILTER_SERVER_TRAFFIC term PRINT_FILTER from destination-address 11.1.23.0/24
set filter FILTER_SERVER_TRAFFIC term PRINT_FILTER from protocol tcp destination-port [515 631 9100] 
set filter FILTER_SERVER_TRAFFIC term PRINT_FILTER then accept
set filter FILTER_SERVER_TRAFFIC term SQL_FILTER from destination-address 11.1.24.0/24
set filter FILTER_SERVER_TRAFFIC term SQL_FILTER from protocol tcp destination-port [1433 1434 4022]
set filter FILTER_SERVER_TRAFFIC term SQL_FILTER then accept
set filter FILTER_SERVER_TRAFFIC term ALLOW_OSPF from protocol ospf
set filter FILTER_SERVER_TRAFFIC term ALLOW_OSPF then accept
set filter FILTER_SERVER_TRAFFIC term ALLOW_ICMP from protocol icmp
set filter FILTER_SERVER_TRAFFIC term ALLOW_ICMP then accept
set filter FILTER_SERVER_TRAFFIC term DENY_ALL_OTHER then log reject

[edit interfaces ge-0/0/0 unit 0 family inet]
set filter input FILTER_SERVER_TRAFFIC</fixtext>
      <fix id="F-JUNI-RT-000010_fix" />
      <check system="C-JUNI-RT-000010_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Review the router configuration to verify that firewall filters are configured to allow or deny traffic for specific source and destination addresses as well as ports and protocols. For example, the configuration below will allow only printer traffic into subnet 11.1.23.0/24 and SQL traffic into subnet 11.1.24.0/24. ICMP is allowed for troubleshooting and OSPF is the routing protocol used within the network.

interfaces {
    ge-0/0/0 {
        unit 0 {
            family inet {
                filter {
                    input FILTER_SERVER_TRAFFIC;
                }
                address 11.1.12.2/24;
            }
        }
    }
…
…
…
firewall {
    family inet {
        filter FILTER_SERVER_TRAFFIC {
            term PRINT_FILTER {
                from {
                    destination-address {
                        11.1.23.0/24;
                    }
                    protocol tcp;
                    destination-port [ 515 631 9100 ];
                }
                then accept;
            }
            term SQL_FILTER {
                from {
                    destination-address {
                        11.1.24.0/24;
                    }
                    protocol tcp;
                    destination-port [ 1433 1434 4022 ];
                }
                then accept;
            }
            term ALLOW_BGP {
                from {
                    protocol tcp;
                    destination-port bgp;
                }
                then accept;
            }
            term ALLOW_OSPF {
                from {
                    protocol ospf;
                }
                then accept;
            }
            term ALLOW_ICMP {
                from {
                    protocol icmp;
                }
                then accept;
            }
            term DENY_ALL_OTHER {
                then {
                    log;
                    syslog;
                    reject;
                }
            }
        }

If the router is not configured to enforce approved authorizations for controlling the flow of information within the network based on organization-defined information flow control policies, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000020">
    <title>SRG-NET-000025-RTR-000020</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000020_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000020</version>
      <title>The Juniper router must be configured to implement message authentication for all control plane protocols.</title>
      <description>&lt;VulnDiscussion&gt;A rogue router could send a fictitious routing update to convince a site's perimeter router to send traffic to an incorrect or even a rogue destination. This diverted traffic could be analyzed to learn confidential information about the site's network or used to disrupt the network's ability to communicate with other networks. This is known as a "traffic attraction attack" and is prevented by configuring neighbor router authentication for routing updates.

This requirement applies to all IPv4 and IPv6 protocols that are used to exchange routing or packet forwarding information; this includes all Interior Gateway Protocols (such as OSPF, EIGRP, and IS-IS) and Exterior Gateway Protocols (such as BGP), MPLS-related protocols (such as LDP), and multicast-related protocols.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000366</ident>
      <ident system="http://iase.disa.mil/cci">CCI-002205</ident>
      <fixtext fixref="F-JUNI-RT-000020_fix">Configure authentication to be enabled for every protocol that affects the routing or forwarding tables.

The example configuration commands below enables OSPF and BGP authentication.

[edit protocols ospf area 0.0.0.0]
set interface ge-0/0/0 authentication simple-password xxxxxxxxxxxx
set interface ge-0/1/0 authentication simple-password xxxxxxxxxxxx
set interface ge-0/2/0 authentication simple-password xxxxxxxxxxxx

[edit protocols bgp group AS_2 neighbor x.x.x.x]
set authentication-key xxxxxxxxxxxxxxx</fixtext>
      <fix id="F-JUNI-RT-000020_fix" />
      <check system="C-JUNI-RT-000020_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration. 

Verify that neighbor router authentication is enabled for all routing protocols. The configuration examples below depicts OSPF and BGP authentication.

protocols {
    bgp {
        group AS_5 {
            type external;
            peer-as 5;
            neighbor x.x.x.x {
                authentication-key "$9$tBga0ORx7VsYoIEgJ"; ## SECRET-DATA
            }
        }
    }
    ospf {
        area 0.0.0.0 {
            interface ge-0/0/0 {
                authentication {
                    simple-password "$9$NHVb2mPQ3nCYg/t"; ## SECRET-DATA
                }
            }
            interface ge-0/1/0 {
                authentication {
                    simple-password "$9$Lgb7NbHkPTQnVwF/"; ## SECRET-DATA
                }
            }
            interface lo0.0;
            interface ge-0/2/0 {
                authentication {
                    simple-password "$9$7DdVY.mTF39s26A"; ## SECRET-DATA
                }
            }
        }
    }
}

If authentication is not enabled, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000030">
    <title>SRG-NET-000025-RTR-000085</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000030_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000030</version>
      <title>The Juniper router must be configured to use keys with a duration not exceeding 180 days for authenticating routing protocol messages.</title>
      <description>&lt;VulnDiscussion&gt;If the keys used for routing protocol authentication are guessed, the malicious user could create havoc within the network by advertising incorrect routes and redirecting traffic. Some routing protocols allow the use of key chains for authentication. A key chain is a set of keys that is used in succession, with each having a lifetime of no more than 180 days. Changing the keys frequently reduces the risk of them eventually being guessed.

Keys cannot be used during time periods for which they are not activated. If a time period occurs during which no key is activated, neighbor authentication cannot occur, and therefore routing updates will fail. Therefore, ensure that for a given key chain, key activation times overlap to avoid any period of time during which no key is activated.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000366</ident>
      <ident system="http://iase.disa.mil/cci">CCI-002205</ident>
      <fixtext fixref="F-JUNI-RT-000030_fix">This requirement is not applicable for the DoDIN Backbone.

Configure each key used for routing protocol authentication to have a lifetime of no more than 180 days as shown in the example below.

[edit security authentication-key-chains]
set key-chain BGP_KEY key 1 start-time 2018-05-01.12:00 secret xxxxxxxxxxxxx
set key-chain BGP_KEY key 2 start-time 2018-09-01.12:00 secret xxxxxxxxxxxxx
set key-chain BGP_KEY key 3 start-time 2019-01-01.12:00 secret xxxxxxxxxxxxx</fixtext>
      <fix id="F-JUNI-RT-000030_fix" />
      <check system="C-JUNI-RT-000030_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Review the start times for each key within the configured key chains used for routing protocol authentication as shown in the example below.

security {
    …
    …
    …
    authentication-key-chains {
        key-chain BGP_KEY {
            key 1 {
                secret "$9$PTQnhclvMX3687"; ## SECRET-DATA
                start-time "2018-5-1.12:00:00 +0000";
            }
            key 2 {
                secret "$9$iq.5OBESyKfTlM"; ## SECRET-DATA
                start-time "2018-9-1.12:00:00 +0000";
            }
            key 3 {
                secret "$9$ZADjqAtOIRSk.hr"; ## SECRET-DATA
                start-time "2019-1-1.12:00:00 +0000";
            }
        }
    }
}

Note: Currently Junos does not support key chains for OSPF and RIP

If any key has a lifetime of more than 180 days, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000040">
    <title>SRG-NET-000168-RTR-000077</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000040_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000040</version>
      <title>The Juniper router must be configured to use encryption for routing protocol authentication.</title>
      <description>&lt;VulnDiscussion&gt;A rogue router could send a fictitious routing update to convince a site's perimeter router to send traffic to an incorrect or even a rogue destination. This diverted traffic could be analyzed to learn confidential information about the site's network or used to disrupt the network's ability to communicate with other networks. This is known as a "traffic attraction attack" and is prevented by configuring neighbor router authentication for routing updates. However, using clear-text authentication provides little benefit since an attacker can intercept traffic and view the authentication key. This would allow the attacker to use the authentication key in an attack.

This requirement applies to all IPv4 and IPv6 protocols that are used to exchange routing or packet forwarding information; this includes all Interior Gateway Protocols (such as OSPF, EIGRP, and IS-IS) and Exterior Gateway Protocols (such as BGP), MPLS-related protocols (such as LDP), and multicast-related protocols.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000803</ident>
      <fixtext fixref="F-JUNI-RT-000040_fix">Configure all routing protocol authentications to encrypt the authentication key.

OSPF Example:

[edit protocols ospf area 0.0.0.0]
set interface ge-0/0/0 authentication md5 1 key xxxxxxxxxxxx
set interface ge-0/1/0 authentication md5 1 key xxxxxxxxxxxx
set interface ge-0/2/0 authentication md5 1 key xxxxxxxxxxxx

IS-IS Example:

[edit security authentication-key-chains]
set key-chain ISIS_KEY key 1 options isis-enhanced
set key-chain ISIS_KEY key 2 options isis-enhanced
set key-chain ISIS_KEY key 3 options isis-enhanced
set key-chain ISIS_KEY key 1 start-time 2018-05-01.12:00 algorithm hmac-sha-1 secret xxxxxxxxxxxxx
set key-chain ISIS_KEY key 2 start-time 2018-09-01.12:00 algorithm hmac-sha-1 secret xxxxxxxxxxxxx
set key-chain ISIS_KEY key 3 start-time 2019-01-01.12:00 algorithm hmac-sha-1 secret xxxxxxxxxxxxx

[edit protocols]
set isis level 1 authentication-key-chain ISIS_KEY
set isis interface ge-0/0/0 level 1 hello-authentication-key-chain ISIS_KEY
set isis interface ge-0/0/0 level 2 hello-authentication-key-chain ISIS_KEY

BGP Example:

[edit security authentication-key-chains]
set key-chain BGP_KEY key 1 start-time 2018-05-01.12:00 secret xxxxxxxxxxxxx
set key-chain BGP_KEY key 2 start-time 2018-09-01.12:00 secret xxxxxxxxxxxxx
set key-chain BGP_KEY key 3 start-time 2019-01-01.12:00 secret xxxxxxxxxxxxx

[edit protocols bgp group AS_5]
set neighbor 11.1.25.5 authentication-algorithm hmac-sha-1-96
set neighbor 11.1.25.5 authentication-key-chain BGP_KEY
set neighbor 11.1.1.1 authentication-algorithm hmac-sha-1-96
set neighbor 11.1.1.1 authentication-key-chain BGP_KEY</fixtext>
      <fix id="F-JUNI-RT-000040_fix" />
      <check system="C-JUNI-RT-000040_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration. For every routing protocol that affects the routing or forwarding tables, verify that neighbor router authentication is encrypting the authentication key as shown in the examples below.

OSPF Example:

protocols {
    …
    …
    …
    ospf {
        area 0.0.0.0 {
            interface ge-0/0/0 {
                authentication {
                    md5 1 key "$9$NHVb2mPQ3nCYg/t"; ## SECRET-DATA
                }
            }
            interface ge-0/1/0 {
                authentication {
                    md5 1 key "$9$Lgb7NbHkPTQnVwF/"; ## SECRET-DATA
                }
            }
            interface lo0.0;
            interface ge-0/2/0 {
                authentication {
                    md5 1 key "$9$7DdVY.mTF39s26A"; ## SECRET-DATA
                }
            }
        }
    }
}

IS-IS Example:

security {
    …
    …
    …
    }
    authentication-key-chains {
        key-chain ISIS_KEY {
            key 1 {
                secret "$9$W8oXxdji.f5F-VQn"; ## SECRET-DATA
                start-time "2018-5-1.12:00:00 +0000";
                algorithm hmac-sha-1;
                options isis-enhanced;
            }
            key 2 {
                secret "$9$Q4953nCrlMLX-9A7V"; ## SECRET-DATA
                start-time "2018-9-1.12:00:00 +0000";
                algorithm hmac-sha-1;
                options isis-enhanced;
            }
            key 3 {
                secret "$9$UeiHmpu1Ehr.PSe"; ## SECRET-DATA
                start-time "2019-1-1.12:00:00 +0000";
                algorithm hmac-sha-1;
                options isis-enhanced;
            }
        }
    }
}

protocols {
    …
    …
    …
    isis {
        level 1 authentication-key-chain ISIS_KEY;
        level 2 authentication-key-chain ISIS_KEY;
        interface ge-0/0/0 {
            level 1 hello-authentication-key-chain ISIS_KEY;
            level 2 hello-authentication-key-chain ISIS_KEY;
        }
        interface lo0.0;
    }

BGP Example:

security {
    …
    …
    …
    }
    authentication-key-chains {
        key-chain BGP_KEY {
            key 1 {
                secret "$9$PTQnhclvMX3687"; ## SECRET-DATA
                start-time "2018-5-1.12:00:00 +0000";
            }
            key 2 {
                secret "$9$iq.5OBESyKfTlM"; ## SECRET-DATA
                start-time "2018-9-1.12:00:00 +0000";
            }
            key 3 {
                secret "$9$ZADjqAtOIRSk.hr"; ## SECRET-DATA
                start-time "2019-1-1.12:00:00 +0000";
            }
        }

protocols {
    bgp {
        group AS_2 {
            type external;
            peer-as 2;
            neighbor 11.1.25.2 {
                authentication-algorithm md5;
                authentication-key-chain BGP_KEY;
            }
            neighbor 11.1.1.1 {
                authentication-algorithm hmac-sha-1-96;
                authentication-key-chain BGP_KEY;
            }
        }
    }
   
If the routing protocol is not encrypting the authentication key, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000050">
    <title>SRG-NET-000168-RTR-000078</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000050_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000050</version>
      <title>The Juniper router must be configured to authenticate all routing protocol messages using NIST-validated FIPS 140-2 message authentication code algorithm.</title>
      <description>&lt;VulnDiscussion&gt;A rogue router could send a fictitious routing update to convince a site's perimeter router to send traffic to an incorrect or even a rogue destination. This diverted traffic could be analyzed to learn confidential information about the site's network or used to disrupt the network's ability to communicate with other networks. This is known as a "traffic attraction attack" and is prevented by configuring neighbor router authentication for routing updates. However, using clear-text authentication provides little benefit since an attacker can intercept traffic and view the authentication key. This would allow the attacker to use the authentication key in an attack.

Since MD5 is vulnerable to "birthday" attacks and may be compromised, routing protocol authentication must use FIPS 140-2 validated algorithms and modules to encrypt the authentication key. This requirement applies to all IPv4 and IPv6 protocols that are used to exchange routing or packet forwarding information; this includes all Interior Gateway Protocols (such as OSPF, EIGRP, and IS-IS) and Exterior Gateway Protocols (such as BGP), MPLS-related protocols (such as LDP), and multicast-related protocols.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000803</ident>
      <fixtext fixref="F-JUNI-RT-000050_fix">Configure routing protocol authentication to use a NIST-validated FIPS 140-2 message authentication code algorithm.

IS-IS Example:

[edit security authentication-key-chains]
set key-chain ISIS_KEY key 1 options isis-enhanced
set key-chain ISIS_KEY key 2 options isis-enhanced
set key-chain ISIS_KEY key 3 options isis-enhanced
set key-chain ISIS_KEY key 1 start-time 2018-05-01.12:00 algorithm hmac-sha-1 secret xxxxxxxxxxxxx
set key-chain ISIS_KEY key 2 start-time 2018-09-01.12:00 algorithm hmac-sha-1 secret xxxxxxxxxxxxx
set key-chain ISIS_KEY key 3 start-time 2019-01-01.12:00 algorithm hmac-sha-1 secret xxxxxxxxxxxxx

[edit protocols]
set isis level 1 authentication-key-chain ISIS_KEY
set isis interface ge-0/0/0 level 1 hello-authentication-key-chain ISIS_KEY
set isis interface ge-0/0/0 level 2 hello-authentication-key-chain ISIS_KEY

BGP Example:

[edit security authentication-key-chains]
set key-chain BGP_KEY key 1 start-time 2018-05-01.12:00 secret xxxxxxxxxxxxx
set key-chain BGP_KEY key 2 start-time 2018-09-01.12:00 secret xxxxxxxxxxxxx
set key-chain BGP_KEY key 3 start-time 2019-01-01.12:00 secret xxxxxxxxxxxxx

[edit protocols bgp group AS_5]
set neighbor 11.1.25.5 authentication-algorithm hmac-sha-1-96
set neighbor 11.1.25.5 authentication-key-chain BGP_KEY
set neighbor 11.1.1.1 authentication-algorithm hmac-sha-1-96
set neighbor 11.1.1.1 authentication-key-chain BGP_KEY

OSPF Example:

Configure IPsec Security Association
[edit security ipsec]
set security-association IPSEC-SA1
set security-association IPSEC-SA1 mode transport
set security-association IPSEC-SA1 manual direction bidirectional
set security-association IPSEC-SA1 manual direction bidirectional protocol ah
set security-association IPSEC-SA1 manual direction bidirectional spi 256 
set security-association IPSEC-SA1 manual direction bidirectional authentication algorithm hmac-sha1-96 key ascii-text 1234567890abcdefghij 

[edit protocols ospf area 0.0.0.0]
set interface ge-0/0/0 ipsec-sa IPSEC-SA1
set interface ge-0/1/0 ipsec-sa IPSEC-SA1
set interface ge-0/2/0 0 ipsec-sa IPSEC-SA1</fixtext>
      <fix id="F-JUNI-RT-000050_fix" />
      <check system="C-JUNI-RT-000050_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify it is using a NIST-validated FIPS 140-2 message authentication code algorithm to authenticate routing protocol messages.

IS-IS Example:

security {
     …
    …
    …
    }
    authentication-key-chains {
        key-chain ISIS_KEY {
            key 1 {
                secret "$9$W8oXxdji.f5F-VQn"; ## SECRET-DATA
                start-time "2018-5-1.12:00:00 +0000";
                algorithm hmac-sha-1;
                options isis-enhanced;
            }
            key 2 {
                secret "$9$Q4953nCrlMLX-9A7V"; ## SECRET-DATA
                start-time "2018-9-1.12:00:00 +0000";
                algorithm hmac-sha-1;
                options isis-enhanced;
            }
            key 3 {
                secret "$9$UeiHmpu1Ehr.PSe"; ## SECRET-DATA
                start-time "2019-1-1.12:00:00 +0000";
                algorithm hmac-sha-1;
                options isis-enhanced;
            }
        }
    }
}

protocols {
    …
    …
    …
    isis {
        level 1 authentication-key-chain ISIS_KEY;
        level 2 authentication-key-chain ISIS_KEY;
        interface ge-0/0/0 {
            level 1 hello-authentication-key-chain ISIS_KEY;
            level 2 hello-authentication-key-chain ISIS_KEY;
        }
        interface lo0.0;
    }

BGP Example:

}
security {
    …
    …
    …
    }
    authentication-key-chains {
        key-chain BGP_KEY {
            key 1 {
                secret "$9$PTQnhclvMX3687"; ## SECRET-DATA
                start-time "2018-5-1.12:00:00 +0000";
            }
            key 2 {
                secret "$9$iq.5OBESyKfTlM"; ## SECRET-DATA
                start-time "2018-9-1.12:00:00 +0000";
            }
            key 3 {
                secret "$9$ZADjqAtOIRSk.hr"; ## SECRET-DATA
                start-time "2019-1-1.12:00:00 +0000";
            }
        }

protocols {
    bgp {
        group AS_2 {
            type external;
            peer-as 2;
            neighbor 11.1.25.2 {
                authentication-algorithm md5;
                authentication-key-chain BGP_KEY;
            }
            neighbor 11.1.1.1 {
                authentication-algorithm hmac-sha-1-96;
                authentication-key-chain BGP_KEY;
            }
        }
    }

OSPF Example:

IPsec authentication must be used to authenticate OSPF messages with a FIPS 140-2 message authentication code algorithm. 

Verify that an IPsec security association has been configured on the interfaces as shown in the following example:

protocols {
    …
    …
    …
    ospf {
        area 0.0.0.0 {
            interface ge-0/0/0 {
                   ipsec-sa IPSEC-SA1;
            }
            interface ge-0/1/0 {
                   ipsec-sa IPSEC-SA1;
            }
            interface lo0.0;
            interface ge-0/2/0 {
                   ipsec-sa IPSEC-SA1;
            }
        }
    }
}

Verify the authentication algorithm in the IPsec security association as shown in the example below.

security {
    …
    …
    …
    ipsec {
        security-association IPSEC-SA1 {
            mode transport;
            manual {
                direction bidirectional {
                    protocol ah;
                    spi 256;
                    authentication {
                        algorithm hmac-sha1-96;
                        key ascii-text "$9$u6M6OEcrevL7-YaZUjHmF39B1hP5CuBRle"; ## SECRET-DATA
                    }
                }
            }
        }
    }

If a NIST-validated FIPS 140-2 message authentication code algorithm is not being used to authenticate routing protocol messages, this is a finding.

Note: Juniper does not support FIPS 140-2 message authentication code algorithm for OSPFv2 and RIP.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000060">
    <title>SRG-NET-000019-RTR-000007</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000060_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000060</version>
      <title>The Juniper router must be configured to have all inactive interfaces disabled.</title>
      <description>&lt;VulnDiscussion&gt;An inactive interface is rarely monitored or controlled and may expose a network to an undetected attack on that interface. Unauthorized personnel with access to the communication facility could gain access to a router by connecting to a configured interface that is not in use.

If an interface is no longer used, the configuration must be deleted and the interface disabled. For sub-interfaces, delete sub-interfaces that are on inactive interfaces and delete sub-interfaces that are themselves inactive. If the sub-interface is no longer necessary for authorized communications, it must be deleted.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001414</ident>
      <fixtext fixref="F-JUNI-RT-000060_fix">Disable all inactive interfaces as shown below.

[edit interfaces]
set ge-1/1/0 disable</fixtext>
      <fix id="F-JUNI-RT-000060_fix" />
      <check system="C-JUNI-RT-000060_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration and verify that inactive interfaces have been disabled as shown below.

interfaces {
    ge-1/1/0  {
        disable;
        unit 0 {
        }
    }

If an interface is not being used but is configured or enabled, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000070">
    <title>SRG-NET-000131-RTR-000035</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000070_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000070</version>
      <title>The Juniper router must be configured to have all non-essential capabilities disabled.</title>
      <description>&lt;VulnDiscussion&gt;A compromised router introduces risk to the entire network infrastructure, as well as data resources that are accessible via the network. The perimeter defense has no oversight or control of attacks by malicious users within the network. Preventing network breaches from within is dependent on implementing a comprehensive defense-in-depth strategy, including securing each device connected to the network. This is accomplished by following and implementing all security guidance applicable for each node type. A fundamental step in securing each router is to enable only the capabilities required for operation.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000381</ident>
      <fixtext fixref="F-JUNI-RT-000070_fix">Remove unneeded services and functions from the router as shown below.

[edit system services]
delete telnet
[edit system services]
delete finger
[edit system services]
delete ftp</fixtext>
      <fix id="F-JUNI-RT-000070_fix" />
      <check system="C-JUNI-RT-000070_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to determine if services not required for operation are enabled. Services such as finger, ftp, telnet must never be enabled; hence, they should not be shown under the system services hierarchy. If J-web is not used for administrative access, the web-management services must not be configured as shown below. If DHCP server is not being deployed on the router, the command dhcp-local-server must not be configured as shown below.

system {
    …
    …
    …
    services {
        web-management {
           https {
            interface ge-0/0/0.0;
           }
        }
        finger;
        ftp;
        ssh {
            protocol-version v2;
            macs [ hmac-sha1-96 hmac-sha2-256 hmac-sha2-512 ];
        }
        telnet;
        netconf {
            ssh;
        }
        dhcp-local-server {
            group DHCP_GROUP {
                interface ge-0/1/0.0;
            }
        }
    }

If unnecessary services and functions are enabled on the router, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000120">
    <title>SRG-NET-000362-RTR-000110</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000120_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000120</version>
      <title>The Juniper router must be configured to protect against or limit the effects of denial-of-service (DoS) attacks by employing control plane protection.</title>
      <description>&lt;VulnDiscussion&gt;The Route Processor (RP) is critical to all network operations because it is the component used to build all forwarding paths for the data plane via control plane processes. It is also instrumental with ongoing network management functions that keep the routers and links available for providing network services. Any disruption to the RP or the control and management planes can result in mission-critical network outages.

A DoS attack targeting the RP can result in excessive CPU and memory utilization. To maintain network stability and RP security, the router must be able to handle specific control plane and management plane traffic that is destined to the RP. In the past, one method of filtering was to use ingress filters on forwarding interfaces to filter both forwarding path and receiving path traffic. However, this method does not scale well as the number of interfaces grows and the size of the ingress filters grows. Control plane policing increases the security of routers and multilayer switches by protecting the RP from unnecessary or malicious traffic. Filtering and rate limiting the traffic flow of control plane packets can be implemented to protect routers against reconnaissance and DoS attacks, allowing the control plane to maintain packet forwarding and protocol states despite an attack or heavy load on the router or multilayer switch.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002385</ident>
      <fixtext fixref="F-JUNI-RT-000120_fix">Implement control plane protection by classifying traffic types based on importance and rate limit the traffic accordingly as shown in the example below.

Create filters for critical, important, normal, and undesirable traffic

set firewall filter CoPP_Policy term CRITICAL from protocol ospf
set firewall filter CoPP_Policy term CRITICAL from protocol pim
set firewall filter CoPP_Policy term CRITICAL from protocol tcp destination-port bgp
set firewall filter CoPP_Policy term CRITICAL from protocol tcp source-port bgp
set firewall filter CoPP_Policy term CRITICAL then policer CRITICAL_POLICER

set firewall filter CoPP_Policy term IMPORTANT from protocol tcp destination-port ssh
set firewall filter CoPP_Policy term IMPORTANT from protocol tcp destination-port tacacs
set firewall filter CoPP_Policy term IMPORTANT from protocol tcp destination-port snmp
set firewall filter CoPP_Policy term IMPORTANT from protocol tcp destination-port ntp
set firewall filter CoPP_Policy term IMPORTANT then policer IMPORTANT_POLICER

set firewall filter CoPP_Policy term NORMAL from protocol icmp icmp-code ttl-eq-zero-during-transit
set firewall filter CoPP_Policy term NORMAL from protocol icmp icmp-code port-unreachable
set firewall filter CoPP_Policy term NORMAL from protocol icmp icmp-type echo-reply
set firewall filter CoPP_Policy term NORMAL from protocol icmp icmp-type echo-request
set firewall filter CoPP_Policy term NORMAL then policer NORMAL_POLICER

set firewall filter CoPP_Policy term UNDESIRABLE from protocol udp  
set firewall filter CoPP_Policy term UNDESIRABLE then policer UNDESIRABLE_POLICER

set firewall filter CoPP_Policy term ALL-OTHER from address 0.0.0.0/0
set firewall filter CoPP_Policy term ALL-OTHER then policer ALL-OTHER_POLICER

Create policers for each traffic type to limit bandwidth

set firewall policer CRITICAL_POLICER filter-specific
set firewall policer CRITICAL_POLICER if-exceeding bandwidth-limit 3000000 burst-size-limit 4000
set firewall policer CRITICAL_POLICER then discard

set firewall policer IMPORTANT_POLICER filter-specific
set firewall policer IMPORTANT_POLICER if-exceeding bandwidth-limit 400000 burst-size-limit 1500
set firewall policer IMPORTANT_POLICER then discard

set firewall policer NORMAL_POLICER filter-specific
set firewall policer NORMAL_POLICER if-exceeding bandwidth-limit 55000 burst-size-limit 150000
set firewall policer NORMAL_POLICER then discard

set firewall policer UNDESIRABLE_POLICER filter-specific
set firewall policer UNDESIRABLE_POLICER if-exceeding bandwidth-limit 32000 burst-size-limit 1500
set firewall policer UNDESIRABLE_POLICER then discard

set firewall policer ALL-OTHER_POLICER filter-specific
set firewall policer ALL-OTHER_POLICER if-exceeding bandwidth-limit 40000 burst-size-limit 1500
set firewall policer ALL-OTHER_POLICER then discard

Apply the CoPP policy to the loopback interface

set interface lo0 unit 0 family inet filter input CoPP_Policy</fixtext>
      <fix id="F-JUNI-RT-000120_fix" />
      <check system="C-JUNI-RT-000120_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Determine whether control plane protection has been implemented on the router.

Verify that a CoPP policy has been configured that classifies traffic types into levels of importance.

firewall {
    family inet {
…
…
…
    }
    filter CoPP_Policy {
        term CRITICAL {
            from {
                protocol [ ospf pim tcp ];
                source-port bgp;
                destination-port bgp;
            }
            then policer CRITICAL_POLICER;
        }
        term IMPORTANT {
            from {
                protocol [ tcp udp ];
                destination-port [ ssh tacacs snmp ntp ];
            }
            then {
                policer IMPORTANT_POLICER; 
            }
        }
        term NORMAL {
            from {
                protocol icmp;
                icmp-type [ echo-reply echo-request ];
                icmp-code [ port-unreachable ttl-eq-zero-during-transit ];
            }
            then policer NORMAL_POLICER;
        }
        term UNDESIRABLE {
            from {
                protocol udp;
            }
            then policer UNDESIRABLE_POLICER;
        }
        term ALL-OTHER {
            from {
                address {
                    0.0.0.0/0;
                }
            }
            then policer ALL-OTHER_POLICER;
        }
    }
}

Verify that policers have been configured to rate limit traffic types.

firewall {
    family inet {
…
…
…
    }
    policer CRITICAL_POLICER {
        filter-specific;
        if-exceeding {
            bandwidth-limit 3m;
            burst-size-limit 4k;
        }
        then discard;
    }
    policer IMPORTANT_POLICER {
        filter-specific;
        if-exceeding {
            bandwidth-limit 400k;
            burst-size-limit 1500;
        }
        then discard;
    }
    policer NORMAL_POLICER {
        filter-specific;
        if-exceeding {
            bandwidth-limit 55k;
            burst-size-limit 1500;
        }
        then discard;
    }
    policer UNDESIRABLE_POLICER {
        filter-specific;
        if-exceeding {
            bandwidth-limit 32k;
            burst-size-limit 1500;
        }
        then discard;
    }
    policer ALL-OTHER_POLICER {
        filter-specific;
        if-exceeding {
            bandwidth-limit 40k;
            burst-size-limit 1500;
        }
        then discard;
    }

Verify that the CoPP policy has been applied to the loopback interface as shown in the example below

interfaces {
…
…
…
    lo0 {
        unit 0 {
            family inet {
                filter {
                    input CoPP_Policy;
                }
                address 2.2.2.2/32;
            }
         }
    }
}

If the router does not have control plane protection implemented, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000130">
    <title>SRG-NET-000205-RTR-000001</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000130_rule" severity="high" weight="10.0">
      <version>JUNI-RT-000130</version>
      <title>The Juniper router must be configured to restrict traffic destined to itself.</title>
      <description>&lt;VulnDiscussion&gt;The router must be able to securely handle specific control plane and management plane traffic that is destined to it. Using the ingress filter on forwarding interfaces is a method that has been used in the past to filter both forwarding path and receive path traffic. However, this method does not scale well as the number of interfaces grows and the size of the ingress filters grows. Applying a small and manageable filter directly on the router’s receive path to restrict this traffic is considered an industry best practice.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001097</ident>
      <fixtext fixref="F-JUNI-RT-000130_fix">Configure the router’s receive path filters to restrict traffic destined to the router.

Configure a filter to define what traffic should be received by the route processor.

[edit firewall family inet]
set filter DESTINED_TO_RP term FILTER_TCP from destination-address 11.1.12.0/24  
set filter DESTINED_TO_RP term FILTER_TCP from protocol tcp destination-port ssh
set filter DESTINED_TO_RP term FILTER_TCP from protocol tcp destination-port tacacs
set filter DESTINED_TO_RP term FILTER_TCP from protocol tcp destination-port snmp
set filter DESTINED_TO_RP term FILTER_TCP then accept
set filter DESTINED_TO_RP term FILTER_UDP from destination-address 11.1.12.0/24  
set filter DESTINED_TO_RP term FILTER_UDP from protocol udp destination-port ntp
set filter DESTINED_TO_RP term FILTER_UDP then accept
set filter DESTINED_TO_RP term ICMP_ANY from protocol icmp 
set filter DESTINED_TO_RP term ICMP_ANY from protocol icmp then accept
set filter DESTINED_TO_RP term DENY_BY_DEFAULT then log discard

Apply the filter to the loopback interface.

[edit interfaces lo0 unit 0 family inet] 
set filter input-list DESTINED_TO_RP</fixtext>
      <fix id="F-JUNI-RT-000130_fix" />
      <check system="C-JUNI-RT-000130_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the filter for the router’s receive path and verify that it will only allow specific management plane traffic from specific sources.

Verify filter has been configured as shown in the example below

firewall {
    family inet {
         …
        …
        …
        }
        filter DESTINED_TO_RP {
            term ALLOW_OSPF {
                from {
                    protocol ospf;
                }
                then accept;
            }
            term ALLOW_BGP {
                from {
                    source-address {
                        11.1.12.1/32;
                        11.1.23.3/32;
                        11.1.25.5/32;
                    }
                    protocol tcp;
                    port bgp;
                }
            }
            term FILTER_TCP {
                from {
                    destination-address {
                        11.1.12.0/24;
                    }
                    protocol tcp;
                    destination-port [ ssh tacacs telnet snmp ];
                }
                then accept;
            }
            term FILTER_UDP {
                from {
                    destination-address {
                        11.1.12.0/24;
                    }
                    protocol udp;
                    destination-port ntp;
                }
                then accept;
            }
            term ICMP_ANY {
                from {
                    protocol icmp;
                }
                then accept;
            }
            term DENY_BY_DEFAULT {
                then {
                    log;
                    discard;
                }
            }
        }
    }

Verify input filter has been applied to loopback interface as shown in the example below
    
interfaces {
…
…
…
    lo0 {
        unit 0 {
            family inet {
                filter {
                    input-list [ DESTINED_TO_RP CoPP_Policy ];
                }
                address 2.2.2.2/32;
            }
         }
    }
}

If the router is not configured with a receive-path filter to restrict traffic destined to itself, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000140">
    <title>SRG-NET-000205-RTR-000002</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000140_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000140</version>
      <title>The Juniper router must be configured to drop all fragmented Internet Control Message Protocol (ICMP) packets destined to itself.</title>
      <description>&lt;VulnDiscussion&gt;Fragmented ICMP packets can be generated by hackers for DoS attacks such as Ping O' Death and Teardrop. It is imperative that all fragmented ICMP packets are dropped.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001097</ident>
      <fixtext fixref="F-JUNI-RT-000140_fix">Configure the filter that is applied inbound to the loopback interface to drop all fragmented ICMP packets as shown in the example below.

[edit firewall family inet filter DESTINED_TO_RP]
set term BLOCK_ICMP_FRAG from protocol icmp is-fragment
set term BLOCK_ICMP_FRAG then discard
insert term BLOCK_ICMP_FRAG before term DENY_BY_DEFAULT</fixtext>
      <fix id="F-JUNI-RT-000140_fix" />
      <check system="C-JUNI-RT-000140_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the filter that is applied inbound to the loopback interface and verify that it discards fragmented ICMP packets as shown in the example below.

firewall {
    family inet {
       …
       …
       …
        }
        filter DESTINED_TO_RP {
           …
           …
           …
            }
            term BLOCK_ICMP_FRAG {
                from {
                    is-fragment;
                    protocol icmp;
                }
                then {
                    discard;
                }
            }
            term ICMP_ANY {
                from {
                    protocol icmp;
                }
                then accept;
            }
            term DENY_BY_DEFAULT {
                then {
                    log;
                    discard;
                }
            }
        }
    }

If the router is not configured to filter to drop all fragmented ICMP packets destined to itself, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000150">
    <title>SRG-NET-000362-RTR-000111</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000150_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000150</version>
      <title>The Juniper router must be configured to have Gratuitous ARP disabled on all external interfaces.</title>
      <description>&lt;VulnDiscussion&gt;A gratuitous ARP is an ARP broadcast in which the source and destination MAC addresses are the same. It is used to inform the network about a host IP address. A spoofed gratuitous ARP message can cause network mapping information to be stored incorrectly, causing network malfunction.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002385</ident>
      <fixtext fixref="F-JUNI-RT-000150_fix">Disable gratuitous ARP on all external interfaces using the following command

[edit interfaces  ge-1/1/0 ]
delete gratuitous-arp-reply</fixtext>
      <fix id="F-JUNI-RT-000150_fix" />
      <check system="C-JUNI-RT-000150_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the configuration to determine if gratuitous ARP is disabled on all external interfaces. The following command should not be set to any interface: gratuitous-arp-reply

If gratuitous ARP is enabled on any external interface, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000170">
    <title>SRG-NET-000362-RTR-000113</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000170_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000170</version>
      <title>The Juniper router must be configured to have Internet Control Message Protocol (ICMP) unreachable messages disabled on all external interfaces.</title>
      <description>&lt;VulnDiscussion&gt;The ICMP supports IP traffic by relaying information about paths, routes, and network conditions. Routers automatically send ICMP messages under a wide variety of conditions. Host unreachable ICMP messages are commonly used by attackers for network mapping and diagnosis.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002385</ident>
      <fixtext fixref="F-JUNI-RT-000170_fix">[edit firewall family inet]
set filter FILTER_INBOUND term DENY_BY_DEFAULT then log discard</fixtext>
      <fix id="F-JUNI-RT-000170_fix" />
      <check system="C-JUNI-RT-000170_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the firewall hierarchy configuration to verify that all packets that are not permitted are silently dropped using the discard parameter as shown in the configuration example below.

firewall {
    family inet {
        …
        …
        …
        }
        filter FILTER_INBOUND {
            term ALLOW_XYZ {
                from {
                    protocol xyz;
                }
                then accept;
            }
            …
            …
            …
            }
            term DENY_BY_DEFAULT {
                then {
                    log;
                    discard;
                }
            }
        }
    }

If ICMP unreachable notifications are sent for packets that are dropped, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000180">
    <title>SRG-NET-000362-RTR-000114</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000180_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000180</version>
      <title>The Juniper router must be configured to have Internet Control Message Protocol (ICMP) mask reply messages disabled on all external interfaces.</title>
      <description>&lt;VulnDiscussion&gt;The ICMP supports IP traffic by relaying information about paths, routes, and network conditions. Routers automatically send ICMP messages under a wide variety of conditions. Mask Reply ICMP messages are commonly used by attackers for network mapping and diagnosis.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002385</ident>
      <fixtext fixref="F-JUNI-RT-000180_fix">Configure the filter protecting the routing engine to silently drop all ICMP Mask Request messages destined to the router.

[edit firewall family inet filter DESTINED_TO_RP]
set term DENY_MASK_REQUEST from protocol icmp icmp-type mask-request
insert term DENY_MASK_REQUEST before term ALLOW_ICMP</fixtext>
      <fix id="F-JUNI-RT-000180_fix" />
      <check system="C-JUNI-RT-000180_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>JUNOS has no interface command to not reply to an ICMP Mask Request message destined to the router. Consequently, to ensure that the router does not send any ICMP Mask Reply message in response to an ICMP Mask Request, include a term statement in the routing engine filter to silently drop any ICMP Masks Requests sent to it as shown in the example below.

firewall {
    family inet {
       …
       …
       …
        }
        filter DESTINED_TO_RP {
            term ALLOW_XYZ {
                from {
                    protocol xyz;
                }
                then accept;
            }
            …
            …
            …
            }
            term DENY_MASK_REQUEST {
                from {
                    protocol icmp;
                    icmp-type mask-request;
                }
                then {
                    discard;
                }
            }
            term ICMP_ANY {
                from {
                    protocol icmp;
                }
                then accept;
            }
            term DENY_BY_DEFAULT {
                then {
                    log;
                    discard;
                }
            }
        }
    }

If the router is not configured to silently drop all  ICMP Mask Reply messages destined to the router, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000190">
    <title>SRG-NET-000362-RTR-000115</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000190_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000190</version>
      <title>The Juniper router must be configured to have Internet Control Message Protocol (ICMP) redirect messages disabled on all external interfaces.</title>
      <description>&lt;VulnDiscussion&gt;The ICMP supports IP traffic by relaying information about paths, routes, and network conditions. Routers automatically send ICMP messages under a wide variety of conditions. Redirect ICMP messages are commonly used by attackers for network mapping and diagnosis.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002385</ident>
      <fixtext fixref="F-JUNI-RT-000190_fix">Disable ICMP redirects on all external interfaces as shown in the example below.

[edit interfaces]
set ge-1/0/0 unit 0 family inet no-redirects
set ge-1/1/0 unit 0 family inet no-redirects</fixtext>
      <fix id="F-JUNI-RT-000190_fix" />
      <check system="C-JUNI-RT-000190_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the device configuration to determine if it has been configured to ensure the router does not send ICMP Redirect messages out to any external interface.

interfaces {
    ge-1/0/0 {
        unit 0 {
            family inet {
                no-redirects;
                address 11.1.12.2/24;
            }
        }
    }
    ge-1/1/0  {
        unit 0 {
            family inet {
                no-redirects;
                address 11.1.23.2/24;
            }
        }
    }

If ICMP Redirect messages are enabled on any external interfaces, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000200">
    <title>SRG-NET-000078-RTR-000001</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000200_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000200</version>
      <title>The Juniper router must be configured to log all packets that have been dropped.</title>
      <description>&lt;VulnDiscussion&gt;Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being done or attempted to be done, and by whom, to compile an accurate risk assessment. Auditing the actions on network devices provides a means to recreate an attack or identify a configuration mistake on the device.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000134</ident>
      <fixtext fixref="F-JUNI-RT-000200_fix">Configure the firewall terms that discards or rejects packets to log the action as shown in the example below.

[edit firewall family inet]
set filter FILTER_INBOUND term DENY_BY_DEFAULT then syslog discard

Configure logging to record packets being dropped by firewall filters as shown in the example below.

[edit system syslog]
set file LOG_FILE firewall any

Note: The “any” parameter can be configured in lieu of the “firewall” parameter.</fixtext>
      <fix id="F-JUNI-RT-000200_fix" />
      <check system="C-JUNI-RT-000200_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review all filters to verify that packets that are discarded or rejected are logged as shown in the configuration below.

firewall {
    family inet {
        filter XYZ
            …
            …
            …
            }
            term DENY_BY_DEFAULT {
                then {
                    syslog;
                    discard;
                }
            }
        }
    }

Verify that logging is enabled to capture packets that are dropped as shown in the configuration below.

system {
    host-name XYZ;
    …
    …
    …
    }
    syslog {
        file LOG_FILE {
            firewall any;
        }
    }
}

Note: The “any” parameter can be configured in lieu of the “firewall” parameter.

If packets being dropped are not logged, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000210">
    <title>SRG-NET-000076-RTR-000001</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000210_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000210</version>
      <title>The Juniper router must be configured to produce audit records containing information to establish where the events occurred.</title>
      <description>&lt;VulnDiscussion&gt;Without establishing where events occurred, it is impossible to establish, correlate, and investigate the events leading up to an outage or attack.

In order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know where events occurred, such as router components, modules, device identifiers, node names, and functionality.

Associating information about where the event occurred within the network provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured router.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000132</ident>
      <fixtext fixref="F-JUNI-RT-000210_fix">Configure the router to log events containing information to establish where the events occurred as shown in the example below.
 
[edit system syslog]
set file LOG_FILE any any</fixtext>
      <fix id="F-JUNI-RT-000210_fix" />
      <check system="C-JUNI-RT-000210_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify that events are logged containing information to establish where the events occurred as shown in the example below.

system {
    host-name XYZ;
    …
    …
    …
    }
    syslog {
        file LOG_FILE {
            any any;
        }
    }
}

If the router is not configured to produce audit records containing information to establish to establish where the events occurred, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000220">
    <title>SRG-NET-000077-RTR-000001</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000220_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000220</version>
      <title>The Juniper router must be configured to produce audit records containing information to establish the source of the events.</title>
      <description>&lt;VulnDiscussion&gt;Without establishing the source of the event, it is impossible to establish, correlate, and investigate the events leading up to an outage or attack.

In order to compile an accurate risk assessment and provide forensic analysis, security personnel need to know the source of the event.

In addition to logging where events occur within the network, the audit records must also identify sources of events such as IP addresses, processes, and node or device names.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000133</ident>
      <fixtext fixref="F-JUNI-RT-000220_fix">Configure the router to log events containing information to establish where the events occurred as shown in the example below.
 
[edit system syslog]
set file LOG_FILE any any</fixtext>
      <fix id="F-JUNI-RT-000220_fix" />
      <check system="C-JUNI-RT-000220_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify that events are logged containing information to establish where the events occurred as shown in the example below.

system {
    host-name XYZ;
    …
    …
    …
    }
    syslog {
        file LOG_FILE {
            any any;
        }
    }
}

If the router is not configured to produce audit records containing information to establish the source of the events, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000230">
    <title>SRG-NET-000019-RTR-000001</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000230_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000230</version>
      <title>The Juniper router must be configured to disable the auxiliary port unless it is connected to a secured modem providing encryption and authentication.</title>
      <description>&lt;VulnDiscussion&gt;The use of POTS lines to modems connecting to network devices provides clear text of authentication traffic over commercial circuits that could be captured and used to compromise the network. Additional war dial attacks on the device could degrade the device and the production network.

Secured modem devices must be able to authenticate users and must negotiate a key exchange before full encryption takes place. The modem will provide full encryption capability (Triple DES) or stronger. The technician who manages these devices will be authenticated using a key fob and granted access to the appropriate maintenance port; thus, the technician will gain access to the managed device (router, switch, etc.). The token provides a method of strong (two-factor) user authentication. The token works in conjunction with a server to generate one-time user passwords that will change values at second intervals. The user must know a personal identification number (PIN) and possess the token to be allowed access to the device.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001414</ident>
      <fixtext fixref="F-JUNI-RT-000230_fix">Disable the auxiliary port.

[edit system ports]
set auxiliary disable

Note: If used for out-of-band administrative access, the port must be connected to a secured modem providing encryption and authentication.</fixtext>
      <fix id="F-JUNI-RT-000230_fix" />
      <check system="C-JUNI-RT-000230_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the configuration and verify that the auxiliary port is disabled unless a secured modem providing encryption and authentication is connected to it.

system {
    host-name XYZ;
    …
    …
    …
    ports {
        auxiliary {
            disable;
            type xterm;
        }
    }

Note: If the auxiliary port has never been configured or has been removed from the configuration, it will not be shown in the configuration.

If the auxiliary port is not disabled or is not connected to a secured modem when it is enabled, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000240">
    <title>SRG-NET-000202-RTR-000001</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000240_rule" severity="high" weight="10.0">
      <version>JUNI-RT-000240</version>
      <title>The Juniper perimeter router must be configured to deny network traffic by default and allow network traffic by exception.</title>
      <description>&lt;VulnDiscussion&gt;A deny-all, permit-by-exception network communications traffic policy ensures that only connections that are essential and approved are allowed.

This requirement applies to both inbound and outbound network communications traffic. All inbound and outbound traffic must be denied by default. Firewalls and perimeter routers should only allow traffic through that is explicitly permitted. The initial defense for the internal network is to block any traffic at the perimeter that is attempting to make a connection to a host residing on the internal network. In addition, allowing unknown or undesirable outbound traffic by the firewall or router will establish a state that will permit the return of this undesirable traffic inbound.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001109</ident>
      <fixtext fixref="F-JUNI-RT-000240_fix">This requirement is not applicable for the DoDIN Backbone.

Configure a term at the end of the inbound filter to deny all other traffic by default as shown in the example below.

[edit firewall family inet]
set filter FILTER_INBOUND_TRAFFIC term DENY_ALL_OTHER then syslog discard</fixtext>
      <fix id="F-JUNI-RT-000240_fix" />
      <check system="C-JUNI-RT-000240_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Review the router configuration to verify that the inbound filter applied to all external interfaces is configured to allow specific ports and protocols and deny all other traffic.

Verify that an inbound filter is applied to all external interfaces as shown in the example below.

interfaces {
    ge-0/0/0 {
        unit 0 {
            family inet {
                filter {
                    input FILTER_INBOUND_TRAFFIC;
                }
                address 11.1.12.2/24;
            }
        }
    }

Review inbound filters to verify that the ending term is configured to deny all other traffic that is not explicitly allowed.

firewall {
    family inet {
        filter FILTER_INBOUND_TRAFFIC {
            term ALLOW_BGP {
                from {
                    destination-address {
                        11.1.24.0/24;
                    }
                    protocol tcp;
                    destination-port bgp;
                }
                then accept;
            }
            …
            …
            …
            term ALLOW_XYZ {
                from {
                    protocol xyz;
                }
                then accept;
            }
            term DENY_ALL_OTHER {
                then {
                    syslog;
                    discard;
                }
            }
        }

If the filter is not configured to allow specific ports and protocols and deny all other traffic, this is a finding. If the filter is not configured inbound on all external interfaces, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000250">
    <title>SRG-NET-000019-RTR-000002</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000250_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000250</version>
      <title>The Juniper perimeter router must be configured to enforce approved authorizations for controlling the flow of information between interconnected networks in accordance with applicable policy.</title>
      <description>&lt;VulnDiscussion&gt;Information flow control regulates authorized information to travel within a network and between interconnected networks. Controlling the flow of network traffic is critical so it does not introduce any unacceptable risk to the network infrastructure or data. An example of a flow control restriction is blocking outside traffic claiming to be from within the organization. For most routers, internal information flow control is a product of system design.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001414</ident>
      <fixtext fixref="F-JUNI-RT-000250_fix">This requirement is not applicable for the DoDIN Backbone.

Configure firewall filters to allow or deny traffic for specific source and destination addresses as well as ports and protocols between various subnets as required. The commands used below were used to create the configuration as shown in the check content.

[edit firewall family inet]
set filter FILTER_SERVER_TRAFFIC term PRINT_FILTER from destination-address 11.1.23.0/24
set filter FILTER_SERVER_TRAFFIC term PRINT_FILTER from protocol tcp destination-port [515 631 9100] 
set filter FILTER_SERVER_TRAFFIC term PRINT_FILTER then accept
set filter FILTER_SERVER_TRAFFIC term SQL_FILTER from destination-address 11.1.24.0/24
set filter FILTER_SERVER_TRAFFIC term SQL_FILTER from protocol tcp destination-port [1433 1434 4022]
set filter FILTER_SERVER_TRAFFIC term SQL_FILTER then accept
set filter FILTER_SERVER_TRAFFIC term ALLOW_OSPF from protocol ospf
set filter FILTER_SERVER_TRAFFIC term ALLOW_OSPF then accept
set filter FILTER_SERVER_TRAFFIC term ALLOW_ICMP from protocol icmp
set filter FILTER_SERVER_TRAFFIC term ALLOW_ICMP then accept
set filter FILTER_SERVER_TRAFFIC term DENY_ALL_OTHER then syslog reject

Apply the filter inbound on all applicable interfaces.

[edit interfaces ge-0/0/0 unit 0 family inet]
set filter input FILTER_SERVER_TRAFFIC</fixtext>
      <fix id="F-JUNI-RT-000250_fix" />
      <check system="C-JUNI-RT-000250_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify that firewall filters are configured to allow or deny traffic for specific source and destination addresses as well as ports and protocols. For example, the configuration below will allow only printer traffic into subnet 11.1.23.0/24 and SQL traffic into subnet 11.1.24.0/24. ICMP is allowed for troubleshooting and OSPF is the routing protocol used within the network.

interfaces {
    ge-0/0/0 {
        unit 0 {
            family inet {
                filter {
                    input FILTER_SERVER_TRAFFIC;
                }
                address 11.1.12.2/24;
            }
        }
    }
…
…
…
firewall {
    family inet {
        filter FILTER_SERVER_TRAFFIC {
            term PRINT_FILTER {
                from {
                    destination-address {
                        11.1.23.0/24;
                    }
                    protocol tcp;
                    destination-port [ 515 631 9100 ];
                }
                then accept;
            }
            term SQL_FILTER {
                from {
                    destination-address {
                        11.1.24.0/24;
                    }
                    protocol tcp;
                    destination-port [ 1433 1434 4022 ];
                }
                then accept;
            }
            term ALLOW_BGP {
                from {
                    protocol tcp;
                    destination-port bgp;
                }
                then accept;
            }
            term ALLOW_OSPF {
                from {
                    protocol ospf;
                }
                then accept;
            }
            term ALLOW_ICMP {
                from {
                    protocol icmp;
                }
                then accept;
            }
            term DENY_ALL_OTHER {
                then {
                    syslog;
                    reject;
                }
            }
        }

If the router is not configured to enforce approved authorizations for controlling the flow of information within the network based on organization-defined information flow control policies, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000260">
    <title>SRG-NET-000364-RTR-000109</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000260_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000260</version>
      <title>The Juniper perimeter router must be configured to only allow incoming communications from authorized sources to be routed to authorized destinations.</title>
      <description>&lt;VulnDiscussion&gt;Unrestricted traffic may contain malicious traffic that poses a threat to an enclave or to other connected networks. Additionally, unrestricted traffic may transit a network, which uses bandwidth and other resources.

Traffic can be restricted directly by an access control list (ACL), which is a firewall function, or by Policy Routing. Policy Routing is a technique used to make routing decisions based on a number of different criteria other than just the destination network, including source or destination network, source or destination address, source or destination port, protocol, packet size, and packet classification. This overrides the router's normal routing procedures used to control the specific paths of network traffic. It is normally used for traffic engineering but can also be used to meet security requirements; for example, traffic that is not allowed can be routed to the Null0 or discard interface. Policy Routing can also be used to control which prefixes appear in the routing table.

This requirement is intended to allow network administrators the flexibility to use whatever technique is most effective.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002403</ident>
      <fixtext fixref="F-JUNI-RT-000260_fix">This requirement is not applicable for the DoDIN Backbone.

Configure the router to allow only incoming communications from authorized sources to be routed to authorized destinations.</fixtext>
      <fix id="F-JUNI-RT-000260_fix" />
      <check system="C-JUNI-RT-000260_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Review the router configuration to determine if the router allows only incoming communications from authorized sources to be routed to authorized destinations. The hypothetical example below allows inbound NTP from server 11.1.12.1 only to host 3.3.3.3 and denies all other NTP traffic.

}
filter INBOUND_FILTER {
    term ALLOW_NTP {
        from {
            source-address {
                11.1.12.1/32;
            }
            destination-address {
                3.3.3.3/32;
            }
            protocol udp;
            destination-port ntp;
        }
    }
    term DENY_NTP {
        from {
            protocol tcp;
            destination-port ntp;
        }
    }
}

If the router does not restrict incoming communications to allow only authorized sources and destinations, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000270">
    <title>SRG-NET-000364-RTR-000110</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000270_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000270</version>
      <title>The Juniper perimeter router must be configured to block inbound packets with source Bogon IP address prefixes.</title>
      <description>&lt;VulnDiscussion&gt;Packets with Bogon IP source addresses should never be allowed to traverse the IP core. Bogon IP networks are RFC1918 addresses or address blocks that have never been assigned by the IANA or have been reserved.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002403</ident>
      <fixtext fixref="F-JUNI-RT-000270_fix">This requirement is not applicable for the DoDIN Backbone.

Configure the perimeter to block inbound packets with Bogon source addresses.

Configure a prefix list containing the current Bogon prefixes as shown below.

[edit policy-options]
set prefix-list BOGON_PREFIXES 0.0.0.0/8
set prefix-list BOGON_PREFIXES 10.0.0.0/8
set prefix-list BOGON_PREFIXES 100.64.0.0/10
set prefix-list BOGON_PREFIXES 127.0.0.0/8
set prefix-list BOGON_PREFIXES 169.254.0.0/16
set prefix-list BOGON_PREFIXES 172.16.0.0/12
set prefix-list BOGON_PREFIXES 192.0.0.0/24
set prefix-list BOGON_PREFIXES 192.0.2.0/24
set prefix-list BOGON_PREFIXES 192.168.0.0/16
set prefix-list BOGON_PREFIXES 198.18.0.0/15
set prefix-list BOGON_PREFIXES 198.51.100.0/24
set prefix-list BOGON_PREFIXES 203.0.113.0/24
set prefix-list BOGON_PREFIXES 224.0.0.0/4
set prefix-list BOGON_PREFIXES 240.0.0.0/4

Add a term to the inbound filter to block the Bogon prefixes

[edit firewall family inet filter INBOUND_FILTER]
set term BLOCK_BOGONS from source-prefix-list BOGON_PREFIXES
set term BLOCK_BOGONS then syslog discard
insert term BLOCK_BOGONS before term ALLOW_BGP</fixtext>
      <fix id="F-JUNI-RT-000270_fix" />
      <check system="C-JUNI-RT-000270_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Review the router configuration to verify that an ingress filter applied to all external interfaces is blocking packets with Bogon source addresses.

Verify a prefix list has been configured containing the current Bogon prefixes as shown in the example below.

policy-options {
    prefix-list BOGON_PREFIXES {
        0.0.0.0/8;
        10.0.0.0/8;
        100.64.0.0/10;
        127.0.0.0/8;
        169.254.0.0/16;
        172.16.0.0/12;
        192.0.0.0/24;
        192.0.2.0/24;
        192.168.0.0/16;
        198.18.0.0/15;
        198.51.100.0/24;
        203.0.113.0/24;
        224.0.0.0/4;
        240.0.0.0/4;
    }
}

Verify that the inbound filter applied to all external interfaces will block all traffic from Bogon source addresses.

interfaces {
    ge-0/0/0 {
        unit 0 {
            family inet {
                filter {
                    input INBOUND_FILTER;
                }
                address 11.1.12.2/24;
            }
        }
    }
…
…
…
firewall {
    family inet {
        filter INBOUND_FILTER {
            term BLOCK_BOGONS {
                from {
                    source-prefix-list {
                        BOGON_PREFIXES;
                    }
                }
                then {
                    syslog;
                    discard;
                }
            }
            term ALLOW_BGP {
                from {
                    protocol tcp;
                    destination-port bgp;
                }
                then accept;
            }
            term ALLOW_XYZ {
                from {
                    protocol xyz;
                }
                then accept;
            }
            term DENY_ALL_OTHER {
                then {
                    syslog;
                    reject;
                }
            }
        }
}

If the router is not configured to block inbound packets with source Bogon IP address prefixes, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000280">
    <title>SRG-NET-000019-RTR-000008</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000280_rule" severity="high" weight="10.0">
      <version>JUNI-RT-000280</version>
      <title>The Juniper perimeter router must be configured to protect an enclave connected to an alternate gateway by using an inbound filter that only permits packets with destination addresses within the sites address space.</title>
      <description>&lt;VulnDiscussion&gt;Enclaves with alternate gateway connections must take additional steps to ensure there is no compromise on the enclave network or NIPRNet. Without verifying the destination address of traffic coming from the site's alternate gateway, the perimeter router could be routing transit data from the Internet into the NIPRNet. This could also make the perimeter router vulnerable to a denial-of-service (DoS) attack as well as provide a back door into the NIPRNet. The DoD enclave must ensure the ingress filter applied to external interfaces on a perimeter router connecting to an Approved Gateway is secure through filters permitting packets with a destination address belonging to the DoD enclave's address block.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001414</ident>
      <fixtext fixref="F-JUNI-RT-000280_fix">This requirement is not applicable for the DoDIN Backbone.

Configure the ingress filter of the perimeter router connected to an alternate gateway to only permit packets with destination addresses of the site's NIPRNet address space or a destination address belonging to the address block assigned by the alternate gateway network service provider as shown in the example below.

[edit firewall family inet filter ISP_FILTER]
set term RESTRICT_DESTINATION from destination-address 0.0.0.0/0
set term RESTRICT_DESTINATION from destination-address 11.1.0.0/16 except
set term RESTRICT_DESTINATION then syslog discard
insert term RESTRICT_DESTINATION before term ALLOW_XYZ</fixtext>
      <fix id="F-JUNI-RT-000280_fix" />
      <check system="C-JUNI-RT-000280_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Verify the interface connecting to ISP has an inbound filter as shown in the example below.

interfaces {
    ge-0/0/0 {
        description "Verizon ISP link";
        unit 0 {
            family inet {
                filter {
                    input ISP_FILTER;
                }
                address 11.1.12.2/24;
            }
        }
    }

Verify that the filter only allows traffic to specific destination addresses (i.e. enclave’s NIPRNet address space) as shown in the example below.

firewall {
    family inet {
        filter ISP_FILTER {
            term RESTRICT_DESTINATION {
                from {
                    destination-address {
                        0.0.0.0/0;
                        11.1.0.0/16 except;
                    }
                }
                then {
                    syslog;
                    discard;
                }
            }
            term ALLOW_XYZ {
                from {
                    protocol xyz;
                }
                then accept;
            }
            …
            …
            …
            term DENY_ALL_OTHER {
                then {
                    syslog;
                    reject;
                }
            }
        }

If the ingress filter bound to the interface connecting to an alternate gateway permits packets with addresses other than those specified, such as destination addresses of the site's NIPRNet address space or a destination address belonging to the address block assigned by the alternate gateway network service provider, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000290">
    <title>SRG-NET-000019-RTR-000009</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000290_rule" severity="high" weight="10.0">
      <version>JUNI-RT-000290</version>
      <title>The Juniper perimeter router must be configured to not be a Border Gateway Protocol (BGP) peer to an alternate gateway service provider.</title>
      <description>&lt;VulnDiscussion&gt;The perimeter router will not use a routing protocol to advertise NIPRNet addresses to alternate gateways. Most ISPs use BGP to share route information with other autonomous systems, that is, any network under a different administrative control and policy than a local site. If BGP is configured on the perimeter router, no BGP neighbors will be defined to peer routers from an autonomous system (AS) belonging to any alternate gateway. The only allowable method is a static route to reach the alternate gateway.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001414</ident>
      <fixtext fixref="F-JUNI-RT-000290_fix">This requirement is not applicable for the DoDIN Backbone.

Configure a static route on the perimeter router to reach the AS of a router connecting to an alternate gateway as shown in the example below.

[edit routing-options]
set static route 0.0.0.0/0 next-hop x.x.x.x</fixtext>
      <fix id="F-JUNI-RT-000290_fix" />
      <check system="C-JUNI-RT-000290_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Review the protocols hierarchy in the router configuration (see example below) and verify there are no BGP neighbors configured to a peer AS that belongs to the alternate gateway service provider.

protocols {
    bgp {
        group AS_2 {
            type external;
            peer-as 2;
            neighbor x.x.x.x {
                authentication-algorithm hmac-sha-1-96;
                authentication-key-chain BGP_KEY;
            }
            neighbor x.x.x.x {
                authentication-algorithm hmac-sha-1-96;
                authentication-key-chain BGP_KEY;
            }
        }
    }

If there are BGP neighbors connecting to a peer AS of the alternate gateway service provider, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000300">
    <title>SRG-NET-000019-RTR-000010</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000300_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000300</version>
      <title>The Juniper perimeter router must be configured to not redistribute static routes to an alternate gateway service provider into BGP or an IGP peering with the NIPRNet or to other autonomous systems.</title>
      <description>&lt;VulnDiscussion&gt;If the static routes to the alternate gateway are being redistributed into an Exterior Gateway Protocol or Interior Gateway Protocol to a NIPRNet gateway, this could make traffic on NIPRNet flow to that particular router and not to the Internet Access Point routers. This could not only wreak havoc with traffic flows on NIPRNet, but it could overwhelm the connection from the router to the NIPRNet gateway(s) and also cause traffic destined for outside of NIPRNet to bypass the defenses of the Internet Access Points.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001414</ident>
      <fixtext fixref="F-JUNI-RT-000300_fix">This requirement is not applicable for the DoDIN Backbone.

Configure the router so that static routes are not redistributed to an alternate gateway into either a BGP or any IGP peering with the NIPRNet or to any other autonomous systems. This can be done by excluding that route in the export policy as shown in the example below.

[edit policy-options policy-statement REDISTRIBUTE]
set term NOT_ISP_DEFAULT from protocol static route-filter 0.0.0.0/0 exact
set term NOT_ISP_DEFAULT then reject
insert term set term NOT_ISP_DEFAULT before term EXPORT_STATIC</fixtext>
      <fix id="F-JUNI-RT-000300_fix" />
      <check system="C-JUNI-RT-000300_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Review the configurations under the protocols hierarchy. If the export statement is configured as shown in the example below proceed to step 2.

}
protocols {
    bgp {
        group AS_5 {
            type external;
            export REDISTRIBUTE;
            peer-as 5;
        …
        …
        …
            }
        }
    }
    ospf {
        export REDISTRIBUTE;
        area 0.0.0.0 {
            interface ge-0/0/0 {
            …
            …
            …
            }
        }
    }
}

Review the export policy referenced above to determine if static routes are being exported as shown in the example below.

policy-options {
    …
    …
    …
    }
    policy-statement REDISTRIBUTE {
        term EXPORT_STATIC {
            from protocol static;
            then accept;
        }
    }
}

Review the static routes that have been configured to determine if there routes with the next hop address that of the alternate gateway.

routing-options {
    static {
        route 10.1.16.0/24 next-hop 10.1.12.1;
        route 0.0.0.0/0 next-hop 144.22.1.3;
    }

If the static routes to the alternate gateway are being redistributed into BGP or any IGP peering to a NIPRNet gateway or any other autonomous system, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000310">
    <title>SRG-NET-000026-RTR-000031</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000310_rule" severity="high" weight="10.0">
      <version>JUNI-RT-000310</version>
      <title>The Juniper perimeter router must be configured to restrict it from accepting outbound IP packets that contain an illegitimate address in the source address field via egress filter or by enabling Unicast Reverse Path Forwarding (uRPF).</title>
      <description>&lt;VulnDiscussion&gt;A compromised host in an enclave can be used by a malicious actor as a platform to launch cyberattacks on third-parties. This is a common practice in "botnets", which are a collection of compromised computers using malware to attack (usually distributed denial of service [DDoS]) other computers or networks. DDoS attacks frequently leverage IP source address spoofing, in which packets with false source IP addresses send traffic to multiple hosts, which then send return traffic to the hosts with the IP addresses that were forged. This can generate significant, even massive, amounts of traffic. Therefore, protection measures to counteract IP source address spoofing must be taken.

The router must not accept any outbound IP packets that contain an illegitimate address in the source address field by enabling uRPF strict mode or by implementing an egress access control list (ACL). uRPF provides an IP address spoof protection capability. When uRPF is enabled in strict mode, the packet must be received on the interface that the device would use to forward the return packet.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001094</ident>
      <fixtext fixref="F-JUNI-RT-000310_fix">This requirement is not applicable for the DoDIN Backbone.

Configure the router to ensure that an egress filter or uRPF is configured on internal interfaces to restrict the router from accepting any outbound IP packet that contains an illegitimate address in the source field. The example below enables uRPF.

[edit interfaces ge-0/1/0  unit 0 family inet]
set rpf-check</fixtext>
      <fix id="F-JUNI-RT-000310_fix" />
      <check system="C-JUNI-RT-000310_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Review the router configuration to verify uRPF or an egress filter has been configured on all internal interfaces to restrict the router from accepting outbound IP packets that contain an illegitimate address in the source address field.

interfaces {
    ge-0/1/0 {
        description "LAN link";
        unit 0 {
            family inet {
                            rpf-check;

If uRPF or an egress filter to restrict the router from accepting outbound IP packets that contain an illegitimate address in the source address field has not been configured on all internal interfaces in an enclave, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000320">
    <title>SRG-NET-000205-RTR-000003</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000320_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000320</version>
      <title>The Juniper perimeter router must be configured to filter traffic destined to the enclave in accordance with the guidelines contained in DoD Instruction 8551.1.</title>
      <description>&lt;VulnDiscussion&gt;Vulnerability assessments must be reviewed by the System Administrator, and protocols must be approved by the Information Assurance (IA) staff before entering the enclave.

Access control lists (ACLs) are the first line of defense in a layered security approach. They permit authorized packets and deny unauthorized packets based on port or service type. They enhance the posture of the network by not allowing packets to reach a potential target within the security domain. The lists provided are highly susceptible ports and services that should be blocked or limited as much as possible without adversely affecting customer requirements. Auditing packets attempting to penetrate the network but that are stopped by an ACL will allow network administrators to broaden their protective ring and more tightly define the scope of operation.

If the perimeter is in a Deny-by-Default posture and what is allowed through the filter is in accordance with DoD Instruction 8551.1, and if the permit rule is explicitly defined with explicit ports and protocols allowed, then all requirements related to PPS being blocked would be satisfied.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001097</ident>
      <fixtext fixref="F-JUNI-RT-000320_fix">This requirement is not applicable for the DoDIN Backbone.

Configure the router to use an inbound filter on all external interfaces as shown in the example below to restrict traffic in accordance with the guidelines contained in DOD Instruction 8551.1.

set filter INBOUND_FILTER term ALLOW_ABC from protocol tcp destination-port abc
set filter INBOUND_FILTER term ALLOW_ABC then accept
set filter INBOUND_FILTER term ALLOW_XYZ from protocol tcp destination-port xyz
set filter INBOUND_FILTER term ALLOW_XYZ then accept
set filter INBOUND_FILTER term DENY_ALL_OTHER then syslog reject

[edit interfaces ge-0/0/0 unit 0 family inet]
set filter input INBOUND_FILTER</fixtext>
      <fix id="F-JUNI-RT-000320_fix" />
      <check system="C-JUNI-RT-000320_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Review the router configuration to verify that the ingress filter is in accordance with DoD 8551.

Verify that an inbound filter is configured on all external interfaces.

interfaces {
    ge-0/0/0 {
        unit 0 {
            family inet {
                filter {
                    input INBOUND_FILTER;
                }
                address 11.1.12.2/24;
            }
        }
    }

Review the inbound filter to verify that it is filtering traffic in accordance with DoD 8551.

firewall {
    family inet {
        filter INBOUND_FILTER {
            term ALLOW_ABC {
                from {
                    protocol tcp;
                    destination-port abc;
                }
                then accept;
            }
            term ALLOW_XYZ {
                from {
                    protocol xyz;
                }
                then accept;
            }
            term DENY_ALL_OTHER {
                then {
                    syslog;
                    reject;
                }
            }
        }
}

If the router does not filter traffic in accordance with the guidelines contained in DoD 8551, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000330">
    <title>SRG-NET-000205-RTR-000004</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000330_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000330</version>
      <title>The Juniper perimeter router must be configured to filter ingress traffic at the external interface on an inbound direction.</title>
      <description>&lt;VulnDiscussion&gt;Access lists are used to separate data traffic into that which it will route (permitted packets) and that which it will not route (denied packets). Secure configuration of routers makes use of access lists for restricting access to services on the router itself as well as for filtering traffic passing through the router. 

Inbound versus Outbound: It should be noted that some operating systems default access lists are applied to the outbound queue. The more secure solution is to apply the access list to the inbound queue for three reasons:

- The router can protect itself before damage is inflicted.
- The input port is still known and can be filtered upon.
- It is more efficient to filter packets before routing them.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001097</ident>
      <fixtext fixref="F-JUNI-RT-000330_fix">This requirement is not applicable for the DoDIN Backbone.

Configure the router to use an inbound filter on all external interfaces as shown in the example below.

[edit interfaces ge-0/0/0 unit 0 family inet]
set filter input INBOUND_FILTER</fixtext>
      <fix id="F-JUNI-RT-000330_fix" />
      <check system="C-JUNI-RT-000330_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Review the router configuration to verify that an inbound filter is configured on all external interfaces as shown in the example below.

interfaces {
     description "NIPRnet";
    ge-0/0/0 {
        unit 0 {
            family inet {
                filter {
                    input INBOUND_FILTER;
                }
                address x.x.x.x/24;
            }
        }
    }

If the router is not configured to filter traffic entering the network at all external interfaces in an inbound direction, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000340">
    <title>SRG-NET-000205-RTR-000005</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000340_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000340</version>
      <title>The Juniper perimeter router must be configured to filter egress traffic at the internal interface on an inbound direction.</title>
      <description>&lt;VulnDiscussion&gt;Access lists are used to separate data traffic into that which it will route (permitted packets) and that which it will not route (denied packets). Secure configuration of routers makes use of access lists for restricting access to services on the router itself as well as for filtering traffic passing through the router. 

Inbound versus Outbound: It should be noted that some operating systems default access lists are applied to the outbound queue. The more secure solution is to apply the access list to the inbound queue for three reasons:

- The router can protect itself before damage is inflicted.
- The input port is still known and can be filtered upon.
- It is more efficient to filter packets before routing them.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001097</ident>
      <fixtext fixref="F-JUNI-RT-000340_fix">This requirement is not applicable for the DoDIN Backbone.

Configure the router to use an inbound filter on all internal interfaces as shown in the example below.

[edit interfaces ge-0/1/0 unit 0 family inet]
set filter input OUTBOUND_FILTER</fixtext>
      <fix id="F-JUNI-RT-000340_fix" />
      <check system="C-JUNI-RT-000340_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Review the router configuration to verify that the egress ACL is bound to the internal interface in an inbound direction.

interfaces {
    ge-0/1/0 {
        description "LAN link";
        unit 0 {
            family inet {
                filter {
                    input OUTBOUND_FILTER;
                }
                address x.x.x.x/24;
            }
        }
    }


If the router is not configured to filter traffic leaving the network at the internal interface in an inbound direction, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000350">
    <title>SRG-NET-000195-RTR-000084</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000350_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000350</version>
      <title>The Juniper perimeter router must be configured to block all packets with any IP options.</title>
      <description>&lt;VulnDiscussion&gt;Packets with IP options are not fast switched and henceforth must be punted to the router processor. Hackers who initiate denial-of-service (DoS) attacks on routers commonly send large streams of packets with IP options. Dropping the packets with IP options reduces the load of IP options packets on the router. The end result is a reduction in the effects of the DoS attack on the router and on downstream routers.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002403</ident>
      <fixtext fixref="F-JUNI-RT-000350_fix">This requirement is not applicable for the DoDIN Backbone.

Configure the router to drop all packets with IP options.

[edit firewall family inet filter INBOUND_FILTER]
set term DROP_IPOPTIONS from ip-options any
set term DROP_IPOPTIONS then discard
insert term DROP_IPOPTIONS before  term BLOCK_BOGONS</fixtext>
      <fix id="F-JUNI-RT-000350_fix" />
      <check system="C-JUNI-RT-000350_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Review the router configuration to determine if it will block all packets with IP options.

firewall {
    family inet {
        filter INBOUND_FILTER {
            term DROP_IPOPTIONS {
                from {
                    ip-options any;
                }
                then {
                    syslog;
                    discard;
                }
            }
            term BLOCK_BOGONS {
                from {
                    source-prefix-list {
                        BOGON_PREFIXES;
                    }
                }
                then {
                    syslog;
                    discard;
                }
            }
            term ALLOW_ABC {
            …
            …
            …
            term DENY_ALL_OTHER {
                then {
                    log;
                    syslog;
                    reject;
                }
            }
        }

If the router is not configured to drop all packets with IP options, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000360">
    <title>SRG-NET-000364-RTR-000111</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000360_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000360</version>
      <title>The Juniper perimeter router must be configured to have Link Layer Discovery Protocol (LLDP) disabled on all external interfaces.</title>
      <description>&lt;VulnDiscussion&gt;LLDPs are primarily used to obtain protocol addresses of neighboring devices and discover platform capabilities of those devices. Use of SNMP with the LLDP Management Information Base (MIB) allows network management applications to learn the device type and the SNMP agent address of neighboring devices, thereby enabling the application to send SNMP queries to those devices. LLDPs are also media- and protocol-independent as they run over the data link layer; therefore, two systems that support different network-layer protocols can still learn about each other. Allowing LLDP messages to reach external network nodes is dangerous as it provides an attacker a method to obtain information of the network infrastructure that can be useful to plan an attack.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002403</ident>
      <fixtext fixref="F-JUNI-RT-000360_fix">This requirement is not applicable for the DoDIN Backbone.

Disable LLDP on all external interfaces. If necessary, remove the interface all parameter and define all internal interfaces as shown in the example below.

[edit protocols lldp]
delete interface all
set interface ge-0/1/0
set interface ge-0/1/1</fixtext>
      <fix id="F-JUNI-RT-000360_fix" />
      <check system="C-JUNI-RT-000360_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Review all router configurations to ensure LLDP is not enabled external interface. 

protocols {
    …
    …
    …
    lldp {
        advertisement-interval 30;
        interface all;
    }
}

If LLDP is configured globally or on any external interface, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000370">
    <title>SRG-NET-000364-RTR-000112</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000370_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000370</version>
      <title>The Juniper perimeter router must be configured to have Proxy ARP disabled on all external interfaces.</title>
      <description>&lt;VulnDiscussion&gt;When Proxy ARP is enabled on a Cisco router, it allows that router to extend the network (at Layer 2) across multiple interfaces (LAN segments). Because proxy ARP allows hosts from different LAN segments to look like they are on the same segment, proxy ARP is only safe when used between trusted LAN segments. Attackers can leverage the trusting nature of proxy ARP by spoofing a trusted host and then intercepting packets. Proxy ARP should always be disabled on router interfaces that do not require it, unless the router is being used as a LAN bridge.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002403</ident>
      <fixtext fixref="F-JUNI-RT-000370_fix">This requirement is not applicable for the DoDIN Backbone.

Disable Proxy ARP on all external interfaces as shown in the example below.

[edit interfaces em0 unit 0]
delete proxy-arp restricted</fixtext>
      <fix id="F-JUNI-RT-000370_fix" />
      <check system="C-JUNI-RT-000370_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to determine if IP Proxy ARP is disabled on all external interfaces.

interfaces {
     description "NIPRnet";
    ge-0/0/0 {
        unit 0 {
            proxy-arp restricted;
            family inet {

If IP Proxy ARP is enabled on any external interface, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000380">
    <title>SRG-NET-000364-RTR-000113</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000380_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000380</version>
      <title>The Juniper perimeter router must be configured to block all outbound management traffic.</title>
      <description>&lt;VulnDiscussion&gt;For in-band management, the management network must have its own subnet in order to enforce control and access boundaries provided by Layer 3 network nodes, such as routers and firewalls. Management traffic between the managed network elements and the management network is routed via the same links and nodes as that used for production or operational traffic. Safeguards must be implemented to ensure that the management traffic does not leak past the perimeter of the managed network.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001097</ident>
      <fixtext fixref="F-JUNI-RT-000380_fix">This requirement is not applicable for the DoDIN Backbone.

Configure the perimeter router of the managed network with an outbound filter on the egress interface to block all management traffic.

Configure a filter to block egress management traffic.

[edit firewall family inet]
Set filter OUTBOUND_FILTER term BLOCK_TACACS from protocol tcp port tacacs
Set filter OUTBOUND_FILTER term BLOCK_TACACS then syslog discard
Set filter OUTBOUND_FILTER term BLOCK_SNMP from protocol udp port [snmp snmptrap]
Set filter OUTBOUND_FILTER term BLOCK_SNMP then syslog discard
set filter OUTBOUND_FILTER term BLOCK_NETFLOW from protocol udp port [2055 9995 9996]
set filter OUTBOUND_FILTER term BLOCK_NETFLOW then syslog discard 

Configure the external interfaces with the outbound filter.

[edit interfaces ge-0/0/0  unit 0 family inet]
set filter output OUTBOUND_FILTER</fixtext>
      <fix id="F-JUNI-RT-000380_fix" />
      <check system="C-JUNI-RT-000380_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

The perimeter router of the managed network must be configured with an outbound filter on the egress interface to block all management traffic as shown in the example below.

Verify that the router has been configured with an outbound filter as shown in the example below.

interfaces {
     description "NIPRnet";
    ge-0/0/0 {
        unit 0 {
            family inet {
                no-redirects;
                filter {
                    output OUTBOUND_FILTER;
                }
                address 10.1.12.2/24;
            }
        }
    }

Verify that the outbound filter discard or rejects management traffic as shown in the example below.

firewall {
    family inet {
        …
        …
        …
        }
        filter OUTBOUND_FILTER {
            term BLOCK_TACACS {
                from {
                    protocol tcp;
                    port tacacs;
                }
                then {
                    syslog;
                    discard;
                }
            }
            term BLOCK_SNMP {
                from {
                    protocol udp;
                    port [ snmp snmptrap ];
                }
                then {
                    syslog;
                    discard;
                }
            }
            term BLOCK_NETFLOW {
                from {
                    protocol udp;
                    port [ 2055 9995 9996 ];
                }
            }
            term ALLOW_OTHER {
                then accept;
            }
        }
    }

If management traffic is not blocked at the perimeter, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000390">
    <title>SRG-NET-000205-RTR-000009</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000390_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000390</version>
      <title>The Juniper out-of-band management (OOBM) gateway router must be configured to transport management traffic to the Network Operations Center (NOC) via dedicated circuit, MPLS/VPN service, or IPsec tunnel.</title>
      <description>&lt;VulnDiscussion&gt;Using dedicated paths, the OOBM backbone connects the OOBM gateway routers located at the edge of the managed network and at the NOC. Dedicated links can be deployed using provisioned circuits or MPLS Layer 2 and Layer 3 VPN services or implementing a secured path with gateway-to-gateway IPsec tunnels. The tunnel mode ensures that the management traffic will be logically separated from any other traffic traversing the same path.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001097</ident>
      <fixtext fixref="F-JUNI-RT-000390_fix">This requirement is not applicable for the DoDIN Backbone.

Ensure that a dedicated circuit, MPLS/VPN service, or IPsec tunnel is deployed to transport management traffic between the managed network and the NOC.  If an IPsec tunnel is to be used, the steps below can be used as a guideline.

Configure an IPsec tunnel using commands similar to the example below.

[edit security]
set ike proposal IKE_PHASE1_PROPOSAL authentication-method pre-shared-keys
set ike proposal IKE_PHASE1_PROPOSAL authentication-algorithm sha-256
set ike proposal IKE_PHASE1_PROPOSAL dh-group group5
set ike proposal IKE_PHASE1_PROPOSAL encryption-algorithm aes-128-cbc
set ike policy 10.1.25.2 proposals IKE_PHASE1_PROPOSAL
set ike policy IKE_10.1.25.2 mode main
set ike policy 10.1.25.2 pre-shared-key ascii-text xxxxxxxxx
set ipsec proposal IPSEC_PHASE2_PROPOSAL protocol esp
set ipsec proposal IPSEC_PHASE2_PROPOSAL authentication-algorithm hmac-sha1-96
set ipsec proposal IPSEC_PHASE2_PROPOSAL encryption-algorithm aes-128-cbc
set ipsec security-association IPSEC_SA_MGMT mode tunnel
set ipsec security-association IPSEC_SA_MGMT dynamic ipsec-policy IPSEC_POLICY

Configure a filter to define the management traffic to be forwarded into the IPsec tunnel.

[edit firewall family inet]
set filter MGMT_TRAFFIC term ALLOW_SNMP from protocol udp port [snmp snmptrap]
set filter MGMT_TRAFFIC term ALLOW_SNMP then ipsec-sa IPSEC_SA_MGMT
set filter MGMT_TRAFFIC term ALLOW_TACACS from protocol tcp port tacacs
set filter MGMT_TRAFFIC term ALLOW_TACACS then ipsec-sa IPSEC_SA_MGMT
set filter MGMT_TRAFFIC term ALLOW_NETFLOW from protocol udp port [2055 9995 9996]
set filter MGMT_TRAFFIC term ALLOW_NETFLOW then ipsec-sa IPSEC_SA_MGMT
set filter MGMT_TRAFFIC term OTHER then accept</fixtext>
      <fix id="F-JUNI-RT-000390_fix" />
      <check system="C-JUNI-RT-000390_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Review the network topology diagram to determine connectivity between the managed network and the NOC. Review the OOBM gateway router configuration to validate the path and interface that the management traffic traverses. If an IPsec tunnel is used to transport the management traffic between the NOC and the managed network, review the configuration following the steps below.

Review the security association within the IPsec configuration to be used for encapsulating the management traffic and verify that it is in tunnel mode. Also note the security association to be used.

security {
    ipsec {
        proposal IPSEC_PHASE2_PROPOSAL {
            protocol esp;
            authentication-algorithm hmac-sha1-96;
            encryption-algorithm aes-128-cbc;
        }
        policy IPSEC_POLICY {
            perfect-forward-secrecy {
                keys group5;
            }
            proposals IPSEC_PHASE2_PROPOSAL;
        }
        security-association IPSEC-SA_XYZ {
            description "For XYZ";
            mode transport;
            manual {
                direction bidirectional {
                    protocol ah;
                    spi 256;
                    authentication {
                        algorithm hmac-sha1-96;
                        key ascii-text "$9$oPJjH.P5F69mSHqPQn6u0RhSreW-dsZGi8XYoZDmP"; ## SECRET-DATA
                    }
                }
            }
        }
        security-association IPSEC_SA_MGMT {
            description "IPsec Tunnel for Mgmt Traffic";
            mode tunnel;
            dynamic {
                ipsec-policy IPSEC_POLICY;
            }
        }
    }
    ike {
        proposal IKE_PHASE1_PROPOSAL {
            authentication-method pre-shared-keys;
            dh-group group5;
            authentication-algorithm sha-256;
            encryption-algorithm aes-128-cbc;
        }
        policy 10.1.25.2 {
            proposals IKE_PHASE1_PROPOSAL;
            pre-shared-key ascii-text "$9$J4UDkCA01IcHqEy"; ## SECRET-DATA
        }
    }

Verify there is a filter to direct the management traffic to the IPsec tunnel by verifying the name of the IPsec SA referenced in the then statement as shown in the example below.

firewall {
    family inet {
        …
        …
        …
       filter MGMT_TRAFFIC {
            term ALLOW_SNMP {
                from {
                    protocol udp;
                    port [ snmp snmptrap ];
                }
                then ipsec-sa IPSEC_SA_MGMT;
            }
            term ALLOW_TACACS {
                from {
                    protocol tcp;
                    port tacacs;
                }
                then ipsec-sa IPSEC_SA_MGMT;
            }
            term ALLOW_NETFLOW {
                from {
                    protocol udp;
                    port [ 2055 9995 9996 ];
                }
                then ipsec-sa IPSEC_SA_MGMT;
            }
            term OTHER {
                then accept;
            }
        }
    }

If management traffic is not transported between the managed network and the NOC via dedicated circuit, MPLS/VPN service, or IPsec tunnel, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000400">
    <title>SRG-NET-000205-RTR-000010</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000400_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000400</version>
      <title>The Juniper out-of-band management (OOBM) gateway router must be configured to forward only authorized management traffic to the Network Operations Center (NOC).</title>
      <description>&lt;VulnDiscussion&gt;The OOBM network is an IP network used exclusively for the transport of OAM&amp;P data from the network being managed to the OSS components located at the NOC. Its design provides connectivity to each managed network device, enabling network management traffic to flow between the managed network elements and the NOC. This allows the use of paths separate from those used by the managed network.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001097</ident>
      <fixtext fixref="F-JUNI-RT-000400_fix">This requirement is not applicable for the DoDIN Backbone.

Configure filters to permit only authorized management traffic into IPsec tunnels or the OOBM interface used for forwarding management data as shown in the examples below.

OOBM Link
[edit firewall family inet]
set filter MGMT_TRAFFIC term ALLOW_SNMP from protocol udp port [snmp snmptrap]
set filter MGMT_TRAFFIC term ALLOW_SNMP then accept
set filter MGMT_TRAFFIC term ALLOW_TACACS from protocol tcp port tacacs
set filter MGMT_TRAFFIC term ALLOW_TACACS then accept
set filter MGMT_TRAFFIC term ALLOW_NETFLOW from protocol udp port [2055 9995 9996]
set filter MGMT_TRAFFIC term ALLOW_NETFLOW then accept
set filter MGMT_TRAFFIC term DENY_OTHER then syslog discard

[edit interfaces ge-1/1/0  unit 0 family inet]
set filter output MGMT_TRAFFIC

IPsec Tunnel
[edit firewall family inet]
set filter MGMT_TRAFFIC term ALLOW_SNMP from protocol udp port [snmp snmptrap]
set filter MGMT_TRAFFIC term ALLOW_SNMP then ipsec-sa IPSEC_SA_MGMT
set filter MGMT_TRAFFIC term ALLOW_TACACS from protocol tcp port tacacs
set filter MGMT_TRAFFIC term ALLOW_TACACS then ipsec-sa IPSEC_SA_MGMT
set filter MGMT_TRAFFIC term ALLOW_NETFLOW from protocol udp port [2055 9995 9996]
set filter MGMT_TRAFFIC term ALLOW_NETFLOW then ipsec-sa IPSEC_SA_MGMT
set filter MGMT_TRAFFIC term OTHER then accept</fixtext>
      <fix id="F-JUNI-RT-000400_fix" />
      <check system="C-JUNI-RT-000400_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Review the network topology diagram to determine connectivity between the managed network and the NOC. Review the OOBM gateway router configuration to validate the path that the management traffic traverses. Verify that only management traffic is forwarded through the OOBM interface or IPsec tunnel.

If an OOBM link is used, verify that the only authorized management traffic is transported to the NOC by reviewing the outbound filter applied to the OOBM interface as shown in the example below.

interfaces {
     description "OOBM Net";
    ge-1/1/0 {
        unit 0 {
            family inet {
                filter {
                    output MGMT_TRAFFIC;
                }
                address 10.2.22.2/24;
            }
        }
    }
…
…
…
firewall {
    family inet {
        …
        …
        …
       filter MGMT_TRAFFIC {
            term ALLOW_SNMP {
                from {
                    protocol udp;
                    port [ snmp snmptrap ];
                }
                then accept;
            }
            term ALLOW_TACACS {
                from {
                    protocol tcp;
                    port tacacs;
                }
                then accept;
            }
            term ALLOW_NETFLOW {
                from {
                    protocol udp;
                    port [ 2055 9995 9996 ];
                }
                then accept;
            }
            term DENY_OTHER {
                then {
                    syslog;
                    discard;
                }
            }
        }
    }

If an IPsec tunnel is used, verify that the only authorized management traffic is transported to the NOC by reviewing the filter referencing the applicable security association as shown int example below.

firewall {
    family inet {
        …
        …
        …
       filter MGMT_TRAFFIC {
            term ALLOW_SNMP {
                from {
                    protocol udp;
                    port [ snmp snmptrap ];
                }
                then ipsec-sa IPSEC_SA_MGMT;
            }
            term ALLOW_TACACS {
                from {
                    protocol tcp;
                    port tacacs;
                }
                then ipsec-sa IPSEC_SA_MGMT;
            }
            term ALLOW_NETFLOW {
                from {
                    protocol udp;
                    port [ 2055 9995 9996 ];
                }
                then ipsec-sa IPSEC_SA_MGMT;
            }
            term OTHER {
                then accept;
            }
        }
    }

If traffic other than authorized management traffic is permitted through the OOBM interface or IPsec tunnel, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000410">
    <title>SRG-NET-000019-RTR-000011</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000410_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000410</version>
      <title>The Juniper out-of-band management (OOBM) gateway router must be configured to have separate IGP instances for the managed network and management network.</title>
      <description>&lt;VulnDiscussion&gt;If the gateway router is not a dedicated device for the OOBM network, implementation of several safeguards for containment of management and production traffic boundaries must occur. Since the managed and management network are separate routing domains, configuration of separate Interior Gateway Protocol routing instances is critical on the router to segregate traffic from each network.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001414</ident>
      <fixtext fixref="F-JUNI-RT-000410_fix">This requirement is not applicable for the DoDIN Backbone.

Configure the router to have a separate IGP instance for the management network as shown in the example below.

[edit routing-instances]
set VRF_MGMT instance-type vrf
set VRF_MGMT route-distinguisher 10.1.12.0:12
set VRF_MGMT vrf-target import target:1234:4567
set VRF_MGMT vrf-target export target:1234:4567
set VRF_MGMT interface ge-1/0/0
set VRF_MGMT interface ge-1/1/0
set VRF_MGMT protocols ospf area 0.0.0.0 interface ge-1/0/0
set VRF_MGMT protocols ospf area 0.0.0.0 interface ge-1/1/0
set VRF_MGMT routing-options router-id 11.11.11.11</fixtext>
      <fix id="F-JUNI-RT-000410_fix" />
      <check system="C-JUNI-RT-000410_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Verify that the OOBM interface is an adjacency in the IGP domain for the management network via separate VRF as shown in the example below.

}
protocols {
    ospf {
        area 0.0.0.0 {
            interface ge-2/0/0;
            interface ge-2/1/0;
        }
    }
}
routing-instances {
    VRF_MGMT {
        instance-type vrf;
        interface ge-1/0/0;
        interface ge-1/1/0;
        route-distinguisher 10.1.12.0:12;
        vrf-target {
            import target:1234:4567;
            export target:1234:4567;
        }
        routing-options {
            router-id 11.11.11.11;
        }
        protocols {
            ospf {
                area 0.0.0.0 {
                    interface ge-1/0/0;
                    interface ge-1/1/0;
                }
            }
        }
    }
}

If the router is not configured to have separate IGP instances for the managed network and management network, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000420">
    <title>SRG-NET-000019-RTR-000012</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000420_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000420</version>
      <title>The Juniper out-of-band management (OOBM) gateway router must be configured to not redistribute routes between the management network routing domain and the managed network routing domain.</title>
      <description>&lt;VulnDiscussion&gt;If the gateway router is not a dedicated device for the OOBM network, several safeguards must be implemented for containment of management and production traffic boundaries; otherwise, it is possible that management traffic will not be separated from production traffic.

Since the managed network and the management network are separate routing domains, separate Interior Gateway Protocol routing instances must be configured on the router, one for the managed network and one for the OOBM network. In addition, the routes from the two domains must not be redistributed to each other.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001414</ident>
      <fixtext fixref="F-JUNI-RT-000420_fix">This requirement is not applicable for the DoDIN Backbone.

Remove the configuration that imports routes from the management network into the managed network or vice versa as shown in the example below.

[edit routing-options]
delete rib-groups INET0_GROUP
delete interface-routes rib-group inet INET0_GROUP</fixtext>
      <fix id="F-JUNI-RT-000420_fix" />
      <check system="C-JUNI-RT-000420_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Verify the Interior Gateway Protocol (IGP) instance used for the managed network does not redistribute routes into the IGP instance used for the management network, and vice versa. The example below imports routes from the global route table (inet.0) in the route table for the management VRF.

}
routing-options {
    interface-routes {
        rib-group inet INET0_GROUP;
    }
    rib-groups {
        INET0_GROUP {
            import-rib [ VRF_MGMT.inet.0 inet.0 ];
        }
    }
}

If the IGP instance used for the managed network redistributes routes into the IGP instance used for the management network, or vice versa, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000430">
    <title>SRG-NET-000205-RTR-000011</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000430_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000430</version>
      <title>The Juniper out-of-band management (OOBM) gateway router must be configured to block any traffic destined to itself that is not sourced from the OOBM network or the NOC.</title>
      <description>&lt;VulnDiscussion&gt;If the gateway router is not a dedicated device for the OOBM network, several safeguards must be implemented for containment of management and production traffic boundaries. It is imperative that hosts from the managed network are not able to access the OOBM gateway router.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001097</ident>
      <fixtext fixref="F-JUNI-RT-000430_fix">This requirement is not applicable for the DoDIN Backbone.

Configure the router to only allow traffic to the route processor from the OOBM network.

[edit firewall family inet]
set filter PROTECT_RP term RESTRICT_ADDRESS from source-address 0.0.0.0/0
set filter PROTECT_RP term RESTRICT_ADDRESS from source-address 10.2.14.0/24 except
set filter PROTECT_RP term RESTRICT_ADDRESS then syslog discard 
set filter PROTECT_RP term ALLOW_OTHER then accept 

[edit interfaces lo0 unit 0 family inet]
set filter input PROTECT_RP</fixtext>
      <fix id="F-JUNI-RT-000430_fix" />
      <check system="C-JUNI-RT-000430_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Review the firewall filter applied to the routers loopback interface to verify that only traffic sourced from the OOBM network or the NOC is allowed to access the router as shown in the example below.

interfaces {
…
…
…
    lo0 {
        unit 0 {
            family inet {
                filter {
                    input PROTECT_RP;
                }
                address 1.1.1.1/32;
            }
        }
    }
}
…
…
…
firewall {
    family inet {
        filter PROTECT_RP {
            term RESTRICT_ADDRESS {
                from {
                    source-address {
                        0.0.0.0/0;
                        10.2.14.0/24 except;
                    }
                }
                then {
                    syslog;
                    discard;
                }
            }
            term ALLOW_OTHER {
                then accept;
            }
        }
    }
}

If the router does not block any traffic destined to itself that is not sourced from the OOBM network or the NOC, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000440">
    <title>SRG-NET-000205-RTR-000012</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000440_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000440</version>
      <title>The Juniper router must be configured to only permit management traffic that ingresses and egresses the OOBM interface.</title>
      <description>&lt;VulnDiscussion&gt;The OOBM access switch will connect to the management interface of the managed network elements. The management interface can be a true OOBM interface or a standard interface functioning as the management interface. In either case, the management interface of the managed network element will be directly connected to the OOBM network.

An OOBM interface does not forward transit traffic, thereby providing complete separation of production and management traffic. Since all management traffic is immediately forwarded into the management network, it is not exposed to possible tampering. The separation also ensures that congestion or failures in the managed network do not affect the management of the device. If the device does not have an OOBM port, the interface functioning as the management interface must be configured so that management traffic does not leak into the managed network and that production traffic does not leak into the management network.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001097</ident>
      <fixtext fixref="F-JUNI-RT-000440_fix">If the management interface is not a dedicated OOBM interface, it must be configured with both an ingress and egress filter.

Configure an inbound filter a shown in the example below.

[edit firewall family inet]
set filter OOBM_INBOUND term ALLOW_OSPF from protocol ospf
set filter OOBM_INBOUND term ALLOW_OSPF then accept
set filter OOBM_INBOUND term ALLOW_SNMP from protocol udp port snmp
set filter OOBM_INBOUND term ALLOW_SNMP then accept
set filter OOBM_INBOUND term ALLOW_TACACS from protocol tcp port tacacs
set filter OOBM_INBOUND term ALLOW_TACACS then accept
set filter OOBM_INBOUND term ALLOW_SSH from protocol tcp port ssh
set filter OOBM_INBOUND term ALLOW_SSH then accept
set filter OOBM_INBOUND term ALLOW_NTP from protocol udp port ntp
set filter OOBM_INBOUND term ALLOW_NTP then accept
set filter OOBM_INBOUND term ALLOW_ICMP from protocol icmp
set filter OOBM_INBOUND term ALLOW_ICMP then accept
set filter OOBM_INBOUND term DENY_OTHER then syslog discard

Configure an outbound filter a shown in the example below.

set filter OOBM_OUTBOUND term ALLOW_OSPF from protocol ospf
set filter OOBM_OUTBOUND term ALLOW_OSPF then accept
set filter OOBM_OUTBOUND term ALLOW_SNMP from protocol udp port [snmp snmptrap]
set filter OOBM_OUTBOUND term ALLOW_SNMP then accept
set filter OOBM_OUTBOUND term ALLOW_TACACS from protocol tcp port tacacs
set filter OOBM_OUTBOUND term ALLOW_TACACS then accept
set filter OOBM_OUTBOUND term ALLOW_SSH from protocol tcp port ssh
set filter OOBM_OUTBOUND term ALLOW_SSH then accept
set filter OOBM_OUTBOUND term ALLOW_NTP from protocol udp port ntp
set filter OOBM_OUTBOUND term ALLOW_NTP then accept
set filter OOBM_OUTBOUND term ALLOW_SYSLOG from protocol udp port 
set filter OOBM_OUTBOUND term ALLOW_SYSLOG then accept
set filter OOBM_OUTBOUND term ALLOW_NETFLOW from protocol udp port [2055 9995 9996]
set filter OOBM_OUTBOUND term ALLOW_NETFLOW then accept
set filter OOBM_OUTBOUND term DENY_OTHER then syslog discard

Apply the filters to the OOBM interfaces

[edit interfaces ge-0/0/0  unit 0 family inet]
set filter input OOBM_INBOUND
set filter output OOBM_OUTBOUND</fixtext>
      <fix id="F-JUNI-RT-000440_fix" />
      <check system="C-JUNI-RT-000440_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Verify that the managed interface has an inbound and outbound filter configured. 

interfaces {
    …
    …
    …
    ge-0/0/0 {
        description "OOBM Network";
        unit 0 {
            family inet {
                filter {
                    input OOBM_INBOUND;
                    output OOBM_OUTBOUND;
                }
                address 10.2.14.1/24;
            }
        }
    }

Verify that the ingress filter only allows management, IGP, and ICMP traffic. 

firewall {
    family inet {
        …
        …
        …
        filter OOBM_INBOUND {
            term ALLOW_OSPF {
                from {
                    protocol ospf;
                }
                then accept;
            }
            term ALLOW_SNMP {
                from {
                    protocol udp;
                    port snmp;
                }
                then accept;
            }
            term ALLOW_TACACS {
                from {
                    protocol tcp;
                    port tacacs;
                }
                then accept;
            }
            term ALLOW_ICMP {
                from {
                    protocol icmp;
                }
                then accept;
            }
            term ALLOW_SSH {
                from {
                    protocol tcp;
                    port ssh;
                }
                then accept;
            }
            term ALLOW_NTP {
                from {
                    protocol tcp;
                    port ntp;
                }
                then accept;
            }
            term DENY_OTHER {
                then {
                    syslog;
                    discard;
                }
            }
        }
    }
}

Verify that the ingress filter only allows management, IGP, and ICMP traffic. 

firewall {
    family inet {
        …
        …
        …
        filter OOBM_OUTBOUND {
            term ALLOW_OSPF {
                from {
                    protocol ospf;
                }
                then accept;
            }
            term ALLOW_SNMP {
                from {
                    protocol udp;
                    port [ snmp snmptrap ];
                }
                then accept;
            }
            term ALLOW_TACACS {
                from {
                    protocol tcp;
                    port tacacs;
                }
                then accept;
            }
            term ALLOW_SSH {
                from {
                    protocol tcp;
                    port ssh;
                }
                then accept;
            }
            term ALLOW_NTP {
                from {
                    protocol udp;
                    port ntp;
                }
                then accept;
            }
            term ALLOW_SYSLOG {
                from {
                    protocol udp;
                    port syslog;
                }
                then accept;
            }
            term ALLOW_NETFLOW {
                from {
                    protocol udp;
                    port [ 2055 9995 9996 ];
                }
                then accept;
            }
            term DENY_OTHER {
                then {
                    syslog;
                    discard;
                }
            }
        }
    }
}

Caveat: If the management interface is a true OOBM interface, this requirement is not applicable.

If the router does not restrict traffic that ingresses and egresses the management interface, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000450">
    <title>SRG-NET-000205-RTR-000013</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000450_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000450</version>
      <title>The Juniper router providing connectivity to the NOC must be configured to forward all in-band management traffic via an IPsec tunnel.</title>
      <description>&lt;VulnDiscussion&gt;When the production network is managed in-band, the management network could be housed at a NOC that is located remotely at single or multiple interconnected sites. NOC interconnectivity, as well as connectivity between the NOC and the managed network, must be enabled using IPsec tunnels to provide the separation and integrity of the managed traffic.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001097</ident>
      <fixtext fixref="F-JUNI-RT-000450_fix">This requirement is not applicable for the DoDIN Backbone.

Ensure that all traffic from the managed network to the management network is secured via IPsec tunnel as shown in the configuration examples below.

Configure an IPsec tunnel to be used to transport the management traffic.

[edit security]
set ike proposal IKE_PHASE1_PROPOSAL authentication-method pre-shared-keys
set ike proposal IKE_PHASE1_PROPOSAL authentication-algorithm sha-256
set ike proposal IKE_PHASE1_PROPOSAL dh-group group5
set ike proposal IKE_PHASE1_PROPOSAL encryption-algorithm aes-128-cbc
set ike policy 10.1.25.2 proposals IKE_PHASE1_PROPOSAL
set ike policy IKE_10.1.25.2 mode main
set ike policy 10.1.25.2 pre-shared-key ascii-text xxxxxxxxx
set ipsec proposal IPSEC_PHASE2_PROPOSAL protocol esp
set ipsec proposal IPSEC_PHASE2_PROPOSAL authentication-algorithm hmac-sha1-96
set ipsec proposal IPSEC_PHASE2_PROPOSAL encryption-algorithm aes-128-cbc
set ipsec security-association IPSEC_SA_MGMT mode tunnel
set ipsec security-association IPSEC_SA_MGMT dynamic ipsec-policy IPSEC_POLICY

Configure a filter that will select which traffic to be forwarded via the IPsec tunnel by specifying the security association bound to the tunnel.

[edit firewall family inet]
set filter MGMT_TRAFFIC term ALLOW_SNMP from protocol udp port [snmp snmptrap]
set filter MGMT_TRAFFIC term ALLOW_SNMP then ipsec-sa IPSEC_SA_MGMT
set filter MGMT_TRAFFIC term ALLOW_TACACS from protocol tcp port tacacs
set filter MGMT_TRAFFIC term ALLOW_TACACS then ipsec-sa IPSEC_SA_MGMT
set filter MGMT_TRAFFIC term ALLOW_NETFLOW from protocol udp port [2055 9995 9996]
set filter MGMT_TRAFFIC term ALLOW_NETFLOW then ipsec-sa IPSEC_SA_MGMT
set filter MGMT_TRAFFIC term OTHER then accept</fixtext>
      <fix id="F-JUNI-RT-000450_fix" />
      <check system="C-JUNI-RT-000450_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Verify that all traffic from the managed network to the management network and vice-versa is secured via IPsec tunnel.

Review the security association within the IPsec configuration to be used for encapsulating the management traffic and verify that it is in tunnel mode. Also note the security association to be used.

security {
    ipsec {
        proposal IPSEC_PHASE2_PROPOSAL {
            protocol esp;
            authentication-algorithm hmac-sha1-96;
            encryption-algorithm aes-128-cbc;
        }
        policy IPSEC_POLICY {
            perfect-forward-secrecy {
                keys group5;
            }
            proposals IPSEC_PHASE2_PROPOSAL;
        }
        security-association IPSEC-SA_XYZ {
            description "For XYZ";
            mode transport;
            manual {
                direction bidirectional {
                    protocol ah;
                    spi 256;
                    authentication {
                        algorithm hmac-sha1-96;
                        key ascii-text "$9$oPJjH.P5F69mSHqPQn6u0RhSreW-dsZGi8XYoZDmP"; ## SECRET-DATA
                    }
                }
            }
        }
        security-association IPSEC_SA_MGMT {
            description "IPsec Tunnel for Mgmt Traffic";
            mode tunnel;
            dynamic {
                ipsec-policy IPSEC_POLICY;
            }
        }
    }
    ike {
        proposal IKE_PHASE1_PROPOSAL {
            authentication-method pre-shared-keys;
            dh-group group5;
            authentication-algorithm sha-256;
            encryption-algorithm aes-128-cbc;
        }
        policy 10.1.25.2 {
            proposals IKE_PHASE1_PROPOSAL;
            pre-shared-key ascii-text "$9$J4UDkCA01IcHqEy"; ## SECRET-DATA
        }
    }

Verify there is a filter to direct the management traffic to the IPsec tunnel by verifying the name of the IPsec SA referenced in the then statement as shown in the example below.

firewall {
    family inet {
        …
        …
        …
       filter MGMT_TRAFFIC {
            term ALLOW_SNMP {
                from {
                    protocol udp;
                    port [ snmp snmptrap ];
                }
                then ipsec-sa IPSEC_SA_MGMT;
            }
            term ALLOW_TACACS {
                from {
                    protocol tcp;
                    port tacacs;
                }
                then ipsec-sa IPSEC_SA_MGMT;
            }
            term ALLOW_NETFLOW {
                from {
                    protocol udp;
                    port [ 2055 9995 9996 ];
                }
                then ipsec-sa IPSEC_SA_MGMT;
            }
            term OTHER {
                then accept;
            }
        }
    }

If the management traffic is not secured via IPsec tunnel, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000460">
    <title>SRG-NET-000191-RTR-000081</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000460_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000460</version>
      <title>The Juniper BGP router must be configured to enable the Generalized TTL Security Mechanism (GTSM).</title>
      <description>&lt;VulnDiscussion&gt;As described in RFC 3682, GTSM is designed to protect a router's IP-based control plane from DoS attacks. Many attacks focused on CPU load and line-card overload can be prevented by implementing GTSM on all Exterior Border Gateway Protocol speaking routers. 

GTSM is based on the fact that the vast majority of control plane peering is established between adjacent routers; that is, the Exterior Border Gateway Protocol peers are either between connecting interfaces or between loopback interfaces. Since TTL spoofing is considered nearly impossible, a mechanism based on an expected TTL value provides a simple and reasonably robust defense from infrastructure attacks based on forged control plane traffic.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002385</ident>
      <fixtext fixref="F-JUNI-RT-000460_fix">Configure a filter to only accept bgp packets with a TTL of 255 as shown in the example below.

[edit firewall]
set filter GTSM_FILTER term TTL_SECURITY from protocol tcp port bgp ttl-except 255
set filter GTSM_FILTER term TTL_SECURITY then syslog discard
set filter GTSM_FILTER term ELSE_ACCEPT then accept

Apply the firewall filter to the inbound interface for all eBGP single-hop peer as shown in the example below.

[edit interfaces   ge-0/0/0  unit 0 family inet] 
set filter input-list INBOUND_FILTER
set filter input-list GTSM_FILTER</fixtext>
      <fix id="F-JUNI-RT-000460_fix" />
      <check system="C-JUNI-RT-000460_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Verify that a filter has been configured to only allow BGP packets with a TTL of 255 as shown in the example below.

firewall {
        …
        …
        …
    filter GTSM_FILTER {
        term TTL_SECURITY {
            from {
                protocol tcp;
                ttl-except 255;
                port bgp;
            }
            then {
                syslog;
                discard;
            }
        }
        term ELSE_ACCEPT {
            then accept;
        }
    }
}

Verify that the filter is applied to all interfaces connecting to eBGP peers.

interfaces {
…
…
…
  ge-0/0/0  {
        unit 0 {
            family inet {
                filter {
                    input-list [INBOUND_FILTER GTSM_FILTER];
                }
                address x.x.x.x/30;
            }
         }
    }
}

Configure the router to send all BGP packets with a TTL of 255 as shown in the example below.

If the router is not configured to use GTSM for all Exterior Border Gateway Protocol peering sessions, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000470">
    <title>SRG-NET-000025-RTR-000021</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000470_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000470</version>
      <title>The Juniper BGP router must be configured to use a unique key for each autonomous system (AS) that it peers with.</title>
      <description>&lt;VulnDiscussion&gt;If the same keys are used between eBGP neighbors, the chance of a hacker compromising any of the BGP sessions increases. It is possible that a malicious user exists in one autonomous system who would know the key used for the eBGP session. This user would then be able to hijack BGP sessions with other trusted neighbors.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000366</ident>
      <ident system="http://iase.disa.mil/cci">CCI-002205</ident>
      <fixtext fixref="F-JUNI-RT-000470_fix">Configure the router to use unique keys for each AS that it peers with as shown in the example below.

[edit protocols bgp]
set group GROUP_AS66 authentication-key abc123
set group GROUP_AS44 authentication-key xyz123</fixtext>
      <fix id="F-JUNI-RT-000470_fix" />
      <check system="C-JUNI-RT-000470_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the BGP configuration to determine if it is peering with multiple autonomous systems. Interview the ISSM and router administrator to determine if unique keys are being used. 

protocols {
    bgp {
        group AS44 {
            type external;
            peer-as 44;
            neighbor x.x.x.x {
                authentication-key "$9$tBga0ORx7VsYoIEgJ"; ## SECRET-DATA
            }
        }
        group AS66 {
            type external;
            peer-as 66;
            neighbor x.x.x.x {
                authentication-key "$9$Q4953nCrlMLX-9A7V"; ## SECRET-DATA
            }
        }
    }

If unique keys are not being used, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000480">
    <title>SRG-NET-000018-RTR-000002</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000480_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000480</version>
      <title>The Juniper BGP router must be configured to reject inbound route advertisements for any Bogon prefixes.</title>
      <description>&lt;VulnDiscussion&gt;Accepting route advertisements for Bogon prefixes can result in the local autonomous system (AS) becoming a transit for malicious traffic as it will in turn advertise these prefixes to neighbor autonomous systems.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001368</ident>
      <fixtext fixref="F-JUNI-RT-000480_fix">Configure the router to reject inbound route advertisements for any Bogon prefixes.

Configure a prefix list containing the current Bogon prefixes as shown below.

[edit policy-options]
set prefix-list BOGON_PREFIXES 0.0.0.0/8
set prefix-list BOGON_PREFIXES 10.0.0.0/8
set prefix-list BOGON_PREFIXES 100.64.0.0/10
set prefix-list BOGON_PREFIXES 127.0.0.0/8
set prefix-list BOGON_PREFIXES 169.254.0.0/16
set prefix-list BOGON_PREFIXES 172.16.0.0/12
set prefix-list BOGON_PREFIXES 192.0.0.0/24
set prefix-list BOGON_PREFIXES 192.0.2.0/24
set prefix-list BOGON_PREFIXES 192.168.0.0/16
set prefix-list BOGON_PREFIXES 198.18.0.0/15
set prefix-list BOGON_PREFIXES 198.51.100.0/24
set prefix-list BOGON_PREFIXES 203.0.113.0/24
set prefix-list BOGON_PREFIXES 224.0.0.0/4
set prefix-list BOGON_PREFIXES 240.0.0.0/4

Configure a policy-statement to reject Bogon prefixes.

set policy-statement FILTER_ROUTES term REJECT_BOGONS from prefix-list BOGON_PREFIXES
set policy-statement FILTER_ROUTES term REJECT_BOGONS then reject
set policy-statement FILTER_ROUTES term ACCEPT_OTHER then accept

Configure an import statement referencing the policy to reject Bogons on all external BGP peers.

[edit protocols bgp group GROUP_AS4]
set import FILTER_ROUTES</fixtext>
      <fix id="F-JUNI-RT-000480_fix" />
      <check system="C-JUNI-RT-000480_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify that it will reject BGP routes for any Bogon prefixes.

Verify a prefix list has been configured containing the current Bogon prefixes as shown in the example below.

policy-options {
    prefix-list BOGON_PREFIXES {
        0.0.0.0/8;
        10.0.0.0/8;
        100.64.0.0/10;
        127.0.0.0/8;
        169.254.0.0/16;
        172.16.0.0/12;
        192.0.0.0/24;
        192.0.2.0/24;
        192.168.0.0/16;
        198.18.0.0/15;
        198.51.100.0/24;
        203.0.113.0/24;
        224.0.0.0/4;
        240.0.0.0/4;
    }
}

Verify that a policy has been configured to reject the Bogon prefixes.

policy-options {
    …
    …
    …
    policy-statement FILTER_ROUTES {
        term REJECT_BOGONS {
            from {
                prefix-list BOGON_PREFIXES;
            }
            then reject;
        }
        term ACCEPT_OTHERS {
            then accept;
        }
    }
}

Verify that the configured policy to filter Bogons has been applied to external BGP peers as shown in the example below.

protocols {
    bgp {
        group GROUP_AS4 {
            type external;
            import FILTER_ROUTES;
            peer-as 4;
            neighbor x.x.x.x;
        }
    }

If the router is not configured to reject inbound route advertisements for any Bogon prefixes, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000490">
    <title>SRG-NET-000018-RTR-000003</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000490_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000490</version>
      <title>The Juniper BGP router must be configured to reject inbound route advertisements for any prefixes belonging to the local autonomous system (AS).</title>
      <description>&lt;VulnDiscussion&gt;Accepting route advertisements belonging to the local AS can result in traffic looping or being black holed, or at a minimum using a non-optimized path.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001368</ident>
      <fixtext fixref="F-JUNI-RT-000490_fix">Configure the router to reject inbound route advertisements for any prefixes belonging to the local AS.

Configure a prefix list containing prefixes belonging to the local autonomous system.

[edit policy-options]
set prefix-list OUR_PREFIXES x.x.x.x/16

Configure a policy-statement to reject prefixes belonging to the local autonomous system. This can be done by adding a term to the existing policy to filter Bogons as shown in the example below.

[edit policy-options policy-statement FILTER_ROUTES]
set term REJECT_OUR_PREFIXES from prefix-list OUR_PREFIXES
set term REJECT_OUR_PREFIXES then reject
insert term REJECT_OUR_PREFIXES before term ACCEPT_OTHER

Note: There is no need change the BGP configuration assuming the import statement is already configured for all external neighbors.</fixtext>
      <fix id="F-JUNI-RT-000490_fix" />
      <check system="C-JUNI-RT-000490_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify that it will reject routes belonging to the local AS.

Verify a prefix list has been configured containing prefixes belonging to the local autonomous system as shown in the example below.

policy-options {
    …
    …
    …
    prefix-list OUR_PREFIXES {
        x.x.x.x/16;
    }

Verify that a policy has been configured to reject the local prefixes.

policy-options {
    …
    …
    …
    policy-statement FILTER_ROUTES {
        term REJECT_BOGONS {
            from {
                prefix-list BOGON_PREFIXES;
            }
            then reject;
        }
        term REJECT_OUR_PREFIXES {
            from {
                prefix-list OUR_PREFIXES;
            }
            then reject;
        }
        term ACCEPT_OTHER {
            then accept;
        }
    }
}

Verify that the configured policy to filter local prefixes has been applied to external BGP peers as shown in the example below.

protocols {
    bgp {
        group GROUP_AS4 {
            type external;
            import FILTER_ROUTES;
            peer-as 4;
            neighbor x.x.x.x;
        }
    }

If the router is not configured to reject inbound route advertisements belonging to the local AS, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000500">
    <title>SRG-NET-000018-RTR-000004</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000500_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000500</version>
      <title>The Juniper BGP router must be configured to reject inbound route advertisements from a customer edge (CE) Juniper router for prefixes that are not allocated to that customer.</title>
      <description>&lt;VulnDiscussion&gt;As a best practice, a service provider should only accept customer prefixes that have been assigned to that customer and any peering autonomous systems. A multi-homed customer with BGP speaking routers connected to the Internet or other external networks could be breached and used to launch a prefix de-aggregation attack. Without ingress route filtering of customers, the effectiveness of such an attack could impact the entire IP core and its customers.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001368</ident>
      <fixtext fixref="F-JUNI-RT-000500_fix">Configure the router to reject inbound route advertisements from a CE router for prefixes that are not allocated to that customer.

Configure a prefix list containing prefixes belonging to the customers.

[edit policy-options]
set prefix-list CUST1_PREFIXES x.x.x.x/24
set prefix-list CUST1_PREFIXES x.x.x.x/24
set prefix-list CUST2_PREFIXES x.x.x.x/24
set prefix-list CUST2_PREFIXES x.x.x.x/24

Configure a policy-statement to filter customer routes.

set policy-statement FILTER_CUST1_ROUTES term ACCEPT_ROUTES from prefix-list CUST1_PREFIXES
set policy-statement FILTER_CUST1_ROUTES term then accept
set policy-statement FILTER_CUST1_ROUTES term REJECT_OTHER then reject
set policy-statement FILTER_CUST2_ROUTES term ACCEPT_ROUTES from prefix-list CUST2_PREFIXES
set policy-statement FILTER_CUST2_ROUTES term then accept
set policy-statement FILTER_CUST2_ROUTES term REJECT_OTHER then reject

Apply the import policy to filter received routes for each customer group.

[edit protocols bgp group CUST1]
set import FILTER_CUST1_ROUTES 
[edit protocols bgp group CUST2]
set import FILTER_CUST2_ROUTES</fixtext>
      <fix id="F-JUNI-RT-000500_fix" />
      <check system="C-JUNI-RT-000500_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify that there are filters defined to only accept routes for prefixes that belong to specific customers. 

Verify prefix list has been configured containing prefixes belonging to each customer as shown in the example below.

policy-options {
    …
    …
    …
    prefix-list CUST1_PREFIXES {
        x.x.x.x/24;
        x.x.x.x/24;
    }
    prefix-list CUST2_PREFIXES {
        x.x.x.x/24;
    }

Verify that a policy has been configured to only accept routes belonging to the customer.

policy-options {
    …
    …
    …
    policy-statement FILTER_CUST1_ROUTES {
        term ACCEPT-ROUTES {
            from {
                prefix-list CUST1_PREFIXES;
            }
            then accept;
        }
        term REJECT_OTHER {
            then reject;
        }
    }
    policy-statement FILTER_CUST2_ROUTES {
        term ACCEPT_ROUTES {
            from {
                prefix-list CUST2_PREFIXES;
            }
            then accept;
        }
        term REJECT_OTHER {
            then reject;
        }
    }
}

Verify that the configured policy to filter customer prefixes has been applied to customer BGP peers as shown in the example below.

protocols {
    bgp {
        …
        …
        …
        }
        group CUST1 {
            type external;
            import FILTER_CUST1_ROUTES;
            peer-as 55;
            neighbor x.x.x.x;
            neighbor x.x.x.x;
        }
        group CUST2 {
            type external;
            import FILTER_CUST2_ROUTES;
            peer-as 44;
            neighbor x.x.x.x;
            neighbor x.x.x.x;
        }
    }
    …
    …
    …
}

Note: Routes to PE-CE links within a VPN are needed for troubleshooting end-to-end connectivity across the MPLS/IP backbone. Hence, these prefixes are an exception to this requirement.

If the router is not configured to reject inbound route advertisements from each CE router for prefixes that are not allocated to that customer, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000510">
    <title>SRG-NET-000018-RTR-000005</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000510_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000510</version>
      <title>The Juniper BGP router must be configured to reject outbound route advertisements for any prefixes that do not belong to any customers or the local autonomous system (AS).</title>
      <description>&lt;VulnDiscussion&gt;Advertisement of routes by an autonomous system for networks that do not belong to any of its customers pulls traffic away from the authorized network. This causes a denial of service (DoS) on the network that allocated the block of addresses and may cause a DoS on the network that is inadvertently advertising it as the originator. It is also possible that a misconfigured or compromised router within the GIG IP core could redistribute IGP routes into BGP, thereby leaking internal routes.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001368</ident>
      <fixtext fixref="F-JUNI-RT-000510_fix">Configure the router to filter outbound route advertisements for prefixes that are not allocated to or belong to any customer or the local autonomous system.

Configure a policy-statement to filter BGP route advertisements that will only include the local and customer prefixes.

[edit policy-options]
set policy-statement BGP_ADVERTISE_POLICY term INCLUDE_LOCAL from prefix-list OUR_PREFIXES
set policy-statement BGP_ADVERTISE_POLICY term INCLUDE_LOCAL then accept
set policy-statement BGP_ADVERTISE_POLICY term INCLUDE_CUST1 from prefix-list CUST1_PREFIXES
set policy-statement BGP_ADVERTISE_POLICY term INCLUDE_CUST1 then accept 
set policy-statement BGP_ADVERTISE_POLICY term INCLUDE_CUST2 from prefix-list CUST2_PREFIXES
set policy-statement BGP_ADVERTISE_POLICY term INCLUDE_CUST2 then accept 
set policy-statement BGP_ADVERTISE_POLICY term REJECT_OTHER then reject

Note: The prefix lists should have already been configured per the previous requirements.

Configure an export statement referencing the advertise policy on all external BGP peer groups as shown in the example below.

[edit protocols bgp group GROUP_AS4]
set export BGP_ADVERTISE_POLICY 
[edit protocols bgp group CUST1]
set export BGP_ADVERTISE_POLICY 
[edit protocols bgp group CUST2]
set export BGP_ADVERTISE_POLICY</fixtext>
      <fix id="F-JUNI-RT-000510_fix" />
      <check system="C-JUNI-RT-000510_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify that there is a filter defined to only advertise routes for prefixes that belong to any customers or the local AS. 

Verify that a policy has been configured to filter prefixes for BGP advertisement as shown in the example below.

}
policy-options {
    …
    …
    …
    policy-statement BGP_ADVERTISE_POLICY {
        term INCLUDE_LOCAL {
            from {
                prefix-list OUR_PREFIXES;
            }
            then accept;
        }
        term INCLUDE_CUST1 {
            from {
                prefix-list CUST1_PREFIXES;
            }
            then accept;
        }
        term INCLUDE_CUST2 {
            from {
                prefix-list CUST2_PREFIXES;
            }
            then accept;
        }
        term REJECT_OTHER {
            then reject;
        }
    }

Verify that the export statement as shown below references the advertise policy. 

protocols {
    bgp {
        group AS4 {
            type external;
            import FILTER_ROUTES;
            export BGP_ADVERTISE_POLICY;
            peer-as 4;
            neighbor x.x.x.x;
        }
        group CUST1 {
            type external;
            import FILTER_CUST1_ROUTES;
            export BGP_ADVERTISE_POLICY;
            peer-as 55;
            neighbor x.x.x.x;
            neighbor x.x.x.x;
        }
        group CUST2 {
            type external;
            import FILTER_CUST2_ROUTES;
            export BGP_ADVERTISE_POLICY;
            peer-as 44;
            neighbor x.x.x.x;
            neighbor x.x.x.x;
        }
    }
    …
    …
    …
}

Note: The prefix lists should have already been configured per the previous requirements.

If the router is not configured to reject outbound route advertisements that belong to any customers or the local AS, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000520">
    <title>SRG-NET-000205-RTR-000006</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000520_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000520</version>
      <title>The Juniper BGP router must be configured to reject outbound route advertisements for any prefixes belonging to the IP core.</title>
      <description>&lt;VulnDiscussion&gt;Outbound route advertisements belonging to the core can result in traffic either looping or being black holed, or at a minimum, using a non-optimized path.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001097</ident>
      <fixtext fixref="F-JUNI-RT-000520_fix">Configure the router to filter outbound route advertisements belonging to the IP core.

Configure a prefix list containing prefixes belonging to the IP core.

[edit policy-options]
set prefix-list CORE_PREFIX x.x.x.x/16

Configure a policy-statement to filter BGP route advertisements that will exclude core prefixes.

[edit policy-options]
set policy-statement BGP_ADVERTISE_POLICY term EXCLUDE_CORE from prefix-list CORE_PREFIX
set policy-statement BGP_ADVERTISE_POLICY term EXCLUDE_CORE then reject
set policy-statement BGP_ADVERTISE_POLICY term INCLUDE_OTHER then accept

Configure an export statement referencing the advertise policy on all external BGP peer groups as shown in the example below.

[edit protocols bgp group GROUP_AS4]
set export BGP_ADVERTISE_POLICY</fixtext>
      <fix id="F-JUNI-RT-000520_fix" />
      <check system="C-JUNI-RT-000520_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify that there is a filter defined to block route advertisements for prefixes that belong to the IP core. 

Verify a prefix list has been configured containing prefixes belonging to the local autonomous system as shown in the example below.

policy-options {
    …
    …
    …
    prefix-list CORE_PREFIX {
        x.x.x.x/16;
    }

Verify that a policy has been configured to not advertise prefixes belong to the core as shown in the example below.

policy-options {
    …
    …
    …
    policy-statement BGP_ADVERTISE_POLICY {
        term EXCLUDE_CORE {
            from {
                prefix-list CORE_PREFIX;
            }
            then reject;
        }
                term INCLUDE_OTHER {
            then accept;
        }
    }

Verify that the export statement as shown below references the advertise policy. 

protocols {
    bgp {
        group AS4 {
            type external;
            export BGP_ADVERTISE_POLICY;
            peer-as 4;
            neighbor x.x.x.x;
        }

If the router is not configured to reject outbound route advertisements that belong to the IP core, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000530">
    <title>SRG-NET-000018-RTR-000006</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000530_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000530</version>
      <title>The Juniper BGP router must be configured to reject route advertisements from BGP peers that do not list their autonomous system (AS) number as the first AS in the AS_PATH attribute.</title>
      <description>&lt;VulnDiscussion&gt;Verifying the path a route has traversed will ensure the IP core is not used as a transit network for unauthorized or possibly even Internet traffic. All autonomous system boundary routers (ASBRs) must ensure updates received from eBGP peers list their AS number as the first AS in the AS_PATH attribute.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000032</ident>
      <fixtext fixref="F-JUNI-RT-000530_fix">Configure the router to deny updates received from eBGP peers that do not list their AS number as the first AS in the AS_PATH attribute.

Configure a policy to filter the AS_PATH as shown in the example below.

[edit policy-options]
set as-path PEER_AS4 "^4$"
set policy-statement FILTER_AS4 term ALLOW_AS4 from as-path PEER_AS4
set policy-statement FILTER_AS4 term ALLOW_AS4 then accept
set policy-statement FILTER_AS4 term ELSE_REJECT then reject

Apply the import policy as shown in the example below.

[edit protocols bgp group GROUP_AS4]
set import [FILTER_AS4 FILTER_ROUTES]</fixtext>
      <fix id="F-JUNI-RT-000530_fix" />
      <check system="C-JUNI-RT-000530_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify the router is configured to deny updates received from eBGP peers that do not list their AS number as the first AS in the AS_PATH attribute.

Verify a policy has been configured to filter AS_PATH attribute for received BGP advertisements as shown in the example below.

policy-options {
    …
    …
    …
    policy-statement FILTER_AS4 {
        term ALLOW_AS4 {
            from as-path PEER_AS4;
            then accept;
        }
        term ELSE_REJECT {
            then reject;
        }
    }
    …
    …
    …
    as-path PEER_AS4 "^6$";
}

Note: the characters “^” and “$” representing the beginning and the end of the expression respectively are optional and are implicitly defined if omitted.

Verify that the import policy has been applied to all external BGP peers as shown in the example below.

protocols {
    bgp {
        group GROUP_AS4 {
            type external;
            import [FILTER_AS4 FILTER_ROUTES];
            peer-as 4;
            neighbor x.x.x.x;
        }

If the router is not configured to reject updates from peers that do not list their AS number as the first AS in the AS_PATH attribute, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000540">
    <title>SRG-NET-000362-RTR-000117</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000540_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000540</version>
      <title>The Juniper BGP router must be configured to use the maximum prefixes feature to protect against route table flooding and prefix de-aggregation attacks.</title>
      <description>&lt;VulnDiscussion&gt;The effects of prefix de-aggregation can degrade router performance due to the size of routing tables and also result in black-holing legitimate traffic. Initiated by an attacker or a misconfigured router, prefix de-aggregation occurs when the announcement of a large prefix is fragmented into a collection of smaller prefix announcements.

In 1997, misconfigured routers in the Florida Internet Exchange network (AS7007) de-aggregated every prefix in their routing table and started advertising the first /24 block of each of these prefixes as their own. Faced with this additional burden, the internal routers became overloaded and crashed repeatedly. This caused prefixes advertised by these routers to disappear from routing tables and reappear when the routers came back online. As the routers came back after crashing, they were flooded with the routing table information by their neighbors. The flood of information would again overwhelm the routers and cause them to crash. This process of route flapping served to destabilize not only the surrounding network but also the entire Internet. Routers trying to reach those addresses would choose the smaller, more specific /24 blocks first. This caused backbone networks throughout North America and Europe to crash.

Maximum prefix limits on peer connections combined with aggressive prefix-size filtering of customers' reachability advertisements will effectively mitigate the de-aggregation risk. BGP maximum prefix must be used on all eBGP routers to limit the number of prefixes that it should receive from a particular neighbor, whether customer or peering AS. Consider each neighbor and how many routes they should be advertising and set a threshold slightly higher than the number expected.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002385</ident>
      <fixtext fixref="F-JUNI-RT-000540_fix">Configure the router to use the maximum prefixes feature to protect against route table flooding and prefix de-aggregation attacks as shown in the example below.

[edit protocols bgp group GROUP_AS4]
set family inet unicast prefix-limit maximum nnnnn teardown</fixtext>
      <fix id="F-JUNI-RT-000540_fix" />
      <check system="C-JUNI-RT-000540_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify that the number of received prefixes from each eBGP neighbor is controlled.

protocols {
    bgp {
        group GROUP_AS4 {
            type external;
             family inet {
                unicast {
                    prefix-limit {
                        maximum 10;
                        teardown;
                    }
                }
            }            peer-as 4;
            neighbor x.x.x.x;
        }

If the router is not configured to control the number of prefixes received from each peer to protect against route table flooding and prefix de-aggregation attacks, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000550">
    <title>SRG-NET-000362-RTR-000118</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000550_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000550</version>
      <title>The Juniper BGP router must be configured to limit the prefix size on any inbound route advertisement to /24 or the least significant prefixes issued to the customer.</title>
      <description>&lt;VulnDiscussion&gt;The effects of prefix de-aggregation can degrade router performance due to the size of routing tables and also result in black-holing legitimate traffic. Initiated by an attacker or a misconfigured router, prefix de-aggregation occurs when the announcement of a large prefix is fragmented into a collection of smaller prefix announcements.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002385</ident>
      <fixtext fixref="F-JUNI-RT-000550_fix">Configure the router to limit the prefix size on any route advertisement to /24 or the least significant prefixes issued to the customer.

Configure a route filter to reject any prefix that is longer than /24.

[edit policy-options]
set policy-statement NO_LONG_PREFIXES from route-filter 0.0.0.0/0 prefix-length-range /25-/32 reject

Apply the policy statement to the BGP customer groups.

[edit protocols bgp group CUST1]
set import NO_LONG_PREFIXES
[edit protocols bgp group CUST2]
set import NO_LONG_PREFIXES</fixtext>
      <fix id="F-JUNI-RT-000550_fix" />
      <check system="C-JUNI-RT-000550_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to determine if it is compliant with this requirement.

Verify that a policy statement has been configured to reject prefixes longer than /24 or the least significant prefixes issued to the customers as shown in the example below.

policy-options {
    …
    …
    …
    }
    policy-statement NO_LONG_PREFIXES {
        from {
            route-filter 0.0.0.0/0 prefix-length-range /25-/32 reject;
        }
    }

Note: It may be necessary to configure separate policy statements depending on the address space issued to each customer.

Verify that there is an import statement referencing the policy statement to filter prefix length.

protocols {
    bgp {
        …
        …
        …
        }
        group CUST1 {
            type external;
            import [ FILTER_CUST1_ROUTES NO_LONG_PREFIXES ];
            peer-as 55;
            neighbor x.x.x.x;
            neighbor x.x.x.x;
        }
        group CUST2 {
            type external;
            import [ FILTER_CUST1_ROUTES NO_LONG_PREFIXES ];
            peer-as 44;
            neighbor x.x.x.x;
            neighbor x.x.x.x;
        }

If the router is not configured to limit the prefix size on any inbound route advertisement to /24 or the least significant prefixes issued to the customer, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000560">
    <title>SRG-NET-000512-RTR-000001</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000560_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000560</version>
      <title>The Juniper BGP router must be configured to use its loopback address as the source address for iBGP peering sessions.</title>
      <description>&lt;VulnDiscussion&gt;Using a loopback address as the source address offers a multitude of uses for security, access, management, and scalability of the BGP routers. It is easier to construct appropriate ingress filters for router management plane traffic destined to the network management subnet since the source addresses will be from the range used for loopback interfaces instead of a larger range of addresses used for physical interfaces. Log information recorded by authentication and syslog servers will record the router’s loopback address instead of the numerous physical interface addresses.

When the loopback address is used as the source for eBGP peering, the BGP session will be harder to hijack since the source address to be used is not known globally—making it more difficult for a hacker to spoof an eBGP neighbor. By using traceroute, a hacker can easily determine the addresses for an eBGP speaker when the IP address of an external interface is used as the source address. The routers within the iBGP domain should also use loopback addresses as the source address when establishing BGP sessions.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000366</ident>
      <fixtext fixref="F-JUNI-RT-000560_fix">Configure the router to use its loopback address as the source address for all iBGP peering.

[edit protocols bgp group IBGP_PEERS]
set local-address 2.2.2.2</fixtext>
      <fix id="F-JUNI-RT-000560_fix" />
      <check system="C-JUNI-RT-000560_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify that a loopback address has been configured.

interfaces {
    …
    …
    …
    }
    lo0 {
        unit 0 {
            family inet {
                address 2.2.2.2/32;
            }
        }
    }
}

Verify that the loopback interface is used as the source address for all iBGP sessions.

protocols {
    bgp {
        …
        …
        …
        }
group IBGP_PEERS {
    type internal;
    local-address 2.2.2.2;
    neighbor x.x.x.x;
}

If the router does not use its loopback address as the source address for all iBGP sessions, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000570">
    <title>SRG-NET-000512-RTR-000002</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000570_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000570</version>
      <title>The Juniper MPLS router must be configured to use its loopback address as the source address for LDP peering sessions.</title>
      <description>&lt;VulnDiscussion&gt;Using a loopback address as the source address offers a multitude of uses for security, access, management, and scalability of backbone routers. It is easier to construct appropriate ingress filters for router management plane traffic destined to the network management subnet since the source addresses will be from the range used for loopback interfaces instead of from a larger range of addresses used for physical interfaces. Log information recorded by authentication and syslog servers will record the router's loopback address instead of the numerous physical interface addresses.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000366</ident>
      <fixtext fixref="F-JUNI-RT-000570_fix">Configure the router to use their loopback address as the source address for LDP peering sessions. As noted in the check content, the default behavior is to use its loopback address. However, if a router ID is configured, ensure it matches the address of the loopback address as shown in the example below.

[edit routing-options]
set router-id 2.2.2.2</fixtext>
      <fix id="F-JUNI-RT-000570_fix" />
      <check system="C-JUNI-RT-000570_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to determine if it is compliant with this requirement.

Verify that a loopback address has been configured as shown in the following example:

}
interfaces {
    …
    …
    …
    }
    lo0 {
        unit 0 {
            family inet {
                address 2.2.2.2/32;
            }
        }
    }
}

By default, routers will use its loopback address for LDP peering. If an address has not be configured on the loopback interface, it will use its physical interface connecting to the LDP peer. If the router-id command is specified that overrides this default behavior, verify that it is the IP address of the designated loopback interface as shown in the example below.

}
routing-options {
    router-id 2.2.2.2;
    autonomous-system 5;
}

If the router is not configured do use its loopback address for LDP peering, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000580">
    <title>SRG-NET-000512-RTR-000003</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000580_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000580</version>
      <title>The Juniper MPLS router must be configured to synchronize IGP and LDP to minimize packet loss when an IGP adjacency is established prior to LDP peers completing label exchange.</title>
      <description>&lt;VulnDiscussion&gt;Packet loss can occur when an IGP adjacency is established and the router begins forwarding packets using the new adjacency before the LDP label exchange completes between the peers on that link. Packet loss can also occur if an LDP session closes and the router continues to forward traffic using the link associated with the LDP peer rather than an alternate pathway with a fully synchronized LDP session. The MPLS LDP-IGP Synchronization feature provides a means to synchronize LDP with OSPF or IS-IS to minimize MPLS packet loss. When an IGP adjacency is established on a link but LDP-IGP synchronization is not yet achieved or is lost, the IGP will advertise the max-metric on that link.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000366</ident>
      <fixtext fixref="F-JUNI-RT-000580_fix">Configure the MPLS router to synchronize IGP and LDP, minimizing packet loss when an IGP adjacency is established prior to LDP peers completing label exchange.

[edit protocols ospf area 0.0.0.0]
set interface ge-0/0/0.0 ldp-synchronization hold-time 10

[edit protocols isis]
set interface ge-0/0/0.0 ldp-synchronization hold-time 10

Note: The hold-time is the amount of time (in seconds) the routing device advertises the maximum cost metric for a link that is not fully operational. Default is infinity.</fixtext>
      <fix id="F-JUNI-RT-000580_fix" />
      <check system="C-JUNI-RT-000580_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router OSPF or IS-IS configuration and verify that LDP will synchronize with the link-state routing protocol as shown in the example below.

OSPF Example:

protocols {
    mpls {
        interface ge-0/0/0.0;
    }
    …
    …
    …
    ospf {
        export REDISTRIBUTE;
        area 0.0.0.0 {
            interface ge-0/0/0.0 {
                ldp-synchronization {
                    hold-time 10;
                }
        …
        …
        …
        }
    }
    ldp {
        interface ge-0/0/0.0;
    }
}

IS-IS Example:

protocols {
    mpls {
        interface ge-0/0/0.0;
    }
    …
    …
    …
    isis {
        level 1 authentication-key-chain ISIS_KEY;
        level 2 authentication-key-chain ISIS_KEY;
        interface ge-0/0/0.0 {
            ldp-synchronization {
                hold-time 10;
            }
        …
        …
        …
        }
    }
    ldp {
        interface ge-0/0/0.0;
    }
}

If the router is not configured to synchronize IGP and LDP, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000590">
    <title>SRG-NET-000193-RTR-000001</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000590_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000590</version>
      <title>The Juniper MPLS router with RSVP-TE enabled must be configured to enable refresh reduction features.</title>
      <description>&lt;VulnDiscussion&gt;RSVP-TE can be used to perform constraint-based routing when building LSP tunnels within the network core that will support QoS and traffic engineering requirements. RSVP-TE is also used to enable MPLS Fast Reroute, a network restoration mechanism that will reroute traffic onto a backup LSP in case of a node or link failure along the primary path. When there is a disruption in the MPLS core, such as a link flap or router reboot, the result is a significant amount of RSVP signaling, such as "PathErr" and "ResvErr" messages that need to be sent for every LSP using that link.

When RSVP messages are sent out, they are sent either hop by hop or with the router alert bit set in the IP header. This means that every router along the path must examine the packet to determine if additional processing is required for these RSVP messages. If there is enough signaling traffic in the network, it is possible for an interface to receive more packets for its input queue than it can hold, resulting in dropped RSVP messages and hence slower RSVP convergence. Increasing the size of the interface input queue can help prevent dropping packets; however, there is still the risk of having a burst of signaling traffic that can fill the queue. Solutions to mitigate this risk are RSVP message pacing or refresh reduction to control the rate at which RSVP messages are sent. RSVP refresh reduction includes the following features: RSVP message bundling, RSVP Message ID to reduce message processing overhead, Reliable delivery of RSVP messages using Message ID,  and summary refresh to reduce the amount of information transmitted every refresh interval.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001095</ident>
      <fixtext fixref="F-JUNI-RT-000590_fix">Configure the router to enable all refresh reduction features as shown in the example.

[edit protocols rsvp]
set interface ge-0/0/0.0 aggregate reliable

Note: the aggregate reliable commands will enable the following RSVP refresh reduction features: message bundling, reliable message delivery, and summary refresh.</fixtext>
      <fix id="F-JUNI-RT-000590_fix" />
      <check system="C-JUNI-RT-000590_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to determine if it is compliant with this requirement. The aggregate reliable commands in the example below will enable the following RSVP refresh reduction features: message bundling, Message ID, reliable message delivery, and summary refresh.

protocols {
    rsvp {
        interface ge-0/0/0.0 {
            aggregate;
            reliable;
        }
    }

If the router configured with RSVP-TE does not have refresh reduction features enabled, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000600">
    <title>SRG-NET-000512-RTR-000004</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000600_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000600</version>
      <title>The Juniper MPLS router must be configured to have TTL Propagation disabled.</title>
      <description>&lt;VulnDiscussion&gt;The head end of the label-switched path (LSP), the label edge router (LER) will decrement the IP packet's time-to-live (TTL) value by one and then copy the value to the MPLS TTL field. At each label-switched router (LSR) hop, the MPLS TTL value is decremented by one. The MPLS router that pops the label (either the penultimate LSR or the egress LER) will copy the packet's MPLS TTL value to the IP TTL field and decrement it by one.

This TTL propagation is the default behavior. Because the MPLS TTL is propagated from the IP TTL, a traceroute will list every hop in the path, be it routed or label switched, thereby exposing core nodes. With TTL propagation disabled, LER decrements the IP packet's TTL value by one and then places a value of 255 in the packet's MPLS TTL field, which is then decremented by one as the packet passes through each LSR in the MPLS core. Because the MPLS TTL never drops to zero, none of the LSP hops triggers an ICMP TTL exceeded message and consequently, these hops are not recorded in a traceroute. Hence, nodes within the MPLS core cannot be discovered by an attacker.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000366</ident>
      <fixtext fixref="F-JUNI-RT-000600_fix">Configure the MPLS router to disable TTL propagation.

[edit protocols mpls]
set no-propagate-ttl</fixtext>
      <fix id="F-JUNI-RT-000600_fix" />
      <check system="C-JUNI-RT-000600_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify that TTL propagation is disabled.

protocols {
    mpls {
        no-propagate-ttl;
    }

If the MPLS router is not configured to disable TTL propagation, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000610">
    <title>SRG-NET-000512-RTR-000005</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000610_rule" severity="high" weight="10.0">
      <version>JUNI-RT-000610</version>
      <title>The Juniper PE router must be configured to have each Virtual Routing and Forwarding (VRF) instance bound to the appropriate physical or logical interfaces to maintain traffic separation between all MPLS L3VPNs.</title>
      <description>&lt;VulnDiscussion&gt;The primary security model for an MPLS VPN infrastructure is traffic separation. Each CE-facing interface can only be associated to one VRF; that alone is the fundamental framework for traffic separation. Once a packet from the connecting CE reaches the PE router, a forwarding decision is made based on the forwarding table belonging to the VRF. The next hop will always point to another PE. As the packet traverses the label-switched path (LSP) between the two PE routers, it is encapsulated with a VPN header - the inner MPLS label mapping to the associated VPN.

The provider must guarantee the customer that data plane and control plane traffic from one VPN does not leak into another VPN or into the core, and that core traffic must not leak into any VPN. There is, however, the possibility of providing customer interconnections as well as the construction of an extranet to provide customers the ability to share common resources. Nevertheless, assuming correct operation and configuration of the MPLS core, the principles of separation prevail: VPNs are fully separated from each other so that intrusion from other VPNs or the core cannot occur. However, it is obvious that the greatest threat to the security model is human engineering; that is, misconfiguration of PE routers. For example, a customer-facing interface could be associated with the wrong VRF, prohibiting that site access to its proper VPN while providing access to another and vice versa.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000366</ident>
      <fixtext fixref="F-JUNI-RT-000610_fix">Configure the PE router to have each VRF bound to the appropriate physical or logical interfaces to maintain traffic separation between all MPLS L3VPNs as shown in the example below.

[edit]
set routing-instances L3VPN_CUST1 instance-type vrf
set routing-instances L3VPN_CUST1 description "Between PE1 &amp; PE2"
set routing-instances L3VPN_CUST1 interface ge-0/1/0.0
set routing-instances L3VPN_CUST1 protocols ospf interface area 1 ge-0/1/0.0
set routing-instances L3VPN_CUST1 route-distinguisher 33:33
set routing-instances L3VPN_CUST1 vrf-target target:33:33 
set routing-instances L3VPN_CUST1 vrf-table-label</fixtext>
      <fix id="F-JUNI-RT-000610_fix" />
      <check system="C-JUNI-RT-000610_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the design plan for deploying L3VPN and VRF-lite. 

Review all CE-facing interfaces and verify that the proper VRF is defined. The example below depicts the CE-facing interface ge-0/1/0 bound to VRF titled L3VPN_CUST1. Notice that the PE router is peering OSPF with the CE router.

interfaces {
    …
    …
    …
    }
    ge-0/1/0 {
        description "link to Customer 1";
        unit 0 {
            family inet {
                address 101.3.44.6/30;
            }
        }
    }
    …
    …
    …
}

routing-instances {
    L3VPN_CUST1 {
        description "Between PE1 &amp; PE2";
        instance-type vrf;
        interface ge-0/1/0.0;
        route-distinguisher 33:33;
        vrf-target target:33:33;
        vrf-table-label;
        protocols {
            ospf {
                area 0.0.0.1 {
                    interface ge-0/1/0.0;
                }
            }
        }
    }
}

If any VRFs are not bound to the appropriate physical or logical interface, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000620">
    <title>SRG-NET-000512-RTR-000006</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000620_rule" severity="high" weight="10.0">
      <version>JUNI-RT-000620</version>
      <title>The Juniper PE router must be configured to have each Virtual Routing and Forwarding (VRF) instance with the appropriate Route Target (RT).</title>
      <description>&lt;VulnDiscussion&gt;The primary security model for an MPLS L3VPN as well as a VRF-lite infrastructure is traffic separation. Each interface can only be associated to one VRF, which is the fundamental framework for traffic separation. Forwarding decisions are made based on the routing table belonging to the VRF. Control of what routes are imported into or exported from a VRF is based on the RT. It is critical that traffic does not leak from one COI tenant or L3VPN to another; hence, it is imperative that the correct RT is configured for each VRF.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000366</ident>
      <fixtext fixref="F-JUNI-RT-000620_fix">Configure the router to have each VRF instance defined with the correct RT.

[edit]
set routing-instances L3VPN_CUST1 vrf-target target:33:33</fixtext>
      <fix id="F-JUNI-RT-000620_fix" />
      <check system="C-JUNI-RT-000620_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the design plan for MPLS/L3VPN and VRF-lite to determine what RTs have been assigned for each VRF.  Review the router configuration and verify that the correct RT is configured for each VRF. In the example below, route target 33:33 has been configured for customer 1.

routing-instances {
    L3VPN_CUST1 {
        description "Between PE1 &amp; PE2";
        instance-type vrf;
        interface ge-0/1/0.0;
        route-distinguisher 33:33;
        vrf-target target:33:33;
        vrf-table-label;
        protocols {
            ospf {
                area 0.0.0.1 {
                    interface ge-0/1/0.0;
                }
            }
        }
    }

If there are VRFs configured with the wrong RT, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000630">
    <title>SRG-NET-000512-RTR-000007</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000630_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000630</version>
      <title>The Juniper PE router must be configured to have each VRF with the appropriate Route Distinguisher (RD).</title>
      <description>&lt;VulnDiscussion&gt;An RD provides uniqueness to the customer address spaces within the MPLS L3VPN infrastructure. The concept of the VPN-IPv4 and VPN-IPv6 address families consists of the RD prepended before the IP address. Hence, if the same IP prefix is used in several different L3VPNs, it is possible for BGP to carry several completely different routes for that prefix, one for each VPN.

Since VPN-IPv4 addresses and IPv4 addresses are different address families, BGP never treats them as comparable addresses. The purpose of the RD is to create distinct routes for common IPv4 address prefixes. On any given PE router, a single RD can define a VRF in which the entire address space may be used independently, regardless of the makeup of other VPN address spaces. Hence, it is imperative that a unique RD is assigned to each L3VPN and that the proper RD is configured for each VRF.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000366</ident>
      <fixtext fixref="F-JUNI-RT-000630_fix">Configure the correct RD for each VRF.

[edit]
set routing-instances L3VPN_CUST1 route-distinguisher 33:33</fixtext>
      <fix id="F-JUNI-RT-000630_fix" />
      <check system="C-JUNI-RT-000630_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the RDs that have been assigned for each VRF according to the plan provided by the ISSM. Review the router configuration and verify that the correct RD is configured for each VRF. In the example below, route distinguisher 33:33 has been configured for customer 1.

routing-instances {
    L3VPN_CUST1 {
        description "Between PE1 &amp; PE2";
        instance-type vrf;
        interface ge-0/1/0.0;
        route-distinguisher 33:33;
        vrf-target target:33:33;
        vrf-table-label;
        protocols {
            ospf {
                area 0.0.0.1 {
                    interface ge-0/1/0.0;
                }
            }
        }
    }

If the wrong RD has been configured for any VRF, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000640">
    <title>SRG-NET-000343-RTR-000001</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000640_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000640</version>
      <title>The Juniper PE router providing MPLS Layer 2 Virtual Private Network (L2VPN) services must be configured to authenticate targeted Label Distribution Protocol (LDP) sessions used to exchange virtual circuit (VC) information using a FIPS-approved message authentication code algorithm.</title>
      <description>&lt;VulnDiscussion&gt;LDP provides the signaling required for setting up and tearing down pseudowires (virtual circuits used to transport Layer 2 frames) across an MPLS IP core network. Using a targeted LDP session, each PE router advertises a virtual circuit label mapping that is used as part of the label stack imposed on the frames by the ingress PE router during packet forwarding. Authentication provides protection against spoofed TCP segments that can be introduced into the LDP sessions.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001958</ident>
      <fixtext fixref="F-JUNI-RT-000640_fix">Implement authentication for all targeted LDP sessions using a FIPS-approved message authentication code algorithm.

[edit security authentication-key-chains]
set key-chain LDP_KEY key 1 start-time 2018-05-01.12:00 secret xxxxxxxxxxxxx
set key-chain LDP_KEY key 2 start-time 2018-09-01.12:00 secret xxxxxxxxxxxxx
set key-chain LDP_KEY key 3 start-time 2019-01-01.12:00 secret xxxxxxxxxxxxx

[edit protocols ldp]
set session 8.8.8.8 authentication-algorithm hmac-sha-1-96 authentication-key-chain LDP_KEY</fixtext>
      <fix id="F-JUNI-RT-000640_fix" />
      <check system="C-JUNI-RT-000640_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to determine if LDP messages are being authenticated for the targeted LDP sessions. In the example below, the PE router is LDP peering with remote PE 8.8.8.8.

    ldp {
        interface ge-0/1/0.0;
        interface ge-0/1/1.0;
        session 8.8.8.8 {
            authentication-algorithm hmac-sha-1-96;
            authentication-key-chain LDP_KEY;
        }
    }

If authentication is not being used for the LDP targeted sessions using a FIPS-approved message authentication code algorithm, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000650">
    <title>SRG-NET-000512-RTR-000008</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000650_rule" severity="high" weight="10.0">
      <version>JUNI-RT-000650</version>
      <title>The Juniper PE router providing MPLS Virtual Private Wire Service (VPWS) must be configured to have the appropriate virtual circuit identification (VC ID) for each attachment circuit.</title>
      <description>&lt;VulnDiscussion&gt;VPWS is an L2VPN technology that provides a virtual circuit between two PE routers to forward Layer 2 frames between two customer-edge routers or switches through an MPLS-enabled IP core. The ingress PE router (virtual circuit head-end) encapsulates Ethernet frames inside MPLS packets using label stacking and forwards them across the MPLS network to the egress PE router (virtual circuit tail-end). During a virtual circuit setup, the J-PE routers exchange VC label bindings for the specified VC ID. The VC ID specifies a pseudowire associated with an ingress and egress PE router and the customer-facing attachment circuits. 

To guarantee that all frames are forwarded onto the correct pseudowire and to the correct customer and attachment circuits, it is imperative that the correct VC ID is configured for each attachment circuit.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000366</ident>
      <fixtext fixref="F-JUNI-RT-000650_fix">Assign globally unique VC IDs for each virtual circuit and configure the attachment circuits with the appropriate VC ID. Configure the same VC ID on both ends of the VC.

[edit protocols l2circuit]
set neighbor 8.8.8.8 interface em0 virtual-circuit-id 13</fixtext>
      <fix id="F-JUNI-RT-000650_fix" />
      <check system="C-JUNI-RT-000650_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the ingress and egress PE router configuration for each virtual circuit that has been provisioned.

Verify that the correct and unique VCID has been configured for the appropriate attachment circuit. In the example below ge-0/1/0 is the CE-facing interface that is configured for VPWS (aka pseudowire).

interfaces {
    ge-0/1/0.0 {
        encapsulation ethernet-ccc;
        unit 0 {
        }
    }
…
…
…
protocols {
    …
    …
    …
    }
    l2circuit {
        neighbor 8.8.8.8 {
            interface ge-0/1/0.0{
                virtual-circuit-id 13;
            }
        }
    }

If the correct VC ID has not been configured on both routers, this is a finding.

Note: Ethernet over MPLS in VLAN mode transports Ethernet traffic from a source 802.1Q VLAN to a destination 802.1Q VLAN over a core MPLS network. The VC ID must be unique and the same on each end as it is used to connect the endpoints of the VC.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000660">
    <title>SRG-NET-000512-RTR-000009</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000660_rule" severity="high" weight="10.0">
      <version>JUNI-RT-000660</version>
      <title>The Juniper PE router providing Virtual Private LAN Services (VPLS) must be configured to have all attachment circuits defined to the routing instance with the globally unique VPLS ID assigned for each customer VLAN.</title>
      <description>&lt;VulnDiscussion&gt;VPLS defines an architecture that delivers Ethernet multipoint services over an MPLS network. Customer Layer 2 frames are forwarded across the MPLS core via pseudowires using IEEE 802.1q Ethernet bridging principles. A pseudowire is a virtual bidirectional connection between two attachment circuits (virtual connections between PE and CE routers). A pseudowire contains two unidirectional label-switched paths (LSP) between two PE routers. Each MAC virtual forwarding table instance is interconnected using pseudowires provisioned for the bridge domain, thereby maintaining privacy and logical separation between each VPLS bridge domain.

The forwarding table instance specifies the pseudowires associated with connecting PE routers and the customer-facing attachment circuits belonging to a given VLAN. Resembling a Layer 2 switch, the forwarding table instance is responsible for learning MAC addresses and providing loop-free forwarding of customer traffic to the appropriate end nodes. Each VPLS domain is identified by a globally unique VPN ID; hence, VFIs of the same VPLS domain must be configured with the same VPLS ID on all participating PE routers. To guarantee traffic separation for all customer VLANs and that all packets are forwarded to the correct destination, it is imperative that the correct attachment circuits are associated with the appropriate forwarding table instance and that each forwarding table instance is associated to the unique VPLS ID assigned to the customer VLAN.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000366</ident>
      <fixtext fixref="F-JUNI-RT-000660_fix">Assign globally unique VPLS ID to each VPLS routing instance as shown in the example

[edit routing-instances VPLS_CUST2 protocols vpls]
set vpls-id 102 neighbor 8.8.8.8</fixtext>
      <fix id="F-JUNI-RT-000660_fix" />
      <check system="C-JUNI-RT-000660_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the implementation plan and the VPLS IDs assigned to customer VLANs for the VPLS deployment. Review the PE router configuration to verify that customer attachment circuits are associated to the appropriate routing instance configured for the customers VPLS ID.

interfaces {
    ge-0/1/0.0 {
        encapsulation ethernet-vpls;
        unit 0 {
        }
    }
…
…
…
routing-instances {
    VPLS_CUST2 {
        instance-type vpls;
        interface ge-0/1/0.0;
        route-distinguisher 22:22;
        vrf-target target:22:22;
        protocols {
            vpls {
                site-range 9;
                no-tunnel-services;
                site R8 {
                    site-identifier 8;
                    interface ge-0/1/0.0;
                }
                vpls-id 102;
                neighbor 8.8.8.8;
            }
        }
    }
}

If the attachment circuits have not been bound to appropriate routing instance configured with the assigned VPLS ID for each customer VLAN, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000680">
    <title>SRG-NET-000193-RTR-000002</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000680_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000680</version>
      <title>The Juniper PE router providing Virtual Private LAN Services (VPLS) must be configured to have traffic storm control thresholds on CE-facing interfaces.</title>
      <description>&lt;VulnDiscussion&gt;A traffic storm occurs when packets flood a VPLS bridge, creating excessive traffic and degrading network performance. Traffic storm control prevents VPLS bridge disruption by suppressing traffic when the number of packets reaches configured threshold levels. Traffic storm control monitors incoming traffic levels on a port and drops traffic when the number of packets reaches the configured threshold level during any one-second interval.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001095</ident>
      <fixtext fixref="F-JUNI-RT-000680_fix">Configure storm control for each VPLS bridge domain. Base the rate limiting on expected traffic rates plus some additional capacity. 

Configure a policer to rate limit traffic to provide storm control for all VPLS implementations as shown in the example.

[edit firewall]
set policer STORM_POLICER if-exceeding bandwidth-limit 10m burst-size-limit 5m
set policer STORM_POLICER then discard

Configure the filter to specify traffic types to rate limit broadcast, multicast, and unknown unicast storms as shown in the example.

[edit firewall family vpls filter VPLS_FLOOD_FILTER]
set term BROADCAST_TRAFFIC from traffic-type broadcast
set term BROADCAST_TRAFFIC then policer STORM_POLICER accept
set term MULTICAST_TRAFFIC from traffic-type multicast
set term MULTICAST_TRAFFIC then policer STORM_POLICER accept
set term UNKNOWN_UNICAST_TRAFFIC from traffic-type unknown-unicast 
set term UNKNOWN_UNICAST_TRAFFIC then policer STORM_POLICER accept 

Apply the storm control filter to all VPLS routing instances as shown in the example.

[edit routing-instances VPLS_CUST2]
set forwarding-options family vpls flood input VPLS_FLOOD_FILTER</fixtext>
      <fix id="F-JUNI-RT-000680_fix" />
      <check system="C-JUNI-RT-000680_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify that storm control is enabled on CE-facing interfaces deploying VPLS.

Verify that a flood filter has been configured for each VPLS routing instances as shown in the example below.

routing-instances {
    VPLS_CUST2 {
        instance-type vpls;
        interface ge-0/1/0.0;  
        route-distinguisher 22:22;
        vrf-target target:22:22;
        forwarding-options {
            family vpls {
                 flood {
                    input VPLS_FLOOD_FILTER;
                 }
            }
        }
        protocols {
            vpls {
                site-range 9;
                no-tunnel-services;
                site R8 {
                    site-identifier 8;
                    interface ge-0/1/0.0;
                }
                vpls-id 102;
                neighbor 8.8.8.8;
            }
        }
    }
}

Review the filter configured for the VPLS routing instances to verify it defines traffic types associated with storm control (i.e. broadcast, multicast, and unknown unicast storms).

firewall {
    …
    …
    …
    family vpls {
        filter VPLS_FLOOD_FILTER {
            term BROADCAST_TRAFFIC {
                from {
                    traffic-type broadcast;
                }
                then {
                    policer STORM_POLICER;
                    accept;
                }
            }
            term MULTICAST_TRAFFIC {
                from {
                    traffic-type multicast;
                }
                then {
                    policer STORM_POLICER;
                    accept;
                }
            }
            term UNKNOWN_UNICAST_TRAFFIC {
                from {
                    traffic-type unknown-unicast;
                }
                then {
                    policer STORM_POLICER;
                    accept;
                }
            }
        }
    }

Verify that the policer rates limits storm traffic.

firewall {
    …
    …
    …
    policer STORM_POLICER {
        if-exceeding {
            bandwidth-limit 10m;
            burst-size-limit 5m;
        }
        then discard;
    }

If storm control is not enabled, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000690">
    <title>SRG-NET-000362-RTR-000119</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000690_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000690</version>
      <title>The Juniper PE router must be configured to implement Internet Group Management Protocol (IGMP) or Multicast Listener Discovery (MLD) snooping for each Virtual Private LAN Services (VPLS) bridge domain.</title>
      <description>&lt;VulnDiscussion&gt;IGMP snooping provides a way to constrain multicast traffic at Layer 2. By monitoring the IGMP membership reports sent by hosts within the bridge domain, the snooping application can set up Layer 2 multicast forwarding tables to deliver traffic only to ports with at least one interested member within the VPLS bridge, thereby significantly reducing the volume of multicast traffic that would otherwise flood an entire VPLS bridge domain. The IGMP snooping operation applies to both access circuits and pseudowires within a VPLS bridge domain.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002385</ident>
      <fixtext fixref="F-JUNI-RT-000690_fix">Configure PIM snooping for each VPLS bridge domain as shown in the example below.

[edit routing-instances VPLS_CUST2]
set routing-instances VPLS_CUST2 protocols pim-snooping</fixtext>
      <fix id="F-JUNI-RT-000690_fix" />
      <check system="C-JUNI-RT-000690_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify that PIM snooping has been configured under the routing instance protocols hierarchy for each VPLS bridge domain as shown in the example.

routing-instances {
    VPLS_CUST2 {
        instance-type vpls;
        interface ge-0/1/0.0;  
        route-distinguisher 22:22;
        vrf-target target:22:22;
        }
        protocols {
            vpls {
                site-range 9;
                no-tunnel-services;
                site R8 {
                    site-identifier 8;
                    interface ge-0/1/0.0;
                }
                vpls-id 102;
                neighbor 8.8.8.8;
            }
            pim-snooping;
            }
        }
    }
}

If the router is not configured to implement PIM  snooping for each VPLS bridge domain, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000700">
    <title>SRG-NET-000192-RTR-000002</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000700_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000700</version>
      <title>The Juniper PE router must be configured to limit the number of MAC addresses it can learn for each Virtual Private LAN Services (VPLS) bridge domain.</title>
      <description>&lt;VulnDiscussion&gt;VPLS defines an architecture that delivers Ethernet multipoint services over an MPLS network. Customer Layer 2 frames are forwarded across the MPLS core via pseudowires using IEEE 802.1q Ethernet bridging principles. A pseudowire is a virtual bidirectional connection between two attachment circuits (virtual connections between PE and CE routers). A pseudowire contains two unidirectional label-switched paths (LSP). Each MAC forwarding table instance is interconnected using domain-specific LSPs, thereby maintaining privacy and logical separation between each VPLS domain.

When a frame arrives on a bridge port (pseudowire or attachment circuit) and the source MAC address is unknown to the receiving PE router, the source MAC address is associated with the pseudowire or attachment circuit and the forwarding table is updated accordingly. Frames are forwarded to the appropriate pseudowire or attachment circuit according to the forwarding table entry for the destination MAC address. Ethernet frames sent to broadcast and unknown destination addresses must be flooded out to all interfaces for the bridge domain; hence, a PE router must replicate packets across both attachment circuits and pseudowires.

A malicious attacker residing in a customer network could launch a source MAC address spoofing attack by flooding packets to a valid unicast destination, each with a different MAC source address. The PE router receiving this traffic would try to learn every new MAC address and would quickly run out of space for the VFI forwarding table. Older, valid MAC addresses would be removed from the table, and traffic sent to them would have to be flooded until the storm threshold limit is reached. Hence, it is essential that a limit is established to control the number of MAC addresses that will be learned and recorded into the forwarding table for each bridge domain.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001094</ident>
      <fixtext fixref="F-JUNI-RT-000700_fix">Configure a MAC address learning limit for each VPLS bridge domain.

[edit routing-instances VPLS_CUST2 protocols vpls]
set mac-table-size nnnn</fixtext>
      <fix id="F-JUNI-RT-000700_fix" />
      <check system="C-JUNI-RT-000700_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the PE router configuration to determine if a MAC address limit has been set for each VPLS bridge domain.

routing-instances {
    VPLS_CUST2 {
        instance-type vpls;
        interface ge-0/1/0.0; 
        route-distinguisher 22:22;
        vrf-target target:22:22;
        protocols {
            vpls {
                site-range 9;
                mac-table-size {
                   nnnn;
                }
                no-tunnel-services;
                site R8 {
                    site-identifier 8;
                    interface ge-0/1/0.0;
                }
                vpls-id 102;
                neighbor 8.8.8.8;
            }
        }
    }
}

If a limit has not been configured, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000710">
    <title>SRG-NET-000205-RTR-000007</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000710_rule" severity="high" weight="10.0">
      <version>JUNI-RT-000710</version>
      <title>The Juniper PE router must be configured to block any traffic that is destined to IP core infrastructure.</title>
      <description>&lt;VulnDiscussion&gt;IP/MPLS networks providing VPN and transit services must provide, at the least, the same level of protection against denial-of-service (DoS) attacks and intrusions as Layer 2 networks. Although the IP core network elements are hidden, security should never rely entirely on obscurity.

IP addresses can be guessed. Core network elements must not be accessible from any external host. Protecting the core from any attack is vital for the integrity and privacy of customer traffic as well as the availability of transit services. A compromise of the IP core can result in an outage or, at a minimum, non-optimized forwarding of customer traffic. Protecting the core from an outside attack also prevents attackers from using the core to attack any customer. Hence, it is imperative that all routers at the edge deny traffic destined to any address belonging to the IP core infrastructure.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001097</ident>
      <fixtext fixref="F-JUNI-RT-000710_fix">Configure protection for the IP core to be implemented at the edges by blocking any traffic with a destination address assigned to the IP core infrastructure.

Configure an ingress filter to discard and log packets destined to the IP core address space. 

[edit firewall family inet]
set filter INGRESS_FILTER term BLOCK_TO_CORE from destination-address x.x.x.x/8
set filter INGRESS_FILTER term BLOCK_TO_CORE then log discard
set filter INGRESS_FILTER term ALLOW_TRANSIT_TRAFFIC then accept

Apply the filter to all CE-facing interfaces.

[edit interfaces ge-0/1/0 unit 0]
set family inet filter input INGRESS_FILTER</fixtext>
      <fix id="F-JUNI-RT-000710_fix" />
      <check system="C-JUNI-RT-000710_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify that an ingress filter is applied to all CE-facing interfaces. 

interfaces {
    ge-0/1/0 {
        description "link to Customer 2";
        unit 0 {
            family inet {
                filter {
                    input INGRESS_FILTER;
                }
                address x.x.x.x/30;
            }
        }
    }

Verify that the ingress filter discards and logs packets destined to the IP core address space. 

firewall {
    family inet {
        filter INGRESS_FILTER {
            term BLOCK_TO_CORE {
                from {
                    destination-address {
                        x.x.x.x/8;
                    }
                }
                then {
                    log;
                    discard;
                }
            }
            term ALLOW_TRANSIT_TRAFFIC {
                then accept;
            }
        }
    }

If the PE router is not configured to block any traffic with a destination address assigned to the IP core infrastructure, this is a finding.

Note: Internet Control Message Protocol (ICMP) echo requests and traceroutes will be allowed to the edge from external adjacent neighbors.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000720">
    <title>SRG-NET-000205-RTR-000008</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000720_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000720</version>
      <title>The Juniper PE router must be configured with Unicast Reverse Path Forwarding (uRPF) loose mode enabled on all CE-facing interfaces.</title>
      <description>&lt;VulnDiscussion&gt;The uRPF feature is a defense against spoofing and denial-of-service (DoS) attacks by verifying if the source address of any ingress packet is reachable. To mitigate attacks that rely on forged source addresses, all provider edge routers must enable uRPF loose mode to guarantee that all packets received from a CE router contain source addresses that are in the route table.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001097</ident>
      <fixtext fixref="F-JUNI-RT-000720_fix">Configure uRPF loose mode on all CE-facing interfaces as shown in the example

[edit interfaces ge-0/1/0 unit 0 family inet]
set rpf-check mode loose</fixtext>
      <fix id="F-JUNI-RT-000720_fix" />
      <check system="C-JUNI-RT-000720_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to determine if uRPF loose mode is enabled on all CE-facing interfaces.

interfaces {
    ge-0/1/0 {
        description "link to Customer 2";
        unit 0 {
            family inet {
                rpf-check {
                    mode loose;
                }
                address x.x.x.x/30;
            }
        }
    }

If uRPF loose mode is not enabled on all CE-facing interfaces, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000730">
    <title>SRG-NET-000195-RTR-000085</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000730_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000730</version>
      <title>The Juniper PE router must be configured to ignore or block all packets with any IP options.</title>
      <description>&lt;VulnDiscussion&gt;Packets with IP options are not fast switched and therefore must be punted to the router processor. Hackers who initiate denial-of-service (DoS) attacks on routers commonly send large streams of packets with IP options. Dropping the packets with IP options reduces the load of IP options packets on the router. The end result is a reduction in the effects of the DoS attack on the router and on downstream routers.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002403</ident>
      <fixtext fixref="F-JUNI-RT-000730_fix">Configure the router to drop all packets with IP options.

[edit firewall family inet filter INGRESS_FILTER]
set term BLOCK_IP_OPTIONS from ip-options any
set term BLOCK_IP_OPTIONS then discard
insert term BLOCK_IP_OPTIONS before term ALLOW_TRANSIT_TRAFFIC</fixtext>
      <fix id="F-JUNI-RT-000730_fix" />
      <check system="C-JUNI-RT-000730_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to determine if it will block all packets with IP options.

firewall {
    family inet {
        filter INGRESS_FILTER {
            term BLOCK_TO_CORE {
                from {
                    destination-address {
                        x.x.x.x/8;
                    }
                }
                then {
                    log;
                    discard;
                }
            }
            term BLOCK_IP_OPTIONS {
                from {
                    ip-options any;
                }
                then {
                    discard;
                }
            }
            term ALLOW_TRANSIT_TRAFFIC {
                then accept;
            }
        }
    }

If the router is not configured to drop all packets with IP options, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000740">
    <title>SRG-NET-000193-RTR-000113</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000740_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000740</version>
      <title>The Juniper PE router must be configured to enforce a Quality-of-Service (QoS) policy in accordance with the QoS DoDIN Technical Profile.</title>
      <description>&lt;VulnDiscussion&gt;Different applications have unique requirements and toleration levels for delay, jitter, bandwidth, packet loss, and availability. To manage the multitude of applications and services, a network requires a QoS framework to differentiate traffic and provide a method to manage network congestion. The Differentiated Services Model (DiffServ) is based on per-hop behavior by categorizing traffic into different classes and enabling each node to enforce a forwarding treatment to each packet as dictated by a policy.

Packet markings such as IP Precedence and its successor, Differentiated Services Code Points (DSCP), were defined along with specific per-hop behaviors for key traffic types to enable a scalable QoS solution. DiffServ QoS categorizes network traffic, prioritizes it according to its relative importance, and provides priority treatment based on the classification. It is imperative that end-to-end QoS is implemented within the IP core network to provide preferred treatment for mission-critical applications.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001095</ident>
      <fixtext fixref="F-JUNI-RT-000740_fix">Configure a QoS policy on each router in accordance with the QoS DoDIN Technical Profile.

The PE router must classify ingress traffic entering the backbone. Configure a Multifield (MF) classifier to classify traffic based on protocol and ports as shown in the example below.

[edit firewall family inet filter CLASSIFY_TRAFFIC]
set term SIP from protocol tcp
set term SIP from port 5060
set term SIP then forwarding-class expedited-forwarding
set term SIP then accept
set term RTP from protocol tcp
set term RTP from port 16384-32767
set term RTP then forwarding-class expedited-forwarding
set term RTP then accept
set term H.323 from protocol tcp
set term H.323 from port 1720
set term H.323 then forwarding-class assured-forwarding loss-priority low
set term H.323 then accept
set term VIDEO_GK from protocol udp
set term VIDEO_GK from port 1718-1719
set term VIDEO_GK then forwarding-class assured-forwarding loss-priority low
set term VIDEO_GK then accept
set term VIDEO_BEARER from protocol udp
set term VIDEO_BEARER from port 3230-3235
set term VIDEO_BEARER then forwarding-class assured-forwarding loss-priority low
set term VIDEO_BEARER then accept
set term SSH from protocol tcp
set term SSH from port ssh
set term SSH then forwarding-class assured-forwarding loss-priority high 
set term SSH then accept
set term TACACS from protocol tcp
set term TACACS from port tacacs
set term TACACS then forwarding-class assured-forwarding loss-priority high
set term TACACS then accept
set term SNMP from protocol tcp
set term SNMP from port snmp
set term SNMP then forwarding-class assured-forwarding loss-priority high
set term SNMP then accept
set term ICMP from protocol icmp
set term ICMP then forwarding-class assured-forwarding loss-priority high
set term ICMP then accept
set term OSPF from protocol ospf
set term OSPF then forwarding-class network-control
set term OSPF then accept
set term PIM from protocol pim
set term PIM then forwarding-class network-control
set term PIM then accept
set term ACCEPT_OTHER then forwarding-class best-effort
set term ACCEPT_OTHER then accept 

Configure drop profiles.

[edit class-of-service]
set drop-profiles LOW_DROP fill-level 95 drop-probability 0
set drop-profiles LOW_DROP fill-level 100 drop-probability 100 
set drop-profiles HIGH_DROP fill-level 50 drop-probability 10 
set drop-profiles HIGH_DROP fill-level 95 drop-probability 100 

Configure QoS schedulers to define how queued egress packets are prioritized. 

[edit class-of-service schedulers]
set VOIP_SCHED transmit-rate percent 10
set VOIP_SCHED buffer-size percent 10
set VOIP_SCHED priority high
set VIDEO_SCHED transmit-rate percent 20
set VIDEO_SCHED buffer-size percent 20
set VIDEO_SCHED priority medium-high
set VIDEO_SCHED drop-profile-map protocol any loss-priority low drop-profile LOW_DROP
set MGMT_SCHED transmit-rate percent 10
set MGMT_SCHED buffer-size percent 10
set MGMT_SCHED priority medium-low
set MGMT_SCHED drop-profile-map protocol any loss-priority high drop-profile HIGH_DROP
set CONTROL_PLANE_SCHED transmit-rate percent 10
set CONTROL_PLANE_SCHED buffer-size percent 10
set CONTROL_PLANE_SCHED priority medium-high
set BEST_EFFORT_SCHED transmit-rate percent 50
set BEST_EFFORT_SCHED buffer-size percent 50
set BEST_EFFORT_SCHED priority low

Configure scheduler maps to link the forwarding classes to schedulers.

[edit class-of-service scheduler-maps QOS_SCHED_MAP]
set forwarding-class expedited-forwarding scheduler VOIP_SCHED
set forwarding-class network-control scheduler CONTROL_PLANE_SCHED
set forwarding-class assured-forwarding scheduler VIDEO_SCHED
set forwarding-class assured-forwarding scheduler MGMT_SCHED
set forwarding-class best-effort scheduler BEST_EFFORT_SCHED

Apply the filter that classifies traffic inbound on all CE-facing interfaces

[edit interfaces ge-0/1/0 unit 0]
set family inet filter input CLASSIFY_TRAFFIC

Apply the scheduler map to all interfaces as shown in the example.

[edit class-of-service interfaces]
set ge-0/0/1 scheduler-map QOS_SCHED_MAP
set ge-0/1/1 scheduler-map QOS_SCHED_MAP
set ge-1/0/0 scheduler-map QOS_SCHED_MAP
set ge-1/0/1 scheduler-map QOS_SCHED_MAP

Apply the rewrite rules to mark egress packets on all core-facing interfaces as shown in the example.

[edit class-of-service interfaces]
set ge-0/0/1 unit 0 rewrite-rules dscp default
set ge-0/1/1 unit 0 rewrite-rules dscp default</fixtext>
      <fix id="F-JUNI-RT-000740_fix" />
      <check system="C-JUNI-RT-000740_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration and verify that a QoS policy has been configured to provide preferred treatment for mission-critical applications in accordance with the QoS DoDIN Technical Profile. PE routers are responsible for classifying customer traffic and setting the forwarding class.

Verify that a Multifield (MF) classifier has been configured to classify traffic based on protocol and ports as shown in the example below.

firewall {
    family inet {
       …
       …
       …
        }
        filter CLASSIFY_TRAFFIC {
            term SIP {
                from {
                    protocol tcp;
                    port 5060;
                }
                then {
                    forwarding-class expedited-forwarding;
                    accept;
                }
            }
            term RTP {
                from {
                    protocol udp;
                    port 16384-32767;
                }
                then {
                    forwarding-class expedited-forwarding;
                    accept;
                }
            }
            term H.323 {
                from {
                    protocol tcp;
                    port 1720;
                }
                then {
                    loss-priority high;
                    forwarding-class assured-forwarding;
                    accept;
                }
            }
            term VIDEO_GK {
                from {
                    protocol udp;
                    port 1718-1719;
                }
                then {
                    loss-priority high;
                    forwarding-class assured-forwarding;
                    accept;
                }
            }
            term VIDEO_BEARER {
                from {
                    protocol udp;
                    port 3230-3235;
                }
                then {
                    loss-priority low;
                    forwarding-class assured-forwarding;
                    accept;
                }
            }
            term SSH {
                from {
                    protocol tcp;
                    port ssh;
                }
                then {
                    loss-priority high;
                    forwarding-class assured-forwarding;
                    accept;
                }
            }
            term TACACS {
                from {
                    protocol tcp;
                    port tacacs;
                }
                then {
                    loss-priority high;
                    forwarding-class assured-forwarding;
                    accept;
                }
            }
            term SNMP {
                from {
                    protocol tcp;
                    port snmp;
                }
                then {
                    loss-priority high;
                    forwarding-class assured-forwarding;
                    accept;
                }
            }
            term ICMP {
                from {
                    protocol icmp;
                }
                then {
                    loss-priority high;
                    forwarding-class assured-forwarding;
                    accept;
                }
            }
            term OSPF {
                from {
                    protocol ospf;
                }
                then {
                    forwarding-class network-control;
                    accept;
                }
            }
            term PIM {
                from {
                    protocol pim;
                }
                then {
                    forwarding-class network-control;
                    accept;
                }
            }
            term ACCEPT_OTHER {
                then {
                    forwarding-class best-effort;
                    accept;
                }
            }
        }
    }

Verify that the classifier filter is bound to all CE-facing interfaces as shown in the example below.

interfaces {
    ge-0/0/0 {
        description "Customer 1";
        unit 0 {
            family inet {
                filter {
                    CLASSIFY_TRAFFIC
                }
                address x.x.x.x/30;
            }
        }
    }

Verify that drop profiles and schedulers have been configured that define how queued egress packets are prioritized.

class-of-service {
    drop-profiles {
        LOW_DROP {
            fill-level 95 drop-probability 0;
            fill-level 100 drop-probability 100;
        }
        HIGH_DROP {
            fill-level 50 drop-probability 10;
            fill-level 95 drop-probability 100;
        }
    }
    schedulers {
        VOIP_SCHED {
            transmit-rate percent 10;
            buffer-size percent 10;
            priority high;
        }
        CONTROL_PLANE_SCHED {
            transmit-rate percent 10;
            buffer-size percent 10;
            priority medium-high;
         }
        VIDEO_SCHED {
            transmit-rate percent 20;
            buffer-size percent 20;
            priority medium-high;
            drop-profile-map loss-priority low protocol any drop-profile LOW_DROP;
        }
        MGMT_SCHED {
            transmit-rate percent 10;
            buffer-size percent 10;
            priority medium-low;
            drop-profile-map loss-priority high protocol any drop-profile HIGH_DROP;
        }
        BEST_EFFORT_SCHED {
            transmit-rate percent 50;
            buffer-size percent 50;
            priority low;
        }
    }
}

Verify that scheduler maps have been configured to link the forwarding classes to schedulers as shown in the example below.

class-of-service {
    …
    …
    …
    }
    scheduler-maps {
        QOS_SCHED_MAP {
            forwarding-class expedited-forwarding scheduler VOIP_SCHED;
            forwarding-class network-control scheduler CONTROL_PLANE_SCHED;
            forwarding-class assured-forwarding scheduler MGMT_SCHED;
            forwarding-class best-effort scheduler BEST_EFFORT_SCHED;
        }
    }

Verify that the configured QoS scheduler map has been applied to all interfaces and that the rewrite rules have been applied to all core-facing interfaces as shown in the example below.

class-of-service {
    …
    …
    …
    }
    interfaces {
        ge-0/0/1 {
            scheduler-map QOS_SCHED_MAP;
            unit 0 {
                rewrite-rules {
                    dscp default;
                }
            }
        }
        ge-0/1/1 {
            scheduler-map QOS_SCHED_MAP;
            unit 0 {
                rewrite-rules {
                    dscp default;
                }
            }
        }
        ge-1/0/0 {
            scheduler-map QOS_SCHED_MAP;
        }
        ge-1/0/1 {
            scheduler-map QOS_SCHED_MAP;
        }
    }

If the router is not configured to enforce a QoS policy in accordance with the QoS DoDIN Technical Profile, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000750">
    <title>SRG-NET-000193-RTR-000114</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000750_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000750</version>
      <title>The Juniper PE or P router must be configured to implement a Quality-of-Service (QoS) policy in accordance with the QoS DoDIN Technical Profile.</title>
      <description>&lt;VulnDiscussion&gt;Different applications have unique requirements and toleration levels for delay, jitter, bandwidth, packet loss, and availability. To manage the multitude of applications and services, a network requires a QoS framework to differentiate traffic and provide a method to manage network congestion. The Differentiated Services Model (DiffServ) is based on per-hop behavior by categorizing traffic into different classes and enabling each node to enforce a forwarding treatment to each packet as dictated by a policy.

Packet markings such as IP Precedence and its successor, Differentiated Services Code Points (DSCP), were defined along with specific per-hop behaviors for key traffic types to enable a scalable QoS solution. DiffServ QoS categorizes network traffic, prioritizes it according to its relative importance, and provides priority treatment based on the classification. It is imperative that end-to-end QoS is implemented within the IP core network to provide preferred treatment for mission-critical applications.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001095</ident>
      <fixtext fixref="F-JUNI-RT-000750_fix">Configure all P router interfaces and PE core-facing interfaces to use a configured or the default BA classifier as shown in the example below.

[edit class-of-service interfaces]
set ge-0/0/1 unit 0 classifiers dscp default
set ge-0/1/0 unit 0 classifiers dscp default 
set ge-1/0/1 unit 0 classifiers dscp default
set ge-1/1/0 unit 0 classifiers dscp default</fixtext>
      <fix id="F-JUNI-RT-000750_fix" />
      <check system="C-JUNI-RT-000750_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Since PE routers have classified traffic types and set DSCP values for packets received from CE routers, all P routers must be configured to use the configured or default Behavior Aggregate (BA) classifier on all interfaces as shown in the example below. PE routers must be configured to use the same BA classifier on all core-facing interfaces.

class-of-service {
    …
    …
    …
    }
    interfaces {
        ge-0/0/1 {
            unit 0 {
                classifiers {
                    dscp default;
                }
            }
        }
        ge-0/1/0 {
            unit 0 {
                classifiers {
                    dscp default;
                }
            }
        }
        ge-1/0/1 {
            unit 0 {
                classifiers {
                    dscp default;
                }
            }
        }
        ge-1/1/0 {
            unit 0 {
                classifiers {
                    dscp default;
                }
            }
        }

If the router is not configured to implement a QoS policy in accordance with the QoS DoDIN Technical Profile, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000760">
    <title>SRG-NET-000193-RTR-000109</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000760_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000760</version>
      <title>The Juniper PE router must be configured to enforce a Quality-of-Service (QoS) policy so that all customer traffic receives forwarding treatment as specified in the service level agreement (SLA).</title>
      <description>&lt;VulnDiscussion&gt;QoS enables DISA to offer value-added IP services in accordance with SLAs, ensuring that customer requirements can be met while providing a method to provision the edge and core to accommodate those requirements.

The IP core will recognize and provide forwarding treatment of customer traffic according to the Differentiated Services Code Points (DSCP). Customers marking traffic within their DiffServ domain will be required to comply with the DSCP classification that has been approved by the DOD QoS Working Group. Non-compliance could enable a customer or even an attacker to rob bandwidth from other customers or mission-critical services.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001095</ident>
      <fixtext fixref="F-JUNI-RT-000760_fix">Configure a QoS policy to provide traffic forwarding treatment as specified in the SLA.

The PE router must classify ingress traffic entering the backbone. Configure a filter to classify traffic based on protocol and ports as shown in the example below.

[edit firewall family inet filter CLASSIFY_CUST1_TRAFFIC]
set term SIP from protocol tcp
set term SIP from port 5060
set term SIP then forwarding-class expedited-forwarding
set term SIP then accept
set term RTP from protocol udp
set term RTP from port 16384-32767
set term RTP then forwarding-class expedited-forwarding
set term RTP then accept
set term APP1 from protocol tcp
set term APP1 from port nnnn
set term APP1then forwarding-class assured-forwarding loss-priority low
set term APP1 then accept
set term APP2 from protocol tcp
set term APP2 from port nnnn
set term APP2 then forwarding-class assured-forwarding loss-priority high 
set term APP2 then accept
set term ACCEPT_OTHER then forwarding-class best-effort
set term ACCEPT_OTHER then accept 

Configure drop profiles.

[edit class-of-service]
set drop-profiles LOW_DROP fill-level 95 drop-probability 0
set drop-profiles LOW_DROP fill-level 100 drop-probability 100 
set drop-profiles HIGH_DROP fill-level 50 drop-probability 10 
set drop-profiles HIGH_DROP fill-level 95 drop-probability 100 

Configure QoS schedulers to define how queued egress packets are prioritized. 

[edit class-of-service schedulers]
set VOIP_SCHED transmit-rate percent 10
set VOIP_SCHED buffer-size percent 10
set VOIP_SCHED priority high
set APP1_SCHED transmit-rate percent 20
set APP1_SCHED buffer-size percent 20
set APP1_SCHED priority medium-low
set APP1_SCHED drop-profile-map protocol any loss-priority low drop-profile LOW_DROP
set APP2_SCHED transmit-rate percent 10
set APP2_SCHED buffer-size percent 10
set APP2_SCHED priority medium-low
set APP2_SCHED drop-profile-map protocol any loss-priority high drop-profile HIGH_DROP
set BEST_EFFORT_SCHED transmit-rate percent 60
set BEST_EFFORT_SCHED buffer-size percent 60
set BEST_EFFORT_SCHED priority low

Configure scheduler maps to link the forwarding classes to schedulers.

[edit class-of-service scheduler-maps QOS_SCHED_MAP]
set forwarding-class expedited-forwarding scheduler VOIP_SCHED
set forwarding-class assured-forwarding scheduler APP1_SCHED
set forwarding-class assured-forwarding scheduler APP2_SCHED
set forwarding-class best-effort scheduler BEST_EFFORT_SCHED

Apply the filter that classifies traffic inbound on all CE-facing interfaces

[edit interfaces ge-0/1/0 unit 0]
set family inet filter input CLASSIFY_CUST1_TRAFFIC

Apply the scheduler map to all core-facing interfaces as shown in the example.

[edit class-of-service interfaces]
set ge-0/0/1 scheduler-map QOS_SCHED_MAP
set ge-0/1/1 scheduler-map QOS_SCHED_MAP

Apply the rewrite rules to mark egress packets on all core-facing interfaces as shown in the example.

[edit class-of-service interfaces]
set ge-0/0/1 unit 0 rewrite-rules dscp default
set ge-0/1/1 unit 0 rewrite-rules dscp default</fixtext>
      <fix id="F-JUNI-RT-000760_fix" />
      <check system="C-JUNI-RT-000760_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Verify that a filter has been configured to classify customer's traffic based on protocol and ports as shown in the example below.

firewall {
    family inet {
       …
       …
       …
        }
        filter CLASSIFY_CUST1_TRAFFIC {
            term SIP {
                from {
                    protocol tcp;
                    port 5060;
                }
                then {
                    forwarding-class expedited-forwarding;
                    accept;
                }
            }
            term RTP {
                from {
                    protocol udp;
                    port 16384-32767;
                }
                then {
                    forwarding-class expedited-forwarding;
                    accept;
                }
            }
            term APP1 {
                from {
                    protocol tcp;
                    port nnnn;
                }
                then {
                    loss-priority low;
                    forwarding-class assured-forwarding;
                    accept;
                }
            }
            term APP2 {
                from {
                    protocol tcp;
                    port nnnn;
                }
                then {
                    loss-priority high;
                    forwarding-class assured-forwarding;
                    accept;
                }
            }
            term ACCEPT_OTHER {
                then {
                    forwarding-class best-effort;
                    accept;
                }
            }
        }
    }

Verify that the classifier filter is bound to all CE-facing interfaces as shown in the example below.

interfaces {
    ge-0/0/0 {
        description "Customer 1";
        unit 0 {
            family inet {
                filter {
                    CLASSIFY_CUST1_TRAFFIC
                }
                address x.x.x.x/30;
            }
        }
    }

Verify that drop profiles and schedulers have been configured that define how queued egress packets are prioritized.

class-of-service {
    drop-profiles {
        LOW_DROP {
            fill-level 95 drop-probability 0;
            fill-level 100 drop-probability 100;
        }
        HIGH_DROP {
            fill-level 50 drop-probability 10;
            fill-level 95 drop-probability 100;
        }
    }
    schedulers {
        VOIP_SCHED {
            transmit-rate percent 10;
            buffer-size percent 10;
            priority high;
        }
         APP1_SCHED {
            transmit-rate percent 20;
            buffer-size percent 20;
            priority medium-high;
            drop-profile-map loss-priority low protocol any drop-profile LOW_DROP;
        }
        APP2_SCHED {
            transmit-rate percent 10;
            buffer-size percent 10;
            priority medium-low;
            drop-profile-map loss-priority high protocol any drop-profile HIGH_DROP;
        }
        BEST_EFFORT_SCHED {
            transmit-rate percent 60;
            buffer-size percent 60;
            priority low;
        }
    }
}

Verify that scheduler maps have been configured to link the forwarding classes to schedulers as shown in the example below.

class-of-service {
    …
    …
    …
    }
    scheduler-maps {
        QOS_SCHED_MAP {
            forwarding-class expedited-forwarding scheduler VOIP_SCHED;
            forwarding-class network-control scheduler APP1_SCHED;
            forwarding-class assured-forwarding scheduler APP2_SCHED;
            forwarding-class best-effort scheduler BEST_EFFORT_SCHED;
        }
    }

Verify that the configured QoS scheduler map and the rewrite rules have been applied to all core-facing interfaces as shown in the example below.

class-of-service {
    …
    …
    …
    }
    interfaces {
        ge-0/0/1 {
            scheduler-map QOS_SCHED_MAP;
            unit 0 {
                rewrite-rules {
                    dscp default;
                }
            }
        }
        ge-0/1/1 {
            scheduler-map QOS_SCHED_MAP;
            unit 0 {
                rewrite-rules {
                    dscp default;
                }
            }
        }

If the PE router does not enforce a QoS policy to ensure that all customer traffic receives forwarding treatment as specified in the SLA, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000770">
    <title>SRG-NET-000193-RTR-000112</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000770_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000770</version>
      <title>The Juniper router must be configured to enforce a Quality-of-Service (QoS) policy to limit the effects of packet flooding denial-of-service (DoS) attacks.</title>
      <description>&lt;VulnDiscussion&gt;DoS is a condition when a resource is not available for legitimate users. Packet flooding distributed denial-of-service (DDoS) attacks are referred to as volumetric attacks and have the objective of overloading a network or circuit to deny or seriously degrade performance, which denies access to the services that normally traverse the network or circuit. Volumetric attacks have become relatively easy to launch using readily available tools such as Low Orbit Ion Cannon or botnets. 

Measures to mitigate the effects of a successful volumetric attack must be taken to ensure that sufficient capacity is available for mission-critical traffic. Managing capacity may include, for example, establishing selected network usage priorities or quotas and enforcing them using rate limiting, Quality of Service (QoS), or other resource reservation control methods. These measures may also mitigate the effects of sudden decreases in network capacity that are the result of accidental or intentional physical damage to telecommunications facilities (such as cable cuts or weather-related outages).&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001095</ident>
      <fixtext fixref="F-JUNI-RT-000770_fix">Configure a forwarding class has been configured for the Scavenger class as shown in the example below.

[edit class-of-service forwarding-classes]
set class CS1 queue-num 7 priority low 

The Scavenger class is marked at the access layer with DSCP CS1. Hence, the router must maintain the marking and assign the packet to the configured forwarding class CS1.

PE Router only – Configure a Multifield (MF) classifier to provision for the Scavenger class as shown in the example below.

[edit firewall family inet filter CLASSIFY_TRAFFIC]
set term SCAVENGER from dscp cs1
set term SCAVENGER then forwarding-class CS1 accept
insert term SCAVENGER before term ACCEPT_OTHER

PE and P Router – Configure a Behavior aggregate (BA) classifier to match on the packets marked with DSCP CS1.

[edit class-of-service classifiers] 
set dscp CLASSIFIER import default forwarding-class CS1 loss-priority high code-points 001000 

P router only – Apply the BA classifier to all interfaces

[edit class-of-service interfaces]
set ge-0/0/1 unit 0 classifiers dscp CLASSIFIER
set ge-0/1/1 unit 0 classifiers dscp CLASSIFIER

Remaining steps are only applicable to the PE router.

Configure a scheduler for the Scavenger class.

[edit class-of-service schedulers]
set SCAVENGER_SCHED transmit-rate percent 5
set SCAVENGER_SCHED buffer-size percent 5
set SCAVENGER_SCHED priority low
set BEST_EFFORT_SCHED transmit-rate percent 55

Add the Scavenger scheduler to the scheduler map.

[edit class-of-service scheduler-maps QOS_SCHED_MAP]
set forwarding-class CS1 scheduler SCAVENGER_SCHED

Apply the scheduler map to all core-facing interfaces.

[edit class-of-service interfaces]
set ge-2/1/1 scheduler-map QOS_SCHED_MAP
set ge-1/0/1 scheduler-map QOS_SCHED_MAP

Note: The above step should already have been completed.

Configure rewrite rules to ensure egress Scavenger packets will continue to be marked with DSCP CS1.

[edit class-of-service rewrite-rules]
set dscp REWRITE_DSCP import default forwarding-class CS1 loss-priority high code-point 001000 

Apply the configured rewrite rules to all core-facing interfaces.

[edit class-of-service interfaces]
set ge-2/1/1 unit 0 rewrite-rules dscp REWRITE_DSCP
set ge-1/0/1 unit 0 rewrite-rules dscp REWRITE_DSCP</fixtext>
      <fix id="F-JUNI-RT-000770_fix" />
      <check system="C-JUNI-RT-000770_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Verify that a forwarding class has been configured for the Scavenger class. CS1 has been adopted as the forwarding class; hence, the example below will define class CS1 to be used.

class-of-service {
    …
    …
    …
    }
    forwarding-classes {
        class CS1 queue-num 7 priority low;
    }

The Scavenger class is marked at the access layer with DSCP CS1. Hence, the router must maintain the marking and assign the packet to the configured forwarding class CS1.

PE Router only - Verify that the Multifield (MF) classifier has provisioned for this class as shown in the example below.

firewall {
    family inet {
        filter CLASSIFY_TRAFFIC {
            …
            …
            …
            }
            term SCAVENGER {
                from {
                    dscp cs1;
                }
                then {
                    forwarding-class CS1;
                    accept;
                }
            }
            term ACCEPT_OTHER {
                then {
                    forwarding-class best-effort;
                    accept;
                }
            }
        }
    }
}

PE and P router - Verify that a Behavior aggregate (BA) classifier has been configured to match the Scavenger class (CS1) as shown in the example below.

class-of-service {
    classifiers {
        dscp CLASSIFIER {
            import default;
            forwarding-class CS1 {
                loss-priority high code-points 001000;
            }
        }
    }

Note: A proactive approach to mitigating DoS and worm flooding attacks within the base/camp/agency enclaves is to respond immediately to out-of-profile network behavior indicative of a DoS or worm attack via access-Layer policers. Such policers can meter traffic rates received from endpoint devices.  When these traffic flows exceed specified rates, they no longer are considered normal flows and henceforth can be set to the Scavenger class marking (DSCP CS1).

P router – Verify that the BA classifier has been applied to all interfaces as shown in the example below.

class-of-service {
    …
    …
    …
    }
    interfaces {
        ge-0/0/1 {
            unit 0 {
                classifiers {
                    dscp CLASSIFIER;
                }
            }
        }
        ge-0/1/1 {
            unit 0 {
                classifiers {
                    dscp CLASSIFIER;
                }
            }
        }
    }
}

Remaining steps only apply to the PE router.

Verify that a scheduler has been configured for the Scavenger class as shown in the example below.

class-of-service {
    …
    …
    …
    }
    schedulers {
        …
        …
        …
        }
        SCAVENGER_SCHED {
            transmit-rate percent 5;
            buffer-size percent 5;
            priority low;
        }
    }
}

Verify that the scheduler has been added to the scheduler map.

class-of-service {
    …
    …
    …
    }
    scheduler-maps {
        QOS_SCHED_MAP {
            forwarding-class expedited-forwarding scheduler VOIP_SCHED;
            forwarding-class network-control scheduler CONTROL_PLANE_SCHED;
            forwarding-class assured-forwarding scheduler MGMT_SCHED;
            forwarding-class best-effort scheduler BEST_EFFORT_SCHED;
            forwarding-class CS1 scheduler SCAVENGER_SCHED;
        }
    }

Verify that rewrite rules have been created to mark DSCP CS1 for those packets assigned to the Scavenger class with the appropriate code points.

class-of-service {
    …
    …
    …
    }
    rewrite-rules {
        dscp REWRITE_DSCP {
            import default;
            forwarding-class CS1 {
                loss-priority high code-point 001000;
            }
        }
    }

Verify that the scheduler map, rewrite rules, and the BA classifier has been applied to all core-facing interfaces.

class-of-service {
    …
    …
    …
    }
    interfaces {
        ge-2/1/1 {
            scheduler-map QOS_SCHED_MAP;
            unit 0 {
                classifiers {
                    dscp CLASSIFIER;
                }
                rewrite-rules {
                    dscp REWRITE_DSCP;
                }
            }
        }
        ge-2/0/1 {
            scheduler-map QOS_SCHED_MAP;
            unit 0 {
                rewrite-rules {
                    dscp REWRITE_DSCP;
                }
            }
        }
    }

If QoS policy to limit the effects of packet flooding denial-of-service (DoS) attacks has not been configured, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000780">
    <title>SRG-NET-000019-RTR-000003</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000780_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000780</version>
      <title>The Juniper multicast router must be configured to disable Protocol Independent Multicast (PIM) on all interfaces that are not required to support multicast routing.</title>
      <description>&lt;VulnDiscussion&gt;If multicast traffic is forwarded beyond the intended boundary, it is possible that it can be intercepted by unauthorized or unintended personnel. Limiting where, within the network, a given multicast group's data is permitted to flow is an important first step in improving multicast security. 

A scope zone is an instance of a connected region of a given scope. Zones of the same scope cannot overlap while zones of a smaller scope will fit completely within a zone of a larger scope. For example, Admin-local scope is smaller than Site-local scope, so the administratively configured boundary fits within the bounds of a site. According to RFC 4007 IPv6 Scoped Address Architecture (section 5), scope zones are also required to be "convex from a routing perspective"; that is, packets routed within a zone must not pass through any links that are outside of the zone. This requirement forces each zone to be one contiguous island rather than a series of separate islands. 

As stated in the DoD IPv6 IA Guidance for MO3, "One should be able to identify all interfaces of a zone by drawing a closed loop on their network diagram, engulfing some routers and passing through some routers to include only some of their interfaces." Therefore, it is imperative that the network engineers have documented their multicast topology and thereby knows which interfaces are enabled for multicast. Once this is done, the zones can be scoped as required.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001414</ident>
      <fixtext fixref="F-JUNI-RT-000780_fix">Document all enabled interfaces for PIM in the network's multicast topology diagram. Disable support for PIM on interfaces that are not required to support it.

[edit protocols pim]
delete interface ge-2/1/1.0</fixtext>
      <fix id="F-JUNI-RT-000780_fix" />
      <check system="C-JUNI-RT-000780_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the network's multicast topology diagram.

Review the router configuration to verify that only the PIM interfaces as shown in the multicast topology diagram are enabled for PIM.

protocols {
    …
    …
    …
    pim {
        interface ge-1/0/1.0 {
            mode sparse;
        }
        interface ge-1/1/1.0 {
            mode sparse;
        }
        interface ge-2/1/0.0 {
            mode sparse;
        }
        interface ge-2/1/1.0 {
            mode sparse;
        }
    }

If an interface is not required to support multicast routing and it is enabled, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000790">
    <title>SRG-NET-000019-RTR-000004</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000790_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000790</version>
      <title>The Juniper multicast router must be configured to bind a Protocol Independent Multicast (PIM) neighbor filter to interfaces that have PIM enabled.</title>
      <description>&lt;VulnDiscussion&gt;PIM is a routing protocol used to build multicast distribution trees for forwarding multicast traffic across the network infrastructure. PIM traffic must be limited to only known PIM neighbors by configuring and binding a PIM neighbor filter to those interfaces that have PIM enabled. If a PIM neighbor filter is not applied to those interfaces that have PIM enabled, unauthorized routers can join the PIM domain, discover and use the rendezvous points, and also advertise their rendezvous points into the domain. This can result in a denial of service by traffic flooding or result in the unauthorized transfer of data.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001414</ident>
      <fixtext fixref="F-JUNI-RT-000790_fix">This requirement is not applicable for the DoDIN Backbone.

Configure neighbor filters to only accept PIM control plane traffic from documented PIM neighbors. Bind neighbor filters to all PIM enabled interfaces.

Configure prefix list for each neighbor

[edit policy-options]
set prefix-list PIM_NBR1 x.x.x.x/32
set prefix-list PIM_NBR2 x.x.x.x/32
set prefix-list PIM_NBR3 x.x.x.x/32

Configure policy statements for each PIM neighbor

[edit policy-options]
set policy-statement PIM_NBR1_POLICY from prefix-list PIM_NBR1
set policy-statement PIM_NBR1_POLICY then accept
set policy-statement PIM_NBR2_POLICY from prefix-list PIM_NBR1
set policy-statement PIM_NBR2_POLICY then accept
set policy-statement PIM_NBR3_POLICY from prefix-list PIM_NBR1
set policy-statement PIM_NBR3_POLICY then accept

Apply the neighbor policy to all interfaces enabled for PIM

[edit protocols pim]
set interface ge-1/0/1.0 neighbor-policy PIM_NBR1_POLICY 
set interface ge-1/1/1.0 neighbor-policy PIM_NBR1_POLICY 
set interface ge-2/1/0.0 neighbor-policy PIM_NBR1_POLICY</fixtext>
      <fix id="F-JUNI-RT-000790_fix" />
      <check system="C-JUNI-RT-000790_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>This requirement is not applicable for the DoDIN Backbone.

Verify all interfaces enabled for PIM have a neighbor filter bound to the interface as shown in the example below.

protocols {
    …
    …
    …
    pim {
        interface ge-1/0/1.0 {
            mode sparse;
            neighbor-policy PIM_NBR1_POLICY;
        }
        interface ge-1/1/1.0 {
            mode sparse;
            neighbor-policy PIM_NBR2_POLICY;
        }
        interface ge-2/1/0.0 {
            mode sparse;
            neighbor-policy PIM_NBR3_POLICY;
        }
    }

Review the prefix list and policy statements configured for filtering PIM neighbors as shown in the example below.

policy-options {
    prefix-list PIM_NBR1 {
        x.x.x.x/32;
    }
    prefix-list PIM_NBR2 {
        x.x.x.x/32;
    }
    prefix-list PIM_NBR3 {
        x.x.x.x/32;
    }

    policy-statement PIM_NBR1_POLICY {
        from {
            prefix-list PIM_NBR1;
        }
        then accept;
    }
    policy-statement PIM_NBR2_POLICY {
        from {
            prefix-list PIM_NBR2;
        }
        then accept;
    }
    policy-statement PIM_NBR3_POLICY {
        from {
            prefix-list PIM_NBR3;
        }
        then accept;
    }

If PIM neighbor filters are not bound to all interfaces that have PIM enabled, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000800">
    <title>SRG-NET-000019-RTR-000005</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000800_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000800</version>
      <title>The Juniper multicast edge router must be configured to establish boundaries for administratively scoped multicast traffic.</title>
      <description>&lt;VulnDiscussion&gt;If multicast traffic is forwarded beyond the intended boundary, it is possible that it can be intercepted by unauthorized or unintended personnel.

Administrative scoped multicast addresses are locally assigned and are to be used exclusively by the enterprise network or enclave. Administrative scoped multicast traffic must not cross the enclave perimeter in either direction. Restricting multicast traffic makes it more difficult for a malicious user to access sensitive traffic.

Admin-Local scope is encouraged for any multicast traffic within a network intended for network management, as well as for control plane traffic that must reach beyond link-local destinations.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001414</ident>
      <fixtext fixref="F-JUNI-RT-000800_fix">Configure the appropriate boundaries to contain packets addressed within the administratively scoped zone as shown in the example below.

[edit routing-options]
set multicast scope LOCAL_SCOPE interface ge-1/0/1.0 prefix 239.255.0.0/16
set multicast scope LOCAL_SCOPE interface ge-1/0/1.0 prefix 239.255.0.0/16
set multicast scope ORGANIZATION_SCOPE interface ge-2/0/1.0 prefix 239.192.0.0/14</fixtext>
      <fix id="F-JUNI-RT-000800_fix" />
      <check system="C-JUNI-RT-000800_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the multicast topology diagram to determine if there are any documented Local -Scope (239.255.0.0/16) or Organization-Scope (239.192.0.0/14) boundaries. Verify the boundaries have been enforced as shown in the configuration example below.

routing-options {
    …
    …
    …
    multicast {
        scope LOCAL_SCOPE {
            prefix 239.255.0.0/16;
            interface [ge-1/0/1.0 ge-1/1/1.0];
        }
        scope ORGANIZATION_SCOPE {
            prefix 239.192.0.0/14;
            interface ge-2/0/1.0;
        }
    }
}

If the appropriate boundaries are not configured on applicable multicast-enabled interfaces, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000810">
    <title>SRG-NET-000362-RTR-000120</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000810_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000810</version>
      <title>The Juniper multicast Rendezvous Point (RP) router must be configured to limit the multicast forwarding cache so that its resources are not saturated by managing an overwhelming number of Protocol Independent Multicast (PIM) and Multicast Source Discovery Protocol (MSDP) source-active entries.</title>
      <description>&lt;VulnDiscussion&gt;MSDP peering between networks enables sharing of multicast source information. Enclaves with an existing multicast topology using PIM-SM can configure their RP routers to peer with MSDP routers. As a first step of defense against a denial-of-service (DoS) attack, all RP routers must limit the multicast forwarding cache to ensure that router resources are not saturated managing an overwhelming number of PIM and MSDP source-active entries.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002385</ident>
      <fixtext fixref="F-JUNI-RT-000810_fix">Configure the router to limit the multicast forwarding cache for source-active entries.

[edit routing-options multicast]
set forwarding-cache threshold suppress 5000 reuse 4000</fixtext>
      <fix id="F-JUNI-RT-000810_fix" />
      <check system="C-JUNI-RT-000810_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to determine if forwarding cache thresholds are defined as shown in the example below.

routing-options {
    multicast {
        …
        …
        …
        }
        forwarding-cache {
            threshold {
                suppress 5000;
                reuse 4000;
            }
        }
    }
}

If the RP router is not configured to limit the multicast forwarding cache to ensure that its resources are not saturated, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000820">
    <title>SRG-NET-000019-RTR-000013</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000820_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000820</version>
      <title>The Juniper multicast Rendezvous Point (RP) router must be configured to filter Protocol Independent Multicast (PIM) Register messages received from the Designated Router (DR) for any undesirable multicast groups and sources.</title>
      <description>&lt;VulnDiscussion&gt;Real-time multicast traffic can entail multiple large flows of data. An attacker can flood a network segment with multicast packets, over-using the available bandwidth and thereby creating a denial-of-service (DoS) condition. Hence, it is imperative that register messages are accepted only for authorized multicast groups and sources.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001414</ident>
      <fixtext fixref="F-JUNI-RT-000820_fix">Configure the router to filter PIM register messages received from a multicast DR for any undesirable multicast groups or BOGON sources.

[edit policy-options policy-statement MULTICAST_REGISTER_POLICY]
set term BAD_SOURCES from source-address-filter x.x.x.x/32 exact
set term BAD_SOURCES from source-address-filter x.x.x.x/24 orlonger
set term BAD_GROUPS from route-filter 224.1.1.0/24 orlonger
set term BAD_GROUPS from route-filter 225.1.2.3/32 exact
set term BAD_GROUPS from route-filter 239.0.0.0/8 orlonger
set term BAD_GROUPS then reject
set term ALLOW_OTHER then accept

[edit protocols pim rp]
set rp-register-policy MULTICAST_REGISTER_POLICY</fixtext>
      <fix id="F-JUNI-RT-000820_fix" />
      <check system="C-JUNI-RT-000820_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Verify that the RP router is configured to filter PIM register messages.

Verify that the RP has a register policy enabled as shown in the example below.

protocols {
    …
    …
    …
    }
    pim {
        rp {
            rp-register-policy MULTICAST_REGISTER_POLICY;
            local {
                address 2.2.2.2;
            }
        }

Verify that the register policy has defined both bad multicast groups and sources as shown in the example below.

policy-options {
    …
    …
    …
    }
    policy-statement MULTICAST_REGISTER_POLICY {
        term BAD_SOURCES {
            from {
                source-address-filter x.x.x.x/32 exact;
                source-address-filter x.x.x.x/24 orlonger;
            }
            then reject;
        }
        term BAD_GROUPS {
            from {
                route-filter 224.1.1.0/24 orlonger;
                route-filter 225.1.2.3/32 exact;
                route-filter 239.0.0.0/8 orlonger;
                …
                …
                …
                route-filter 232.0.0.0/8 orlonger;
            }
            then reject;
        }
        term ALLOW_OTHER {
            then accept;
        }
    }

If the RP router peering with PIM-SM routers is not configured with a policy to block registration messages for any undesirable multicast groups and sources, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000830">
    <title>SRG-NET-000019-RTR-000014</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000830_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000830</version>
      <title>The Juniper multicast Rendezvous Point (RP) router must be configured to filter Protocol Independent Multicast (PIM) Join messages received from the Designated Juniper router (DR) for any undesirable multicast groups.</title>
      <description>&lt;VulnDiscussion&gt;Real-time multicast traffic can entail multiple large flows of data. An attacker can flood a network segment with multicast packets, over-using the available bandwidth and thereby creating a denial-of-service (DoS) condition. Hence, it is imperative that join messages are only accepted for authorized multicast groups.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001414</ident>
      <fixtext fixref="F-JUNI-RT-000830_fix">RP routers that are peering with customer PIM-SM routers must implement a PIM import policy to block join messages for any undesirable multicast groups and sources.

Configure a multicast join policy to filter bad groups and sources as shown in the example below.

[edit policy-options policy-statement MULTICAST_JOIN_POLICY]
set term BAD_SOURCES from source-address-filter x.x.x.x/32 exact
set term BAD_SOURCES from source-address-filter x.x.x.x/24 orlonger
set term BAD_GROUPS from route-filter 224.1.1.0/24 orlonger
set term BAD_GROUPS from route-filter 225.1.2.3/32 exact
set term BAD_GROUPS from route-filter 239.0.0.0/8 orlonger
set term BAD_GROUPS then reject
set term ALLOW_OTHER then accept

Configure PIM to enable the join policy as shown in the example below.

[edit protocols pim]
set import MULTICAST_JOIN_POLICY</fixtext>
      <fix id="F-JUNI-RT-000830_fix" />
      <check system="C-JUNI-RT-000830_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the RP router configuration to determine if it filters PIM join messages for any reserved multicast groups.

Verify that a PIM import statement has been configured as shown in the example below.

protocols {
    …
    …
    …
    }
    pim {
           import MULTICAST_JOIN_POLICY;

Verify that the join policy has defined both bad multicast groups and sources as shown in the example below.

policy-options {
    …
    …
    …
    }
    policy-statement MULTICAST_JOIN_POLICY {
        term BAD_SOURCES {
            from {
                source-address-filter x.x.x.x/32 exact;
                source-address-filter x.x.x.x/24 orlonger;
            }
            then reject;
        }
        term BAD_GROUPS {
            from {
                route-filter 224.1.1.0/24 orlonger;
                route-filter 225.1.2.3/32 exact;
                route-filter 239.0.0.0/8 orlonger;
                …
                …
                …
                route-filter 232.0.0.0/8 orlonger;
            }
            then reject;
        }
        term ALLOW_OTHER {
            then accept;
        }
    }

If the RP router peering with PIM-SM routers is not configured with a PIM import policy to block join messages for any undesirable multicast groups and sources, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000840">
    <title>SRG-NET-000362-RTR-000121</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000840_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000840</version>
      <title>The Juniper multicast Rendezvous Point (RP) must be configured to rate limit the number of Protocol Independent Multicast (PIM) Register messages.</title>
      <description>&lt;VulnDiscussion&gt;When a new source starts transmitting in a PIM Sparse Mode network, the DR will encapsulate the multicast packets into register messages and forward them to the RP using unicast. This process can be taxing on the CPU for both the DR and the RP if the source is running at a high data rate and there are many new sources starting at the same time. This scenario can potentially occur immediately after a network failover. The rate limit for the number of register messages should be set to a relatively low value based on the known number of multicast sources within the multicast domain.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002385</ident>
      <fixtext fixref="F-JUNI-RT-000840_fix">Configure the RP to rate limit the number of multicast register messages it will allow for each (S, G) entry.

[edit protocols pim rp]
set register-limit maximum nnnnn</fixtext>
      <fix id="F-JUNI-RT-000840_fix" />
      <check system="C-JUNI-RT-000840_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the configuration of the RP to verify that it is rate limiting the number of multicast register messages.

protocols {
    …
    …
    …
    }
    pim {
        rp {
            register-limit maximum nnnnn;
            local {
                address 2.2.2.2;
            }
        }

Note: Each any-source group (*,G) counts as one group toward the limit. Each source-specific group (S,G) counts as one group toward the limit.

If the RP is not limiting multicast register messages, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000850">
    <title>SRG-NET-000364-RTR-000114</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000850_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000850</version>
      <title>The Juniper multicast Designated Router (DR) must be configured to filter the Internet Group Management Protocol (IGMP) and Multicast Listener Discovery (MLD) Report messages to allow hosts to join only multicast groups that have been approved by the organization.</title>
      <description>&lt;VulnDiscussion&gt;Real-time multicast traffic can entail multiple large flows of data. Large unicast flows tend to be fairly isolated (i.e., someone doing a file download here or there), whereas multicast can have broader impact on bandwidth consumption, resulting in extreme network congestion. Hence, it is imperative that there is multicast admission control to restrict which multicast groups hosts are allowed to join via IGMP or MLD.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002403</ident>
      <fixtext fixref="F-JUNI-RT-000850_fix">Configure the DR to filter the IGMP and MLD report messages to allow hosts to join only those multicast groups that have been approved.

Configure a multicast join policy to filter groups that have not been approved as shown in the example below.

[edit policy-options policy-statement MULTICAST_JOIN_POLICY]
set term BAD_GROUPS from route-filter 224.1.1.0/24 orlonger
set term BAD_GROUPS from route-filter 225.1.2.3/32 exact
set term BAD_GROUPS from route-filter 239.0.0.0/8 orlonger
set term BAD_GROUPS then reject
set term ALLOW_APPROVED then accept

Apply the policy to all interfaces enabled for IGMP.

[edit protocols igmp]
set interface ge-1/0/1.0 group-policy MULTICAST_JOIN_POLICY</fixtext>
      <fix id="F-JUNI-RT-000850_fix" />
      <check system="C-JUNI-RT-000850_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the configuration of the DR to verify that it is filtering IGMP or MLD report messages, allowing hosts to join only those groups that have been approved.

Verify that a group policy has been configured to filter IGMP join requests as shown in the example below.

protocols {
    igmp {
        interface ge-1/0/1.0 {
            group-policy MULTICAST_JOIN_POLICY;
        }
    }

Verify that the group policy only allows join requests for those groups that have been approved.

policy-options {
    …
    …
    …
    }
    policy-statement MULTICAST_JOIN_POLICY {
        …
        …
        …
        }
        term BAD_GROUPS {
            from {
                route-filter 224.1.1.0/24 orlonger;
                route-filter 225.1.2.3/32 exact;
                route-filter 239.0.0.0/8 orlonger;
                …
                …
                …
                route-filter 232.0.0.0/8 orlonger;
            }
            then reject;
        }
        term ALLOW_APPROVED {
            then accept;
        }
    }

If the DR is not filtering IGMP or MLD report messages to only allow joins for approved groups, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000860">
    <title>SRG-NET-000364-RTR-000115</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000860_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000860</version>
      <title>The Juniper multicast Designated Router (DR) must be configured to filter the Internet Group Management Protocol (IGMP) and Multicast Listener Discovery (MLD) Report messages to allow hosts to join a multicast group only from sources that have been approved by the organization.</title>
      <description>&lt;VulnDiscussion&gt;Real-time multicast traffic can entail multiple large flows of data. Large unicast flows tend to be fairly isolated (i.e., someone doing a file download here or there), whereas multicast can have broader impact on bandwidth consumption, resulting in extreme network congestion. Hence, it is imperative that there is multicast admission control to restrict which multicast groups hosts are allowed to join via IGMP or MLD.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002403</ident>
      <fixtext fixref="F-JUNI-RT-000860_fix">Configure the DR to filter the IGMP and MLD report messages to allow hosts to join only those multicast groups from sources that have been approved.

Configure a multicast join policy to filter unauthorized multicast sources.

[edit policy-options policy-statement MULTICAST_JOIN_POLICY]
set term BAD_SOURCES from source-address-filter x.x.x.x/32 exact
set term BAD_SOURCES from source-address-filter x.x.x.x/24 orlonger
set term BAD_SOURCES then reject
set term ALLOW_APPROVED then accept

 Apply the policy to all interfaces enabled for IGMP.

[edit protocols igmp]
set interface ge-1/0/1.0 group-policy MULTICAST_JOIN_POLICY</fixtext>
      <fix id="F-JUNI-RT-000860_fix" />
      <check system="C-JUNI-RT-000860_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the configuration of the DR to verify that it is filtering IGMP or MLD report messages, allowing hosts to only join multicast groups from sources that have been approved.

Verify that a group policy has been configured to filter IGMP join requests as shown in the example below.

protocols {
    igmp {
        interface ge-1/0/1.0 {
            group-policy MULTICAST_JOIN_POLICY;
        }
    }

Verify that the policy only allows join requests for those sources that have been approved.

policy-options {
    …
    …
    …
    }
    policy-statement MULTICAST_JOIN_POLICY {
        term BAD_SOURCES {
            from {
                source-address-filter x.x.x.x/32 exact;
                source-address-filter x.x.x.x/24 orlonger;
            }
            then reject;
        }
        …
        …
        …
        }
        term ALLOW_APPROVED {
            then accept;
        }
    }

If the DR is not filtering IGMP or MLD report messages to only allow joins for approved sources, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000870">
    <title>SRG-NET-000362-RTR-000122</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000870_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000870</version>
      <title>The Juniper multicast Designated Router (DR) must be configured to limit the number of mroute states resulting from Internet Group Management Protocol (IGMP) and Multicast Listener Discovery (MLD) Host Membership Reports.</title>
      <description>&lt;VulnDiscussion&gt;The current multicast paradigm can let any host join any multicast group at any time by sending an IGMP or MLD membership report to the DR. In a Protocol Independent Multicast (PIM) Sparse Mode network, the DR will send a PIM Join message for the group to the RP. Without any form of admission control, this can pose a security risk to the entire multicast domain - specifically the multicast routers along the shared tree from the DR to the RP that must maintain the mroute state information for each group join request. Hence, it is imperative that the DR is configured to limit the number of mroute state information that must be maintained to mitigate the risk of IGMP or MLD flooding.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002385</ident>
      <fixtext fixref="F-JUNI-RT-000870_fix">Configure the DR on a global or interface basis to limit the number of mroute states resulting from IGMP or MLD membership reports.

[edit protocols igmp]
set interface ge-1/0/1.0  group-limit nnn</fixtext>
      <fix id="F-JUNI-RT-000870_fix" />
      <check system="C-JUNI-RT-000870_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the DR configuration to verify that it is limiting the number of mroute states via IGMP or MLD.

protocols {
    igmp {
        interface ge-1/0/1.0 {
            group-limit nnn;
        }
    }

If the DR is not limiting multicast join requests via IGMP or MLD, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000880">
    <title>SRG-NET-000362-RTR-000123</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000880_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000880</version>
      <title>The Juniper multicast Designated Router (DR) must be configured to set the shortest-path tree (SPT) threshold to infinity to minimalize source-group (S, G) state within the multicast topology where Any Source Multicast (ASM) is deployed.</title>
      <description>&lt;VulnDiscussion&gt;ASM can have many sources for the same groups (many-to-many). For many receivers, the path via the RP may not be ideal compared with the shortest path from the source to the receiver. By default, the last-hop router will initiate a switch from the shared tree to a source-specific SPT to obtain lower latencies. This is accomplished by the last-hop router sending an (S, G) Protocol Independent Multicast (PIM) Join toward S (the source).

When the last-hop router begins to receive traffic for the group from the source via the SPT, it will send a PIM Prune message to the RP for the (S, G). The RP will then send a Prune message toward the source. The SPT switchover becomes a scaling issue for large multicast topologies that have many receivers and many sources for many groups because (S, G) entries require more memory than (*, G). Hence, it is imperative to minimize the amount of (S, G) state to be maintained by increasing the threshold that determines when the SPT switchover occurs.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002385</ident>
      <fixtext fixref="F-JUNI-RT-000880_fix">Configure the multicast router to increase the SPT threshold or set it to infinity to minimalize (S, G) state within the multicast topology where ASM is deployed.

Configure a policy statement to set SPT threshold to infinity for all multicast groups or only specific groups and sources.

[edit policy-options]
set policy-statement SPT_INFINITY term ALL_GROUPS from route-filter 234.0.0.0/8 orlonger
set policy-statement SPT_INFINITY term ALL_GROUPS then accept

Apply the SPT infinity policy

[edit protocols pim]
set spt-threshold infinity SPT_INFINITY</fixtext>
      <fix id="F-JUNI-RT-000880_fix" />
      <check system="C-JUNI-RT-000880_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the multicast last-hop router configuration to verify that the SPT switchover threshold is set to infinity for all or specific multicast groups and sources.

Verify that an infinity policy has been enabled for PIM.

protocols {
    …
    …
    …
    }
    pim {
        spt-threshold {
            infinity SPT_INFINITY;
        }
    }
}

Verify that the infinity policy defines specific multicast groups and sources or all multicast groups and sources as shown in the example below.

policy-options {
    …
    …
    …
    }
    policy-statement SPT_INFINITY {
        term ALL_GROUPS {
            from {
                route-filter 234.0.0.0/8 orlonger;
            }
            then accept;
        }
    }
}

If any multicast router is not configured to set the SPT threshold to infinity to minimalize (S, G) state, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000890">
    <title>SRG-NET-000364-RTR-000116</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000890_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000890</version>
      <title>The Juniper Multicast Source Discovery Protocol (MSDP) router must be configured to only accept MSDP packets from known MSDP peers.</title>
      <description>&lt;VulnDiscussion&gt;MSDP peering with customer network routers presents additional risks to the DISN Core, whether from a rogue or misconfigured MSDP-enabled router. To guard against an attack from malicious MSDP traffic, the receive path or interface filter for all MSDP-enabled RP routers must be configured to only accept MSDP packets from known MSDP peers.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-002403</ident>
      <fixtext fixref="F-JUNI-RT-000890_fix">Configure the receive path filter to only accept MSDP packets from known MSDP peers as shown in the following example:

[edit firewall family inet filter PROTECT_RE]
set term MSDP_PEERS from protocol tcp port msdp
set term MSDP_PEERS from source-address 0.0.0.0/0
set term MSDP_PEERS from source-address 1.1.1.1/32 except
set term MSDP_PEERS from source-address 5.5.5.5/32 except
set term MSDP_PEERS then discard
set term ALLOW_OTHER then accept

Apply the filter to the loopback interface.

[edit interfaces lo0 unit 0 family inet]
set filter input PROTECT_RE</fixtext>
      <fix id="F-JUNI-RT-000890_fix" />
      <check system="C-JUNI-RT-000890_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to determine if there is a receive path or interface filter to only accept MSDP packets from known MSDP peers.

Verify that the loopback has been configured to filter packets destined to the routing engine as shown in the example below.

interfaces {
    …
    …
    …
    }
    lo0 {
        unit 0 {
            family inet {
                filter {
                    input PROTECT_RE;
                }
                address 2.2.2.2/32;
            }
        }
    }
}

Verify that the filter is configured to only accept MSDP packets from known MSDP peers as shown in the example below.

firewall {
    family inet {
        filter PROTECT_RE {
            term MSDP_PEERS {
                from {
                    source-address {
                        0.0.0.0/0;
                        1.1.1.1/32 except;
                        5.5.5.5/32 except;
                    }
                    protocol tcp;
                    port msdp;
                }
                then {
                    discard;
                }
            }
            term ALLOW_OTHER {
                then accept;
            }
        }
    }
}

If the router is not configured to only accept MSDP packets from known MSDP peers, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000900">
    <title>SRG-NET-000343-RTR-000002</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000900_rule" severity="medium" weight="10.0">
      <version>JUNI-RT-000900</version>
      <title>The Juniper Multicast Source Discovery Protocol (MSDP) router must be configured to authenticate all received MSDP packets.</title>
      <description>&lt;VulnDiscussion&gt;MSDP peering with customer network routers presents additional risks to the core, whether from a rogue or misconfigured MSDP-enabled router. MSDP password authentication is used to validate each segment sent on the TCP connection between MSDP peers, protecting the MSDP session against the threat of spoofed packets being injected into the TCP connection stream.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001958</ident>
      <fixtext fixref="F-JUNI-RT-000900_fix">Configure the router to authenticate MSDP messages as shown in the following example:

[edit protocols msdp group AS25 peer 5.5.5.5]
set authentication-key xxxxxxxx</fixtext>
      <fix id="F-JUNI-RT-000900_fix" />
      <check system="C-JUNI-RT-000900_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to determine if received MSDP packets are authenticated.

protocols {
    msdp {
        group AS25 {
            peer 5.5.5.5 {
                authentication-key "$9$KspW87GUH.mTxNfz"; ## SECRET-DATA}
        }
    }

If the router does not require MSDP authentication, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000910">
    <title>SRG-NET-000018-RTR-000007</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000910_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000910</version>
      <title>The Juniper Multicast Source Discovery Protocol (MSDP) router must be configured to filter received source-active multicast advertisements for any undesirable multicast groups and sources.</title>
      <description>&lt;VulnDiscussion&gt;The interoperability of BGP extensions for interdomain multicast routing and MSDP enables seamless connectivity of multicast domains between autonomous systems. MP-BGP advertises the unicast prefixes of the multicast sources used by Protocol Independent Multicast (PIM) routers to perform RPF checks and build multicast distribution trees. MSDP is a mechanism used to connect multiple PIM sparse-mode domains, allowing RPs from different domains to share information about active sources. When RPs in peering multicast domains hear about active sources, they can pass on that information to their local receivers, thereby allowing multicast data to be forwarded between the domains. Configuring an import policy to block multicast advertisements for reserved, Martian, single-source multicast, and any other undesirable multicast groups, as well as any source-group (S, G) states with Bogon source addresses, would assist in avoiding unwanted multicast traffic from traversing the core.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001368</ident>
      <fixtext fixref="F-JUNI-RT-000910_fix">Configure the MSDP to implement an import policy to block multicast advertisements for undesirable multicast groups and sources.

Configure the source-active filter to reject undesirable multicast groups and sources as shown in the example below.

[edit policy-options]
set policy-statement SA_IMPORT term BAD_GROUPS from route-filter 224.0.1.2/32 exact
set policy-statement SA_IMPORT term BAD_GROUPS from route-filter 224.77.0.0/16 orlonger
set policy-statement SA_IMPORT term BAD_GROUPS then reject
set policy-statement SA_IMPORT term BAD_SOURCES from source-address-filter x.x.x.x/8 orlonger
set policy-statement SA_IMPORT term BAD_SOURCES from source-address-filter x.x.x.x/16 orlonger
set policy-statement SA_IMPORT term BAD_SOURCES then reject
set policy-statement SA_IMPORT term ACCEPT_OTHERS then accept

Configure the source-active filter to be an import filter.

[edit protocols msdp]
set import SA_IMPORT</fixtext>
      <fix id="F-JUNI-RT-000910_fix" />
      <check system="C-JUNI-RT-000910_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to determine if there is import policy to block source-active multicast advertisements for undesirable multicast groups and sources. 

policy-options {
   …
    …
    …
    }
    policy-statement SA_IMPORT {
        term BAD_GROUPS {
            from {
                route-filter 224.0.1.2/32 exact;
                route-filter 224.77.0.0/16 orlonger;
            }
            then reject;
        }
        term BAD_SOURCES {
            from {
                source-address-filter x.x.x.x /8 orlonger;
                source-address-filter x.x.x.x /8 orlonger;
 
            then accept;
        }
    }

Verify that an import source-active filter has been applied to MSDP.

protocols {
    …
    …
    …
    }
    msdp {
        import SA_IMPORT;

If the router is not configured with an import policy to block undesirable SA multicast advertisements, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000920">
    <title>SRG-NET-000018-RTR-000008</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000920_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000920</version>
      <title>The Juniper Multicast Source Discovery Protocol (MSDP) router must be configured to filter source-active multicast advertisements to external MSDP peers to avoid global visibility of local-only multicast sources and groups.</title>
      <description>&lt;VulnDiscussion&gt;To avoid global visibility of local information, there are a number of source-group (S, G) states in a PIM-SM domain that must not be leaked to another domain, such as multicast sources with private address, administratively scoped multicast addresses, and the auto-RP groups (224.0.1.39 and 224.0.1.40).

Allowing a multicast distribution tree, local to the core, to extend beyond its boundary could enable local multicast traffic to leak into other autonomous systems and customer networks.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001368</ident>
      <fixtext fixref="F-JUNI-RT-000920_fix">Configure the router with an export policy avoid global visibility of local multicast (S, G) states. The example below will avoid exporting multicast active sources belonging to the private network.

[edit policy-options]
set policy-statement SA_EXPORT term INTERNAL_GROUP from route-filter 239.0.0.0/8 orlonger
set policy-statement SA_EXPORT term INTERNAL_GROUP then reject
set policy-statement SA_EXPORT term INTERNAL_ADDR from source-address-filter 10.0.0.0/8 orlonger
set policy-statement SA_EXPORT term INTERNAL_ADDR then reject
set policy-statement SA_EXPORT term ACCEPT_OTHERS then accept

[edit protocols msdp]
set export SA_EXPORT</fixtext>
      <fix id="F-JUNI-RT-000920_fix" />
      <check system="C-JUNI-RT-000920_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to determine if there is export policy to block local source-active multicast advertisements.

Verify that the router is configured with an export policy to filter multicast source-active advertisements.

policy-options {
   …
    …
    …
    }
    policy-statement SA_EXPORT {
        term INTERNAL_GROUP {
            from {
                route-filter 239.0.0.0/8 orlonger;
            }
            then reject;
        }
        term INTERNAL_ADDR {
            from {
                source-address-filter 10.0.0.0/8 orlonger;
            }
            then reject;
        }
        term ACCEPT_OTHERS {
            then accept;
        }
    }

Verify that an export source-active filter has been applied to MSDP.

protocols {
    …
    …
    …
    }
    msdp {
       export SA_IMPORT;

If the router is not configured with an export policy to block local source-active multicast advertisements, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000930">
    <title>SRG-NET-000018-RTR-000009</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000930_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000930</version>
      <title>The Juniper Multicast Source Discovery Protocol (MSDP) router must be configured to limit the amount of source-active messages it accepts on per-peer basis.</title>
      <description>&lt;VulnDiscussion&gt;To reduce any risk of a denial-of-service (DoS) attack from a rogue or misconfigured MSDP router, the router must be configured to limit the number of source-active messages it accepts from each peer.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-001368</ident>
      <fixtext fixref="F-JUNI-RT-000930_fix">Configure the router to limit the amount of source-active messages it accepts from each peer.

[edit protocols msdp group AS25 peer x.x.x.x]
set active-source-limit maximum nnn</fixtext>
      <fix id="F-JUNI-RT-000930_fix" />
      <check system="C-JUNI-RT-000930_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to determine if it is configured to limit the amount of source-active messages it accepts on a per-peer basis.

protocols {
    …
    …
    …
    }
    msdp {
        export SA_EXPORT;
        import SA_IMPORT;
        group AS25 {
            peer x.x.x.x {
                active-source-limit {
                    maximum nnn;
                }

If the router is not configured to limit the source-active messages it accepts, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
  <Group id="JUNI-RT-000940">
    <title>SRG-NET-000512-RTR-000011</title>
    <description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description>
    <Rule id="JUNI-RT-000940_rule" severity="low" weight="10.0">
      <version>JUNI-RT-000940</version>
      <title>The Juniper Multicast Source Discovery Protocol (MSDP) router must be configured to use its loopback address as the source address when originating MSDP traffic.</title>
      <description>&lt;VulnDiscussion&gt;Using a loopback address as the source address offers a multitude of uses for security, access, management, and scalability of MSDP routers. It is easier to construct appropriate ingress filters for router management plane traffic destined to the network management subnet since the source addresses will be from the range used for loopback interfaces instead of a larger range of addresses used for physical interfaces. Log information recorded by authentication and syslog servers will record the router’s loopback address instead of the numerous physical interface addresses.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SecurityOverrideGuidance&gt;&lt;/SecurityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description>
      <ident system="http://iase.disa.mil/cci">CCI-000366</ident>
      <fixtext fixref="F-JUNI-RT-000940_fix">Configure the router to use its loopback address is used as the source address when sending MSDP packets.

[edit protocols msdp]
set group AS_5 peer 5.5.5.5 local-address 2.2.2.2</fixtext>
      <fix id="F-JUNI-RT-000940_fix" />
      <check system="C-JUNI-RT-000940_chk">
        <check-content-ref name="M" href="VMS_XCCDF_Benchmark_SRG.xml" />
        <check-content>Review the router configuration to verify that a loopback address has been configured.

interfaces {
    …
    …
    …
    lo0 {
        unit 0 {
            family inet {
                address 2.2.2.2/32;
            }
        }
    }
}

Verify that the loopback interface is used as the source address for all MSDP packets generated by the router.

protocols {
    msdp {
        group AS25 {
            peer 5.5.5.5 {
                local-address 2.2.2.2;
            }
        }
    }

If the router does not use its loopback address as the source address when originating MSDP traffic, this is a finding.</check-content>
      </check>
    </Rule>
  </Group>
</Benchmark>

